

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sat Jan 16 07:48:12 2021

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_uart_init
    43                           	FNCALL	_main,_uart_tx
    44                           	FNCALL	_main,_lcd_int
    45                           	FNCALL	_main,_lcd_cmd
    46                           	FNCALL	_main,_show
    47                           	FNCALL	_main,_adc
    48                           	FNCALL	_main,_delay
    49                           	FNCALL	_adc,_lcd_cmd
    50                           	FNCALL	_adc,_adc_turb
    51                           	FNCALL	_adc,_adc_ph
    52                           	FNCALL	_adc,_adc_chlor
    53                           	FNCALL	_adc_chlor,___lmul
    54                           	FNCALL	_adc_chlor,___lldiv
    55                           	FNCALL	_adc_chlor,_converter_dispch
    56                           	FNCALL	_adc_chlor,_uart_string
    57                           	FNCALL	_adc_chlor,_converter_uartch
    58                           	FNCALL	_adc_chlor,_delay
    59                           	FNCALL	_adc_ph,___lmul
    60                           	FNCALL	_adc_ph,___lldiv
    61                           	FNCALL	_adc_ph,_converter_dispph
    62                           	FNCALL	_adc_ph,_uart_string
    63                           	FNCALL	_adc_ph,_converter_uartph
    64                           	FNCALL	_adc_ph,_delay
    65                           	FNCALL	_adc_turb,___lmul
    66                           	FNCALL	_adc_turb,___lldiv
    67                           	FNCALL	_adc_turb,_converter_disptu
    68                           	FNCALL	_adc_turb,_uart_string
    69                           	FNCALL	_adc_turb,_converter_uarttu
    70                           	FNCALL	_adc_turb,_delay
    71                           	FNCALL	_converter_dispch,___llmod
    72                           	FNCALL	_converter_dispch,_lcd_dat
    73                           	FNCALL	_converter_disptu,___lldiv
    74                           	FNCALL	_converter_disptu,___llmod
    75                           	FNCALL	_converter_disptu,_lcd_dat
    76                           	FNCALL	_converter_dispph,___lldiv
    77                           	FNCALL	_converter_dispph,___llmod
    78                           	FNCALL	_converter_dispph,_lcd_dat
    79                           	FNCALL	_show,_lcd_dat
    80                           	FNCALL	_lcd_int,_lcd_cmd
    81                           	FNCALL	_converter_uartch,___lldiv
    82                           	FNCALL	_converter_uartch,_uart_tx
    83                           	FNCALL	_converter_uartch,___llmod
    84                           	FNCALL	_converter_uarttu,___lldiv
    85                           	FNCALL	_converter_uarttu,_uart_tx
    86                           	FNCALL	_converter_uarttu,___llmod
    87                           	FNCALL	_converter_uartph,___lldiv
    88                           	FNCALL	_converter_uartph,___llmod
    89                           	FNCALL	_converter_uartph,_uart_tx
    90                           	FNCALL	_lcd_dat,_delay
    91                           	FNCALL	_lcd_cmd,_delay
    92                           	FNCALL	_uart_string,_uart_tx
    93                           	FNROOT	_main
    94                           	global	_ADCON0
    95                           psect	text445,local,class=CODE,delta=2
    96                           global __ptext445
    97  0000                     __ptext445:
    98  001F                     _ADCON0	set	31
    99                           	global	_ADRESH
   100  001E                     _ADRESH	set	30
   101                           	global	_PORTB
   102  0006                     _PORTB	set	6
   103                           	global	_RCREG
   104  001A                     _RCREG	set	26
   105                           	global	_RCSTA
   106  0018                     _RCSTA	set	24
   107                           	global	_TXREG
   108  0019                     _TXREG	set	25
   109                           	global	_CARRY
   110  0018                     _CARRY	set	24
   111                           	global	_GIE
   112  005F                     _GIE	set	95
   113                           	global	_GO_nDONE
   114  00FA                     _GO_nDONE	set	250
   115                           	global	_RC0
   116  0038                     _RC0	set	56
   117                           	global	_RC1
   118  0039                     _RC1	set	57
   119                           	global	_RC2
   120  003A                     _RC2	set	58
   121                           	global	_RCIF
   122  0065                     _RCIF	set	101
   123                           	global	_TXIF
   124  0064                     _TXIF	set	100
   125                           	global	_ADCON1
   126  009F                     _ADCON1	set	159
   127                           	global	_ADRESL
   128  009E                     _ADRESL	set	158
   129                           	global	_SPBRG
   130  0099                     _SPBRG	set	153
   131                           	global	_TRISB
   132  0086                     _TRISB	set	134
   133                           	global	_TRISD
   134  0088                     _TRISD	set	136
   135                           	global	_TXSTA
   136  0098                     _TXSTA	set	152
   137                           	global	_BRGH
   138  04C2                     _BRGH	set	1218
   139                           	global	_TRISA1
   140  0429                     _TRISA1	set	1065
   141                           	global	_TRISA2
   142  042A                     _TRISA2	set	1066
   143                           	global	_TRISA3
   144  042B                     _TRISA3	set	1067
   145                           	global	_TRISC0
   146  0438                     _TRISC0	set	1080
   147                           	global	_TRISC1
   148  0439                     _TRISC1	set	1081
   149                           	global	_TRISC2
   150  043A                     _TRISC2	set	1082
   151                           	global	_TRISC6
   152  043E                     _TRISC6	set	1086
   153                           	global	_TRISC7
   154  043F                     _TRISC7	set	1087
   155                           	global	_EEADR
   156  010D                     _EEADR	set	269
   157                           	global	_EEDATA
   158  010C                     _EEDATA	set	268
   159                           	global	_EECON1
   160  018C                     _EECON1	set	396
   161                           	global	_EECON2
   162  018D                     _EECON2	set	397
   163                           	global	_RD
   164  0C60                     _RD	set	3168
   165                           	global	_WR
   166  0C61                     _WR	set	3169
   167                           	global	_WREN
   168  0C62                     _WREN	set	3170
   169                           psect	strings,class=STRING,delta=2
   170                           global __pstrings
   171  0003                     __pstrings:
   172                           ;	global	stringdir,stringtab,__stringbase
   173  0003                     stringtab:
   174                           ;	String table - string pointers are 1 byte each
   175  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   176  0003  3000               movlw high(stringdir)
   177  0004  008A               movwf pclath
   178  0005  0804               movf fsr,w
   179  0006  0A84               incf fsr
   180  0007  0782               	addwf pc
   181  0008                     __stringbase:
   182  0008  3400               	retlw	0
   183                           psect	strings
   184                           	
   185  0009                     STR_4:	
   186  0009  3454               	retlw	84	;'T'
   187  000A  3475               	retlw	117	;'u'
   188  000B  3472               	retlw	114	;'r'
   189  000C  3462               	retlw	98	;'b'
   190  000D  3469               	retlw	105	;'i'
   191  000E  3464               	retlw	100	;'d'
   192  000F  3469               	retlw	105	;'i'
   193  0010  3474               	retlw	116	;'t'
   194  0011  3479               	retlw	121	;'y'
   195  0012  343A               	retlw	58	;':'
   196  0013  3400               	retlw	0
   197                           psect	strings
   198                           	
   199  0014                     STR_6:	
   200  0014  3443               	retlw	67	;'C'
   201  0015  3468               	retlw	104	;'h'
   202  0016  346C               	retlw	108	;'l'
   203  0017  346F               	retlw	111	;'o'
   204  0018  3472               	retlw	114	;'r'
   205  0019  343A               	retlw	58	;':'
   206  001A  3400               	retlw	0
   207                           psect	strings
   208                           	
   209  001B                     STR_5:	
   210  001B  3470               	retlw	112	;'p'
   211  001C  3448               	retlw	72	;'H'
   212  001D  343A               	retlw	58	;':'
   213  001E  3400               	retlw	0
   214                           psect	strings
   215                           	
   216  001F                     STR_1:	
   217  001F  3450               	retlw	80	;'P'
   218  0020  3448               	retlw	72	;'H'
   219  0021  344F               	retlw	79	;'O'
   220  0022  3400               	retlw	0
   221                           psect	strings
   222                           	
   223  0023                     STR_3:	
   224  0023  3443               	retlw	67	;'C'
   225  0024  344C               	retlw	76	;'L'
   226  0025  344F               	retlw	79	;'O'
   227  0026  3400               	retlw	0
   228                           psect	strings
   229                           	
   230  0027                     STR_2:	
   231  0027  3454               	retlw	84	;'T'
   232  0028  3455               	retlw	85	;'U'
   233  0029  344F               	retlw	79	;'O'
   234  002A  3400               	retlw	0
   235                           psect	strings
   236                           	file	"C:\Users\Aravinth\AppData\Local\Temp\s1oo."
   237                           	line	#
   238                           psect cinit,class=CODE,delta=2
   239                           global start_initialization
   240  0127                     start_initialization:
   241                           
   242                           psect cinit,class=CODE,delta=2
   243                           global end_of_initialization
   244                           
   245                           ;End of C runtime variable initialization code
   246                           
   247  0127                     end_of_initialization:
   248  0127  0183               clrf status
   249  0128  120A  118A  2C94   ljmp _main	;jump to C main() function
   250                           psect	cstackCOMMON,class=COMMON,space=1
   251                           global __pcstackCOMMON
   252  0070                     __pcstackCOMMON:
   253                           	global	?_lcd_cmd
   254  0070                     ?_lcd_cmd:	; 0 bytes @ 0x0
   255                           	global	?_delay
   256  0070                     ?_delay:	; 0 bytes @ 0x0
   257                           	global	?_adc_turb
   258  0070                     ?_adc_turb:	; 0 bytes @ 0x0
   259                           	global	?_adc_ph
   260  0070                     ?_adc_ph:	; 0 bytes @ 0x0
   261                           	global	?_adc_chlor
   262  0070                     ?_adc_chlor:	; 0 bytes @ 0x0
   263                           	global	?_uart_init
   264  0070                     ?_uart_init:	; 0 bytes @ 0x0
   265                           	global	??_uart_init
   266  0070                     ??_uart_init:	; 0 bytes @ 0x0
   267                           	global	?_uart_tx
   268  0070                     ?_uart_tx:	; 0 bytes @ 0x0
   269                           	global	??_uart_tx
   270  0070                     ??_uart_tx:	; 0 bytes @ 0x0
   271                           	global	?_uart_string
   272  0070                     ?_uart_string:	; 0 bytes @ 0x0
   273                           	global	?_lcd_int
   274  0070                     ?_lcd_int:	; 0 bytes @ 0x0
   275                           	global	?_lcd_dat
   276  0070                     ?_lcd_dat:	; 0 bytes @ 0x0
   277                           	global	?_show
   278  0070                     ?_show:	; 0 bytes @ 0x0
   279                           	global	?_main
   280  0070                     ?_main:	; 0 bytes @ 0x0
   281                           	global	?___lmul
   282  0070                     ?___lmul:	; 4 bytes @ 0x0
   283                           	global	uart_tx@ch
   284  0070                     uart_tx@ch:	; 1 bytes @ 0x0
   285                           	global	delay@L
   286  0070                     delay@L:	; 2 bytes @ 0x0
   287                           	global	___lmul@multiplier
   288  0070                     ___lmul@multiplier:	; 4 bytes @ 0x0
   289  0070                     	ds	1
   290                           	global	??_uart_string
   291  0071                     ??_uart_string:	; 0 bytes @ 0x1
   292                           	global	uart_string@str
   293  0071                     uart_string@str:	; 1 bytes @ 0x1
   294  0071                     	ds	1
   295                           	global	??_delay
   296  0072                     ??_delay:	; 0 bytes @ 0x2
   297                           	global	uart_string@k
   298  0072                     uart_string@k:	; 2 bytes @ 0x2
   299  0072                     	ds	1
   300                           	global	delay@i
   301  0073                     delay@i:	; 2 bytes @ 0x3
   302  0073                     	ds	1
   303                           	global	___lmul@multiplicand
   304  0074                     ___lmul@multiplicand:	; 4 bytes @ 0x4
   305  0074                     	ds	1
   306                           	global	delay@j
   307  0075                     delay@j:	; 2 bytes @ 0x5
   308  0075                     	ds	2
   309                           	global	??_lcd_cmd
   310  0077                     ??_lcd_cmd:	; 0 bytes @ 0x7
   311                           	global	??_lcd_dat
   312  0077                     ??_lcd_dat:	; 0 bytes @ 0x7
   313                           	global	lcd_cmd@a
   314  0077                     lcd_cmd@a:	; 1 bytes @ 0x7
   315                           	global	lcd_dat@b
   316  0077                     lcd_dat@b:	; 1 bytes @ 0x7
   317  0077                     	ds	1
   318                           	global	??_lcd_int
   319  0078                     ??_lcd_int:	; 0 bytes @ 0x8
   320                           	global	??_show
   321  0078                     ??_show:	; 0 bytes @ 0x8
   322                           	global	??___lmul
   323  0078                     ??___lmul:	; 0 bytes @ 0x8
   324  0078                     	ds	1
   325                           	global	show@s
   326  0079                     show@s:	; 1 bytes @ 0x9
   327                           	global	___lmul@product
   328  0079                     ___lmul@product:	; 4 bytes @ 0x9
   329  0079                     	ds	4
   330                           	global	??___lldiv
   331  007D                     ??___lldiv:	; 0 bytes @ 0xD
   332  007D                     	ds	1
   333                           	global	??_converter_dispph
   334  007E                     ??_converter_dispph:	; 0 bytes @ 0xE
   335                           	global	??_converter_uartph
   336  007E                     ??_converter_uartph:	; 0 bytes @ 0xE
   337                           	global	??_converter_disptu
   338  007E                     ??_converter_disptu:	; 0 bytes @ 0xE
   339                           	global	??_converter_uarttu
   340  007E                     ??_converter_uarttu:	; 0 bytes @ 0xE
   341                           	global	??_converter_dispch
   342  007E                     ??_converter_dispch:	; 0 bytes @ 0xE
   343                           	global	??_converter_uartch
   344  007E                     ??_converter_uartch:	; 0 bytes @ 0xE
   345                           	global	??_adc
   346  007E                     ??_adc:	; 0 bytes @ 0xE
   347                           	global	??_main
   348  007E                     ??_main:	; 0 bytes @ 0xE
   349                           psect	cstackBANK0,class=BANK0,space=1
   350                           global __pcstackBANK0
   351  0020                     __pcstackBANK0:
   352                           	global	?___lldiv
   353  0020                     ?___lldiv:	; 4 bytes @ 0x0
   354                           	global	___lldiv@divisor
   355  0020                     ___lldiv@divisor:	; 4 bytes @ 0x0
   356  0020                     	ds	4
   357                           	global	___lldiv@dividend
   358  0024                     ___lldiv@dividend:	; 4 bytes @ 0x4
   359  0024                     	ds	4
   360                           	global	___lldiv@quotient
   361  0028                     ___lldiv@quotient:	; 4 bytes @ 0x8
   362  0028                     	ds	4
   363                           	global	___lldiv@counter
   364  002C                     ___lldiv@counter:	; 1 bytes @ 0xC
   365  002C                     	ds	1
   366                           	global	?___llmod
   367  002D                     ?___llmod:	; 4 bytes @ 0xD
   368                           	global	___llmod@divisor
   369  002D                     ___llmod@divisor:	; 4 bytes @ 0xD
   370  002D                     	ds	4
   371                           	global	___llmod@dividend
   372  0031                     ___llmod@dividend:	; 4 bytes @ 0x11
   373  0031                     	ds	4
   374                           	global	??___llmod
   375  0035                     ??___llmod:	; 0 bytes @ 0x15
   376  0035                     	ds	1
   377                           	global	___llmod@counter
   378  0036                     ___llmod@counter:	; 1 bytes @ 0x16
   379  0036                     	ds	1
   380                           	global	?_converter_dispph
   381  0037                     ?_converter_dispph:	; 0 bytes @ 0x17
   382                           	global	?_converter_uartph
   383  0037                     ?_converter_uartph:	; 0 bytes @ 0x17
   384                           	global	?_converter_disptu
   385  0037                     ?_converter_disptu:	; 0 bytes @ 0x17
   386                           	global	?_converter_uarttu
   387  0037                     ?_converter_uarttu:	; 0 bytes @ 0x17
   388                           	global	?_converter_dispch
   389  0037                     ?_converter_dispch:	; 0 bytes @ 0x17
   390                           	global	?_converter_uartch
   391  0037                     ?_converter_uartch:	; 0 bytes @ 0x17
   392                           	global	converter_dispph@b
   393  0037                     converter_dispph@b:	; 4 bytes @ 0x17
   394                           	global	converter_uartph@b
   395  0037                     converter_uartph@b:	; 4 bytes @ 0x17
   396                           	global	converter_disptu@b
   397  0037                     converter_disptu@b:	; 4 bytes @ 0x17
   398                           	global	converter_uarttu@b
   399  0037                     converter_uarttu@b:	; 4 bytes @ 0x17
   400                           	global	converter_dispch@b
   401  0037                     converter_dispch@b:	; 4 bytes @ 0x17
   402                           	global	converter_uartch@b
   403  0037                     converter_uartch@b:	; 4 bytes @ 0x17
   404  0037                     	ds	4
   405                           	global	??_adc_turb
   406  003B                     ??_adc_turb:	; 0 bytes @ 0x1B
   407                           	global	??_adc_ph
   408  003B                     ??_adc_ph:	; 0 bytes @ 0x1B
   409                           	global	??_adc_chlor
   410  003B                     ??_adc_chlor:	; 0 bytes @ 0x1B
   411  003B                     	ds	2
   412                           	global	adc_ph@temp
   413  003D                     adc_ph@temp:	; 4 bytes @ 0x1D
   414                           	global	adc_turb@temp
   415  003D                     adc_turb@temp:	; 4 bytes @ 0x1D
   416                           	global	adc_chlor@temp
   417  003D                     adc_chlor@temp:	; 4 bytes @ 0x1D
   418  003D                     	ds	4
   419                           	global	adc_ph@a
   420  0041                     adc_ph@a:	; 4 bytes @ 0x21
   421                           	global	adc_turb@a
   422  0041                     adc_turb@a:	; 4 bytes @ 0x21
   423                           	global	adc_chlor@a
   424  0041                     adc_chlor@a:	; 4 bytes @ 0x21
   425  0041                     	ds	4
   426                           	global	?_adc
   427  0045                     ?_adc:	; 0 bytes @ 0x25
   428                           	global	adc@i
   429  0045                     adc@i:	; 2 bytes @ 0x25
   430  0045                     	ds	2
   431 ;;Data sizes: Strings 34, constant 0, data 0, bss 0, persistent 0 stack 0
   432 ;;Auto spaces:   Size  Autos    Used
   433 ;; COMMON          14     14      14
   434 ;; BANK0           80     39      39
   435 ;; BANK1           80      0       0
   436 ;; BANK3           96      0       0
   437 ;; BANK2           96      0       0
   438                           
   439 ;;
   440 ;; Pointer list with targets:
   441                           
   442 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   443 ;;
   444 ;; ?___lmul	unsigned long  size(1) Largest target is 0
   445 ;;
   446 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   447 ;;
   448 ;; show@s	PTR unsigned char  size(1) Largest target is 11
   449 ;;		 -> STR_6(CODE[7]), STR_5(CODE[4]), STR_4(CODE[11]), 
   450 ;;
   451 ;; uart_string@str	PTR unsigned char  size(1) Largest target is 4
   452 ;;		 -> STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 
   453 ;;
   454                           
   455                           
   456 ;;
   457 ;; Critical Paths under _main in COMMON
   458 ;;
   459 ;;   _adc_chlor->___lldiv
   460 ;;   _adc_ph->___lldiv
   461 ;;   _adc_turb->___lldiv
   462 ;;   _converter_disptu->___lldiv
   463 ;;   _converter_dispph->___lldiv
   464 ;;   _show->_lcd_dat
   465 ;;   _lcd_int->_lcd_cmd
   466 ;;   _converter_uartch->___lldiv
   467 ;;   _converter_uarttu->___lldiv
   468 ;;   _converter_uartph->___lldiv
   469 ;;   _lcd_dat->_delay
   470 ;;   _lcd_cmd->_delay
   471 ;;   _uart_string->_uart_tx
   472 ;;   ___lldiv->___lmul
   473 ;;   ___llmod->___lldiv
   474 ;;
   475 ;; Critical Paths under _main in BANK0
   476 ;;
   477 ;;   _main->_adc
   478 ;;   _adc->_adc_turb
   479 ;;   _adc->_adc_ph
   480 ;;   _adc->_adc_chlor
   481 ;;   _adc_chlor->_converter_dispch
   482 ;;   _adc_chlor->_converter_uartch
   483 ;;   _adc_ph->_converter_dispph
   484 ;;   _adc_ph->_converter_uartph
   485 ;;   _adc_turb->_converter_disptu
   486 ;;   _adc_turb->_converter_uarttu
   487 ;;   _converter_dispch->___llmod
   488 ;;   _converter_disptu->___llmod
   489 ;;   _converter_dispph->___llmod
   490 ;;   _converter_uartch->___llmod
   491 ;;   _converter_uarttu->___llmod
   492 ;;   _converter_uartph->___llmod
   493 ;;   ___llmod->___lldiv
   494 ;;
   495 ;; Critical Paths under _main in BANK1
   496 ;;
   497 ;;   None.
   498 ;;
   499 ;; Critical Paths under _main in BANK3
   500 ;;
   501 ;;   None.
   502 ;;
   503 ;; Critical Paths under _main in BANK2
   504 ;;
   505 ;;   None.
   506                           
   507 ;;
   508 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   509 ;;
   510                           
   511 ;;
   512 ;;Call Graph Tables:
   513 ;;
   514 ;; ---------------------------------------------------------------------------------
   515 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   516 ;; ---------------------------------------------------------------------------------
   517 ;; (0) _main                                                 2     2      0    4761
   518 ;;                          _uart_init
   519 ;;                            _uart_tx
   520 ;;                            _lcd_int
   521 ;;                            _lcd_cmd
   522 ;;                               _show
   523 ;;                                _adc
   524 ;;                              _delay
   525 ;; ---------------------------------------------------------------------------------
   526 ;; (1) _adc                                                  2     0      2    4260
   527 ;;                                             37 BANK0      2     0      2
   528 ;;                            _lcd_cmd
   529 ;;                           _adc_turb
   530 ;;                             _adc_ph
   531 ;;                          _adc_chlor
   532 ;; ---------------------------------------------------------------------------------
   533 ;; (2) _adc_chlor                                           10    10      0    1252
   534 ;;                                             27 BANK0     10    10      0
   535 ;;                             ___lmul
   536 ;;                            ___lldiv
   537 ;;                   _converter_dispch
   538 ;;                        _uart_string
   539 ;;                   _converter_uartch
   540 ;;                              _delay
   541 ;; ---------------------------------------------------------------------------------
   542 ;; (2) _adc_ph                                              10    10      0    1392
   543 ;;                                             27 BANK0     10    10      0
   544 ;;                             ___lmul
   545 ;;                            ___lldiv
   546 ;;                   _converter_dispph
   547 ;;                        _uart_string
   548 ;;                   _converter_uartph
   549 ;;                              _delay
   550 ;; ---------------------------------------------------------------------------------
   551 ;; (2) _adc_turb                                            14    14      0    1436
   552 ;;                                             27 BANK0     10    10      0
   553 ;;                             ___lmul
   554 ;;                            ___lldiv
   555 ;;                   _converter_disptu
   556 ;;                        _uart_string
   557 ;;                   _converter_uarttu
   558 ;;                              _delay
   559 ;; ---------------------------------------------------------------------------------
   560 ;; (3) _converter_dispch                                     4     0      4     295
   561 ;;                                             23 BANK0      4     0      4
   562 ;;                            ___llmod
   563 ;;                            _lcd_dat
   564 ;; ---------------------------------------------------------------------------------
   565 ;; (3) _converter_disptu                                     4     0      4     479
   566 ;;                                             23 BANK0      4     0      4
   567 ;;                            ___lldiv
   568 ;;                            ___llmod
   569 ;;                            _lcd_dat
   570 ;; ---------------------------------------------------------------------------------
   571 ;; (3) _converter_dispph                                     4     0      4     479
   572 ;;                                             23 BANK0      4     0      4
   573 ;;                            ___lldiv
   574 ;;                            ___llmod
   575 ;;                            _lcd_dat
   576 ;; ---------------------------------------------------------------------------------
   577 ;; (1) _show                                                 2     2      0     159
   578 ;;                                              8 COMMON     2     2      0
   579 ;;                            _lcd_dat
   580 ;; ---------------------------------------------------------------------------------
   581 ;; (1) _lcd_int                                              0     0      0     114
   582 ;;                            _lcd_cmd
   583 ;; ---------------------------------------------------------------------------------
   584 ;; (3) _converter_uartch                                     4     0      4     431
   585 ;;                                             23 BANK0      4     0      4
   586 ;;                            ___lldiv
   587 ;;                            _uart_tx
   588 ;;                            ___llmod
   589 ;; ---------------------------------------------------------------------------------
   590 ;; (3) _converter_uarttu                                     4     0      4     431
   591 ;;                                             23 BANK0      4     0      4
   592 ;;                            ___lldiv
   593 ;;                            _uart_tx
   594 ;;                            ___llmod
   595 ;; ---------------------------------------------------------------------------------
   596 ;; (3) _converter_uartph                                     4     0      4     387
   597 ;;                                             23 BANK0      4     0      4
   598 ;;                            ___lldiv
   599 ;;                            ___llmod
   600 ;;                            _uart_tx
   601 ;; ---------------------------------------------------------------------------------
   602 ;; (4) _lcd_dat                                              1     1      0     114
   603 ;;                                              7 COMMON     1     1      0
   604 ;;                              _delay
   605 ;; ---------------------------------------------------------------------------------
   606 ;; (2) _lcd_cmd                                              1     1      0     114
   607 ;;                                              7 COMMON     1     1      0
   608 ;;                              _delay
   609 ;; ---------------------------------------------------------------------------------
   610 ;; (3) _uart_string                                          3     3      0     112
   611 ;;                                              1 COMMON     3     3      0
   612 ;;                            _uart_tx
   613 ;; ---------------------------------------------------------------------------------
   614 ;; (4) ___lldiv                                             14     6      8     162
   615 ;;                                             13 COMMON     1     1      0
   616 ;;                                              0 BANK0     13     5      8
   617 ;;                             ___lmul (ARG)
   618 ;; ---------------------------------------------------------------------------------
   619 ;; (4) ___llmod                                             10     2      8     159
   620 ;;                                             13 BANK0     10     2      8
   621 ;;                            ___lldiv (ARG)
   622 ;; ---------------------------------------------------------------------------------
   623 ;; (3) ___lmul                                              13     5      8      92
   624 ;;                                              0 COMMON    13     5      8
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (1) _delay                                                7     5      2      92
   627 ;;                                              0 COMMON     7     5      2
   628 ;; ---------------------------------------------------------------------------------
   629 ;; (4) _uart_tx                                              1     1      0      22
   630 ;;                                              0 COMMON     1     1      0
   631 ;; ---------------------------------------------------------------------------------
   632 ;; (1) _uart_init                                            0     0      0       0
   633 ;; ---------------------------------------------------------------------------------
   634 ;; Estimated maximum stack depth 4
   635 ;; ---------------------------------------------------------------------------------
   636                           
   637 ;; Call Graph Graphs:
   638                           
   639 ;; _main (ROOT)
   640 ;;   _uart_init
   641 ;;   _uart_tx
   642 ;;   _lcd_int
   643 ;;     _lcd_cmd
   644 ;;       _delay
   645 ;;   _lcd_cmd
   646 ;;     _delay
   647 ;;   _show
   648 ;;     _lcd_dat
   649 ;;       _delay
   650 ;;   _adc
   651 ;;     _lcd_cmd
   652 ;;       _delay
   653 ;;     _adc_turb
   654 ;;       ___lmul
   655 ;;       ___lldiv
   656 ;;         ___lmul (ARG)
   657 ;;       _converter_disptu
   658 ;;         ___lldiv
   659 ;;           ___lmul (ARG)
   660 ;;         ___llmod
   661 ;;           ___lldiv (ARG)
   662 ;;             ___lmul (ARG)
   663 ;;         _lcd_dat
   664 ;;           _delay
   665 ;;       _uart_string
   666 ;;         _uart_tx
   667 ;;       _converter_uarttu
   668 ;;         ___lldiv
   669 ;;           ___lmul (ARG)
   670 ;;         _uart_tx
   671 ;;         ___llmod
   672 ;;           ___lldiv (ARG)
   673 ;;             ___lmul (ARG)
   674 ;;       _delay
   675 ;;     _adc_ph
   676 ;;       ___lmul
   677 ;;       ___lldiv
   678 ;;         ___lmul (ARG)
   679 ;;       _converter_dispph
   680 ;;         ___lldiv
   681 ;;           ___lmul (ARG)
   682 ;;         ___llmod
   683 ;;           ___lldiv (ARG)
   684 ;;             ___lmul (ARG)
   685 ;;         _lcd_dat
   686 ;;           _delay
   687 ;;       _uart_string
   688 ;;         _uart_tx
   689 ;;       _converter_uartph
   690 ;;         ___lldiv
   691 ;;           ___lmul (ARG)
   692 ;;         ___llmod
   693 ;;           ___lldiv (ARG)
   694 ;;             ___lmul (ARG)
   695 ;;         _uart_tx
   696 ;;       _delay
   697 ;;     _adc_chlor
   698 ;;       ___lmul
   699 ;;       ___lldiv
   700 ;;         ___lmul (ARG)
   701 ;;       _converter_dispch
   702 ;;         ___llmod
   703 ;;           ___lldiv (ARG)
   704 ;;             ___lmul (ARG)
   705 ;;         _lcd_dat
   706 ;;           _delay
   707 ;;       _uart_string
   708 ;;         _uart_tx
   709 ;;       _converter_uartch
   710 ;;         ___lldiv
   711 ;;           ___lmul (ARG)
   712 ;;         _uart_tx
   713 ;;         ___llmod
   714 ;;           ___lldiv (ARG)
   715 ;;             ___lmul (ARG)
   716 ;;       _delay
   717 ;;   _delay
   718 ;;
   719                           
   720 ;; Address spaces:
   721                           
   722 ;;Name               Size   Autos  Total    Cost      Usage
   723 ;;BITCOMMON            E      0       0       0        0.0%
   724 ;;EEDATA             100      0       0       0        0.0%
   725 ;;NULL                 0      0       0       0        0.0%
   726 ;;CODE                 0      0       0       0        0.0%
   727 ;;COMMON               E      E       E       1      100.0%
   728 ;;BITSFR0              0      0       0       1        0.0%
   729 ;;SFR0                 0      0       0       1        0.0%
   730 ;;BITSFR1              0      0       0       2        0.0%
   731 ;;SFR1                 0      0       0       2        0.0%
   732 ;;STACK                0      0       5       2        0.0%
   733 ;;ABS                  0      0       0       3        0.0%
   734 ;;BITBANK0            50      0       0       4        0.0%
   735 ;;BITSFR3              0      0       0       4        0.0%
   736 ;;SFR3                 0      0       0       4        0.0%
   737 ;;BANK0               50     27      27       5       48.8%
   738 ;;BITSFR2              0      0       0       5        0.0%
   739 ;;SFR2                 0      0       0       5        0.0%
   740 ;;BITBANK1            50      0       0       6        0.0%
   741 ;;BANK1               50      0       0       7        0.0%
   742 ;;BITBANK3            60      0       0       8        0.0%
   743 ;;BANK3               60      0       0       9        0.0%
   744 ;;BITBANK2            60      0       0      10        0.0%
   745 ;;BANK2               60      0       0      11        0.0%
   746 ;;DATA                 0      0       0      12        0.0%
   747                           
   748                           	global	_main
   749                           psect	maintext,global,class=CODE,delta=2
   750                           global __pmaintext
   751  0494                     __pmaintext:
   752                           
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 7 in file "Outlet controller.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  i               2    0        int 
   760 ;; Return value:  Size  Location     Type
   761 ;;		None               void
   762 ;; Registers used:
   763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 17F/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0
   771 ;;      Temps:          0       0       0       0       0
   772 ;;      Totals:         0       0       0       0       0
   773 ;;Total ram usage:        0 bytes
   774 ;; Hardware stack levels required when called:    5
   775 ;; This function calls:
   776 ;;		_uart_init
   777 ;;		_uart_tx
   778 ;;		_lcd_int
   779 ;;		_lcd_cmd
   780 ;;		_show
   781 ;;		_adc
   782 ;;		_delay
   783 ;; This function is called by:
   784 ;;		Startup code after reset
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           psect	maintext
   788                           	file	"Outlet controller.c"
   789                           	line	7
   790                           	global	__size_of_main
   791  0082                     	__size_of_main	equ	__end_of_main-_main
   792                           	
   793  0494                     _main:	
   794                           	opt	stack 3
   795                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   796                           	line	9
   797                           	
   798  0494                     l3549:	
   799                           ;Outlet controller.c: 8: int i;
   800                           ;Outlet controller.c: 9: TRISB=0X00;
   801  0494  1683               	bsf	status, 5	;RP0=1, select bank1
   802  0495  1303               	bcf	status, 6	;RP1=0, select bank1
   803  0496  0186               	clrf	(134)^080h	;volatile
   804                           	line	10
   805                           	
   806  0497                     l3551:	
   807                           ;Outlet controller.c: 10: TRISC6=0;
   808  0497  1307               	bcf	(1086/8)^080h,(1086)&7
   809                           	line	11
   810                           	
   811  0498                     l3553:	
   812                           ;Outlet controller.c: 11: TRISC7=1;
   813  0498  1787               	bsf	(1087/8)^080h,(1087)&7
   814                           	line	12
   815                           	
   816  0499                     l3555:	
   817                           ;Outlet controller.c: 12: TRISC0=0;
   818  0499  1007               	bcf	(1080/8)^080h,(1080)&7
   819                           	line	13
   820                           	
   821  049A                     l3557:	
   822                           ;Outlet controller.c: 13: TRISC1=0;
   823  049A  1087               	bcf	(1081/8)^080h,(1081)&7
   824                           	line	14
   825                           	
   826  049B                     l3559:	
   827                           ;Outlet controller.c: 14: TRISC2=0;
   828  049B  1107               	bcf	(1082/8)^080h,(1082)&7
   829                           	line	15
   830                           ;Outlet controller.c: 15: TRISD=0;
   831  049C  0188               	clrf	(136)^080h	;volatile
   832                           	line	16
   833                           	
   834  049D                     l3561:	
   835                           ;Outlet controller.c: 16: TRISA1=1;
   836  049D  1485               	bsf	(1065/8)^080h,(1065)&7
   837                           	line	17
   838                           	
   839  049E                     l3563:	
   840                           ;Outlet controller.c: 17: TRISA2=1;
   841  049E  1505               	bsf	(1066/8)^080h,(1066)&7
   842                           	line	18
   843                           	
   844  049F                     l3565:	
   845                           ;Outlet controller.c: 18: TRISA3=1;
   846  049F  1585               	bsf	(1067/8)^080h,(1067)&7
   847                           	line	19
   848                           	
   849  04A0                     l3567:	
   850                           ;Outlet controller.c: 19: uart_init();
   851  04A0  120A  118A  2137   	fcall	_uart_init
              120A  118A         
   852                           	line	20
   853                           	
   854  04A5                     l3569:	
   855                           ;Outlet controller.c: 20: uart_tx('h');
   856  04A5  3068               	movlw	(068h)
   857  04A6  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
   858                           	line	21
   859                           	
   860  04AB                     l3571:	
   861                           ;Outlet controller.c: 21: lcd_int();
   862  04AB  120A  118A  216F   	fcall	_lcd_int
              120A  118A         
   863                           	line	22
   864                           	
   865  04B0                     l3573:	
   866                           ;Outlet controller.c: 22: lcd_cmd(0x80);
   867  04B0  3080               	movlw	(080h)
   868  04B1  120A  118A  2145   	fcall	_lcd_cmd
              120A  118A         
   869                           	line	23
   870                           	
   871  04B6                     l3575:	
   872                           ;Outlet controller.c: 23: show("Turbidity:");
   873  04B6  3001               	movlw	((STR_4-__stringbase))&0ffh
   874  04B7  120A  118A  2188   	fcall	_show
              120A  118A         
   875                           	line	24
   876                           	
   877  04BC                     l3577:	
   878                           ;Outlet controller.c: 24: lcd_cmd(0xc0);
   879  04BC  30C0               	movlw	(0C0h)
   880  04BD  120A  118A  2145   	fcall	_lcd_cmd
              120A  118A         
   881                           	line	25
   882                           	
   883  04C2                     l3579:	
   884                           ;Outlet controller.c: 25: show("pH:");
   885  04C2  3013               	movlw	((STR_5-__stringbase))&0ffh
   886  04C3  120A  118A  2188   	fcall	_show
              120A  118A         
   887                           	line	26
   888                           	
   889  04C8                     l3581:	
   890                           ;Outlet controller.c: 26: lcd_cmd(0xc6);
   891  04C8  30C6               	movlw	(0C6h)
   892  04C9  120A  118A  2145   	fcall	_lcd_cmd
              120A  118A         
   893                           	line	27
   894                           	
   895  04CE                     l3583:	
   896                           ;Outlet controller.c: 27: show("Chlor:");
   897  04CE  300C               	movlw	((STR_6-__stringbase))&0ffh
   898  04CF  120A  118A  2188   	fcall	_show
              120A  118A         
   899  04D4  2CD5               	goto	l3585
   900                           	line	28
   901                           ;Outlet controller.c: 28: while(1)
   902                           	
   903  04D5                     l793:	
   904                           	line	33
   905                           	
   906  04D5                     l3585:	
   907                           ;Outlet controller.c: 29: {
   908                           ;Outlet controller.c: 33: adc(0);
   909  04D5  3000               	movlw	low(0)
   910  04D6  1283               	bcf	status, 5	;RP0=0, select bank0
   911  04D7  1303               	bcf	status, 6	;RP1=0, select bank0
   912  04D8  00C5               	movwf	(?_adc)
   913  04D9  3000               	movlw	high(0)
   914  04DA  00C6               	movwf	((?_adc))+1
   915  04DB  120A  118A  222F   	fcall	_adc
              120A  118A         
   916                           	line	34
   917                           	
   918  04E0                     l3587:	
   919                           ;Outlet controller.c: 34: delay(350);
   920  04E0  305E               	movlw	low(015Eh)
   921  04E1  00F0               	movwf	(?_delay)
   922  04E2  3001               	movlw	high(015Eh)
   923  04E3  00F1               	movwf	((?_delay))+1
   924  04E4  120A  118A  21F1   	fcall	_delay
              120A  118A         
   925                           	line	35
   926                           	
   927  04E9                     l3589:	
   928                           ;Outlet controller.c: 35: adc(1);
   929  04E9  3001               	movlw	low(01h)
   930  04EA  1283               	bcf	status, 5	;RP0=0, select bank0
   931  04EB  1303               	bcf	status, 6	;RP1=0, select bank0
   932  04EC  00C5               	movwf	(?_adc)
   933  04ED  3000               	movlw	high(01h)
   934  04EE  00C6               	movwf	((?_adc))+1
   935  04EF  120A  118A  222F   	fcall	_adc
              120A  118A         
   936                           	line	36
   937                           	
   938  04F4                     l3591:	
   939                           ;Outlet controller.c: 36: delay(350);
   940  04F4  305E               	movlw	low(015Eh)
   941  04F5  00F0               	movwf	(?_delay)
   942  04F6  3001               	movlw	high(015Eh)
   943  04F7  00F1               	movwf	((?_delay))+1
   944  04F8  120A  118A  21F1   	fcall	_delay
              120A  118A         
   945                           	line	37
   946                           	
   947  04FD                     l3593:	
   948                           ;Outlet controller.c: 37: adc(2);
   949  04FD  3002               	movlw	low(02h)
   950  04FE  1283               	bcf	status, 5	;RP0=0, select bank0
   951  04FF  1303               	bcf	status, 6	;RP1=0, select bank0
   952  0500  00C5               	movwf	(?_adc)
   953  0501  3000               	movlw	high(02h)
   954  0502  00C6               	movwf	((?_adc))+1
   955  0503  120A  118A  222F   	fcall	_adc
              120A  118A         
   956                           	line	38
   957                           	
   958  0508                     l3595:	
   959                           ;Outlet controller.c: 38: delay(350);
   960  0508  305E               	movlw	low(015Eh)
   961  0509  00F0               	movwf	(?_delay)
   962  050A  3001               	movlw	high(015Eh)
   963  050B  00F1               	movwf	((?_delay))+1
   964  050C  120A  118A  21F1   	fcall	_delay
              120A  118A         
   965  0511  2CD5               	goto	l3585
   966                           	line	41
   967                           	
   968  0512                     l794:	
   969                           	line	28
   970  0512  2CD5               	goto	l3585
   971                           	
   972  0513                     l795:	
   973                           	line	42
   974                           	
   975  0513                     l796:	
   976                           	global	start
   977  0513  120A  118A  2800   	ljmp	start
   978                           	opt stack 0
   979                           GLOBAL	__end_of_main
   980  0516                     	__end_of_main:
   981 ;; =============== function _main ends ============
   982                           
   983                           	signat	_main,88
   984                           	global	_adc
   985                           psect	text446,local,class=CODE,delta=2
   986                           global __ptext446
   987  022F                     __ptext446:
   988                           
   989 ;; *************** function _adc *****************
   990 ;; Defined at:
   991 ;;		line 12 in file "ADC.h"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  i               2   37[BANK0 ] int 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;		None
   996 ;; Return value:  Size  Location     Type
   997 ;;		None               void
   998 ;; Registers used:
   999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         0       2       0       0       0
  1006 ;;      Locals:         0       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0
  1008 ;;      Totals:         0       2       0       0       0
  1009 ;;Total ram usage:        2 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    4
  1012 ;; This function calls:
  1013 ;;		_lcd_cmd
  1014 ;;		_adc_turb
  1015 ;;		_adc_ph
  1016 ;;		_adc_chlor
  1017 ;; This function is called by:
  1018 ;;		_main
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           psect	text446
  1022                           	file	"ADC.h"
  1023                           	line	12
  1024                           	global	__size_of_adc
  1025  0045                     	__size_of_adc	equ	__end_of_adc-_adc
  1026                           	
  1027  022F                     _adc:	
  1028                           	opt	stack 3
  1029                           ; Regs used in _adc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1030                           	line	13
  1031                           	
  1032  022F                     l3525:	
  1033                           ;ADC.h: 13: if(i==0)
  1034  022F  1283               	bcf	status, 5	;RP0=0, select bank0
  1035  0230  1303               	bcf	status, 6	;RP1=0, select bank0
  1036  0231  0846               	movf	((adc@i+1)),w
  1037  0232  0445               	iorwf	((adc@i)),w
  1038  0233  1D03               	skipz
  1039  0234  2A36               	goto	u2621
  1040  0235  2A37               	goto	u2620
  1041  0236                     u2621:
  1042  0236  2A45               	goto	l3533
  1043  0237                     u2620:
  1044                           	line	18
  1045                           	
  1046  0237                     l3527:	
  1047                           ;ADC.h: 14: {
  1048                           ;ADC.h: 18: ADCON0=0X4D;
  1049  0237  304D               	movlw	(04Dh)
  1050  0238  009F               	movwf	(31)	;volatile
  1051                           	line	19
  1052                           	
  1053  0239                     l3529:	
  1054                           ;ADC.h: 19: lcd_cmd(0x8b);
  1055  0239  308B               	movlw	(08Bh)
  1056  023A  120A  118A  2145   	fcall	_lcd_cmd
              120A  118A         
  1057                           	line	20
  1058                           	
  1059  023F                     l3531:	
  1060                           ;ADC.h: 20: adc_turb();
  1061  023F  120A  118A  2516   	fcall	_adc_turb
              120A  118A         
  1062  0244  2A45               	goto	l3533
  1063                           	line	21
  1064                           	
  1065  0245                     l751:	
  1066                           	line	22
  1067                           	
  1068  0245                     l3533:	
  1069                           ;ADC.h: 21: }
  1070                           ;ADC.h: 22: if(i==1)
  1071  0245  3001               	movlw	01h
  1072  0246  1283               	bcf	status, 5	;RP0=0, select bank0
  1073  0247  1303               	bcf	status, 6	;RP1=0, select bank0
  1074  0248  0645               	xorwf	(adc@i),w
  1075  0249  0446               	iorwf	(adc@i+1),w
  1076  024A  1D03               	skipz
  1077  024B  2A4D               	goto	u2631
  1078  024C  2A4E               	goto	u2630
  1079  024D                     u2631:
  1080  024D  2A5C               	goto	l3541
  1081  024E                     u2630:
  1082                           	line	26
  1083                           	
  1084  024E                     l3535:	
  1085                           ;ADC.h: 23: {
  1086                           ;ADC.h: 26: ADCON0=0X55;
  1087  024E  3055               	movlw	(055h)
  1088  024F  009F               	movwf	(31)	;volatile
  1089                           	line	27
  1090                           	
  1091  0250                     l3537:	
  1092                           ;ADC.h: 27: lcd_cmd(0xc3);
  1093  0250  30C3               	movlw	(0C3h)
  1094  0251  120A  118A  2145   	fcall	_lcd_cmd
              120A  118A         
  1095                           	line	28
  1096                           	
  1097  0256                     l3539:	
  1098                           ;ADC.h: 28: adc_ph();
  1099  0256  120A  118A  259A   	fcall	_adc_ph
              120A  118A         
  1100  025B  2A5C               	goto	l3541
  1101                           	line	29
  1102                           	
  1103  025C                     l752:	
  1104                           	line	30
  1105                           	
  1106  025C                     l3541:	
  1107                           ;ADC.h: 29: }
  1108                           ;ADC.h: 30: if(i==2)
  1109  025C  3002               	movlw	02h
  1110  025D  1283               	bcf	status, 5	;RP0=0, select bank0
  1111  025E  1303               	bcf	status, 6	;RP1=0, select bank0
  1112  025F  0645               	xorwf	(adc@i),w
  1113  0260  0446               	iorwf	(adc@i+1),w
  1114  0261  1D03               	skipz
  1115  0262  2A64               	goto	u2641
  1116  0263  2A65               	goto	u2640
  1117  0264                     u2641:
  1118  0264  2A73               	goto	l754
  1119  0265                     u2640:
  1120                           	line	32
  1121                           	
  1122  0265                     l3543:	
  1123                           ;ADC.h: 31: {
  1124                           ;ADC.h: 32: ADCON0=0X5D;
  1125  0265  305D               	movlw	(05Dh)
  1126  0266  009F               	movwf	(31)	;volatile
  1127                           	line	33
  1128                           	
  1129  0267                     l3545:	
  1130                           ;ADC.h: 33: lcd_cmd(0xcc);
  1131  0267  30CC               	movlw	(0CCh)
  1132  0268  120A  118A  2145   	fcall	_lcd_cmd
              120A  118A         
  1133                           	line	34
  1134                           	
  1135  026D                     l3547:	
  1136                           ;ADC.h: 34: adc_chlor();
  1137  026D  120A  118A  261E   	fcall	_adc_chlor
              120A  118A         
  1138  0272  2A73               	goto	l754
  1139                           	line	39
  1140                           	
  1141  0273                     l753:	
  1142                           	line	41
  1143                           	
  1144  0273                     l754:	
  1145  0273  0008               	return
  1146                           	opt stack 0
  1147                           GLOBAL	__end_of_adc
  1148  0274                     	__end_of_adc:
  1149 ;; =============== function _adc ends ============
  1150                           
  1151                           	signat	_adc,4216
  1152                           	global	_adc_chlor
  1153                           psect	text447,local,class=CODE,delta=2
  1154                           global __ptext447
  1155  061E                     __ptext447:
  1156                           
  1157 ;; *************** function _adc_chlor *****************
  1158 ;; Defined at:
  1159 ;;		line 78 in file "ADC.h"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  a               4   33[BANK0 ] unsigned long 
  1164 ;;  temp            4   29[BANK0 ] unsigned long 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;		None               void
  1167 ;; Registers used:
  1168 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       0       0       0       0
  1175 ;;      Locals:         0       8       0       0       0
  1176 ;;      Temps:          0       2       0       0       0
  1177 ;;      Totals:         0      10       0       0       0
  1178 ;;Total ram usage:       10 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    3
  1181 ;; This function calls:
  1182 ;;		___lmul
  1183 ;;		___lldiv
  1184 ;;		_converter_dispch
  1185 ;;		_uart_string
  1186 ;;		_converter_uartch
  1187 ;;		_delay
  1188 ;; This function is called by:
  1189 ;;		_adc
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           psect	text447
  1193                           	file	"ADC.h"
  1194                           	line	78
  1195                           	global	__size_of_adc_chlor
  1196  0084                     	__size_of_adc_chlor	equ	__end_of_adc_chlor-_adc_chlor
  1197                           	
  1198  061E                     _adc_chlor:	
  1199                           	opt	stack 3
  1200                           ; Regs used in _adc_chlor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1201                           	line	80
  1202                           	
  1203  061E                     l3511:	
  1204                           ;ADC.h: 79: unsigned long int temp,a;
  1205                           ;ADC.h: 80: ADCON1=0x80;
  1206  061E  3080               	movlw	(080h)
  1207  061F  1683               	bsf	status, 5	;RP0=1, select bank1
  1208  0620  1303               	bcf	status, 6	;RP1=0, select bank1
  1209  0621  009F               	movwf	(159)^080h	;volatile
  1210                           	line	82
  1211                           ;ADC.h: 82: while(GO_nDONE==1);
  1212  0622  2E23               	goto	l769
  1213                           	
  1214  0623                     l770:	
  1215                           	
  1216  0623                     l769:	
  1217  0623  1283               	bcf	status, 5	;RP0=0, select bank0
  1218  0624  191F               	btfsc	(250/8),(250)&7
  1219  0625  2E27               	goto	u2611
  1220  0626  2E28               	goto	u2610
  1221  0627                     u2611:
  1222  0627  2E23               	goto	l769
  1223  0628                     u2610:
  1224  0628  2E29               	goto	l3513
  1225                           	
  1226  0629                     l771:	
  1227                           	line	83
  1228                           	
  1229  0629                     l3513:	
  1230                           ;ADC.h: 83: temp=((ADRESH<<8)+(ADRESL));
  1231  0629  081E               	movf	(30),w	;volatile
  1232  062A  00BB               	movwf	(??_adc_chlor+0)+0
  1233  062B  01BC               	clrf	(??_adc_chlor+0)+0+1
  1234  062C  083B               	movf	(??_adc_chlor+0)+0,w
  1235  062D  00BC               	movwf	(??_adc_chlor+0)+1
  1236  062E  01BB               	clrf	(??_adc_chlor+0)+0
  1237  062F  1683               	bsf	status, 5	;RP0=1, select bank1
  1238  0630  1303               	bcf	status, 6	;RP1=0, select bank1
  1239  0631  081E               	movf	(158)^080h,w	;volatile
  1240  0632  1283               	bcf	status, 5	;RP0=0, select bank0
  1241  0633  1303               	bcf	status, 6	;RP1=0, select bank0
  1242  0634  073B               	addwf	0+(??_adc_chlor+0)+0,w
  1243  0635  00BD               	movwf	(adc_chlor@temp)
  1244  0636  3000               	movlw	0
  1245  0637  1803               	skipnc
  1246  0638  3001               	movlw	1
  1247  0639  073C               	addwf	1+(??_adc_chlor+0)+0,w
  1248  063A  00BE               	movwf	1+(adc_chlor@temp)
  1249  063B  01BF               	clrf	(adc_chlor@temp)+2
  1250  063C  1BBE               	btfsc	(adc_chlor@temp)+1,7
  1251  063D  03BF               	decf	2+(adc_chlor@temp),f
  1252  063E  083F               	movf	(adc_chlor@temp)+2,w
  1253  063F  00C0               	movwf	3+(adc_chlor@temp)
  1254                           	line	84
  1255                           	
  1256  0640                     l3515:	
  1257                           ;ADC.h: 84: a=((temp*5)/1023);
  1258  0640  3000               	movlw	0
  1259  0641  00A3               	movwf	(?___lldiv+3)
  1260  0642  3000               	movlw	0
  1261  0643  00A2               	movwf	(?___lldiv+2)
  1262  0644  3003               	movlw	03h
  1263  0645  00A1               	movwf	(?___lldiv+1)
  1264  0646  30FF               	movlw	0FFh
  1265  0647  00A0               	movwf	(?___lldiv)
  1266                           
  1267  0648  0840               	movf	(adc_chlor@temp+3),w
  1268  0649  00F3               	movwf	(?___lmul+3)
  1269  064A  083F               	movf	(adc_chlor@temp+2),w
  1270  064B  00F2               	movwf	(?___lmul+2)
  1271  064C  083E               	movf	(adc_chlor@temp+1),w
  1272  064D  00F1               	movwf	(?___lmul+1)
  1273  064E  083D               	movf	(adc_chlor@temp),w
  1274  064F  00F0               	movwf	(?___lmul)
  1275                           
  1276  0650  3000               	movlw	0
  1277  0651  00F7               	movwf	3+(?___lmul)+04h
  1278  0652  3000               	movlw	0
  1279  0653  00F6               	movwf	2+(?___lmul)+04h
  1280  0654  3000               	movlw	0
  1281  0655  00F5               	movwf	1+(?___lmul)+04h
  1282  0656  3005               	movlw	05h
  1283  0657  00F4               	movwf	0+(?___lmul)+04h
  1284                           
  1285  0658  120A  118A  2274   	fcall	___lmul
              120A  118A         
  1286  065D  0873               	movf	(3+(?___lmul)),w
  1287  065E  1283               	bcf	status, 5	;RP0=0, select bank0
  1288  065F  1303               	bcf	status, 6	;RP1=0, select bank0
  1289  0660  00A7               	movwf	3+(?___lldiv)+04h
  1290  0661  0872               	movf	(2+(?___lmul)),w
  1291  0662  00A6               	movwf	2+(?___lldiv)+04h
  1292  0663  0871               	movf	(1+(?___lmul)),w
  1293  0664  00A5               	movwf	1+(?___lldiv)+04h
  1294  0665  0870               	movf	(0+(?___lmul)),w
  1295  0666  00A4               	movwf	0+(?___lldiv)+04h
  1296                           
  1297  0667  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  1298  066C  1283               	bcf	status, 5	;RP0=0, select bank0
  1299  066D  1303               	bcf	status, 6	;RP1=0, select bank0
  1300  066E  0823               	movf	(3+(?___lldiv)),w
  1301  066F  00C4               	movwf	(adc_chlor@a+3)
  1302  0670  0822               	movf	(2+(?___lldiv)),w
  1303  0671  00C3               	movwf	(adc_chlor@a+2)
  1304  0672  0821               	movf	(1+(?___lldiv)),w
  1305  0673  00C2               	movwf	(adc_chlor@a+1)
  1306  0674  0820               	movf	(0+(?___lldiv)),w
  1307  0675  00C1               	movwf	(adc_chlor@a)
  1308                           
  1309                           	line	85
  1310                           	
  1311  0676                     l3517:	
  1312                           ;ADC.h: 85: converter_dispch(a);
  1313  0676  0844               	movf	(adc_chlor@a+3),w
  1314  0677  00BA               	movwf	(?_converter_dispch+3)
  1315  0678  0843               	movf	(adc_chlor@a+2),w
  1316  0679  00B9               	movwf	(?_converter_dispch+2)
  1317  067A  0842               	movf	(adc_chlor@a+1),w
  1318  067B  00B8               	movwf	(?_converter_dispch+1)
  1319  067C  0841               	movf	(adc_chlor@a),w
  1320  067D  00B7               	movwf	(?_converter_dispch)
  1321                           
  1322  067E  120A  118A  21A9   	fcall	_converter_dispch
              120A  118A         
  1323                           	line	86
  1324                           	
  1325  0683                     l3519:	
  1326                           ;ADC.h: 86: uart_string("CLO");
  1327  0683  301B               	movlw	((STR_3-__stringbase))&0ffh
  1328  0684  120A  118A  21CA   	fcall	_uart_string
              120A  118A         
  1329                           	line	87
  1330                           	
  1331  0689                     l3521:	
  1332                           ;ADC.h: 87: converter_uartch(a);
  1333  0689  1283               	bcf	status, 5	;RP0=0, select bank0
  1334  068A  1303               	bcf	status, 6	;RP1=0, select bank0
  1335  068B  0844               	movf	(adc_chlor@a+3),w
  1336  068C  00BA               	movwf	(?_converter_uartch+3)
  1337  068D  0843               	movf	(adc_chlor@a+2),w
  1338  068E  00B9               	movwf	(?_converter_uartch+2)
  1339  068F  0842               	movf	(adc_chlor@a+1),w
  1340  0690  00B8               	movwf	(?_converter_uartch+1)
  1341  0691  0841               	movf	(adc_chlor@a),w
  1342  0692  00B7               	movwf	(?_converter_uartch)
  1343                           
  1344  0693  120A  118A  2751   	fcall	_converter_uartch
              120A  118A         
  1345                           	line	92
  1346                           	
  1347  0698                     l3523:	
  1348                           ;ADC.h: 92: delay(50);
  1349  0698  3032               	movlw	low(032h)
  1350  0699  00F0               	movwf	(?_delay)
  1351  069A  3000               	movlw	high(032h)
  1352  069B  00F1               	movwf	((?_delay))+1
  1353  069C  120A  118A  21F1   	fcall	_delay
              120A  118A         
  1354                           	line	93
  1355                           	
  1356  06A1                     l772:	
  1357  06A1  0008               	return
  1358                           	opt stack 0
  1359                           GLOBAL	__end_of_adc_chlor
  1360  06A2                     	__end_of_adc_chlor:
  1361 ;; =============== function _adc_chlor ends ============
  1362                           
  1363                           	signat	_adc_chlor,88
  1364                           	global	_adc_ph
  1365                           psect	text448,local,class=CODE,delta=2
  1366                           global __ptext448
  1367  059A                     __ptext448:
  1368                           
  1369 ;; *************** function _adc_ph *****************
  1370 ;; Defined at:
  1371 ;;		line 43 in file "ADC.h"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  a               4   33[BANK0 ] unsigned long 
  1376 ;;  temp            4   29[BANK0 ] unsigned long 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;		None               void
  1379 ;; Registers used:
  1380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       0       0       0       0
  1387 ;;      Locals:         0       8       0       0       0
  1388 ;;      Temps:          0       2       0       0       0
  1389 ;;      Totals:         0      10       0       0       0
  1390 ;;Total ram usage:       10 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; Hardware stack levels required when called:    3
  1393 ;; This function calls:
  1394 ;;		___lmul
  1395 ;;		___lldiv
  1396 ;;		_converter_dispph
  1397 ;;		_uart_string
  1398 ;;		_converter_uartph
  1399 ;;		_delay
  1400 ;; This function is called by:
  1401 ;;		_adc
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           psect	text448
  1405                           	file	"ADC.h"
  1406                           	line	43
  1407                           	global	__size_of_adc_ph
  1408  0084                     	__size_of_adc_ph	equ	__end_of_adc_ph-_adc_ph
  1409                           	
  1410  059A                     _adc_ph:	
  1411                           	opt	stack 3
  1412                           ; Regs used in _adc_ph: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1413                           	line	45
  1414                           	
  1415  059A                     l3497:	
  1416                           ;ADC.h: 44: unsigned long int temp,a;
  1417                           ;ADC.h: 45: ADCON1=0x80;
  1418  059A  3080               	movlw	(080h)
  1419  059B  1683               	bsf	status, 5	;RP0=1, select bank1
  1420  059C  1303               	bcf	status, 6	;RP1=0, select bank1
  1421  059D  009F               	movwf	(159)^080h	;volatile
  1422                           	line	47
  1423                           ;ADC.h: 47: while(GO_nDONE==1);
  1424  059E  2D9F               	goto	l757
  1425                           	
  1426  059F                     l758:	
  1427                           	
  1428  059F                     l757:	
  1429  059F  1283               	bcf	status, 5	;RP0=0, select bank0
  1430  05A0  191F               	btfsc	(250/8),(250)&7
  1431  05A1  2DA3               	goto	u2601
  1432  05A2  2DA4               	goto	u2600
  1433  05A3                     u2601:
  1434  05A3  2D9F               	goto	l757
  1435  05A4                     u2600:
  1436  05A4  2DA5               	goto	l3499
  1437                           	
  1438  05A5                     l759:	
  1439                           	line	48
  1440                           	
  1441  05A5                     l3499:	
  1442                           ;ADC.h: 48: temp=((ADRESH<<8)+(ADRESL));
  1443  05A5  081E               	movf	(30),w	;volatile
  1444  05A6  00BB               	movwf	(??_adc_ph+0)+0
  1445  05A7  01BC               	clrf	(??_adc_ph+0)+0+1
  1446  05A8  083B               	movf	(??_adc_ph+0)+0,w
  1447  05A9  00BC               	movwf	(??_adc_ph+0)+1
  1448  05AA  01BB               	clrf	(??_adc_ph+0)+0
  1449  05AB  1683               	bsf	status, 5	;RP0=1, select bank1
  1450  05AC  1303               	bcf	status, 6	;RP1=0, select bank1
  1451  05AD  081E               	movf	(158)^080h,w	;volatile
  1452  05AE  1283               	bcf	status, 5	;RP0=0, select bank0
  1453  05AF  1303               	bcf	status, 6	;RP1=0, select bank0
  1454  05B0  073B               	addwf	0+(??_adc_ph+0)+0,w
  1455  05B1  00BD               	movwf	(adc_ph@temp)
  1456  05B2  3000               	movlw	0
  1457  05B3  1803               	skipnc
  1458  05B4  3001               	movlw	1
  1459  05B5  073C               	addwf	1+(??_adc_ph+0)+0,w
  1460  05B6  00BE               	movwf	1+(adc_ph@temp)
  1461  05B7  01BF               	clrf	(adc_ph@temp)+2
  1462  05B8  1BBE               	btfsc	(adc_ph@temp)+1,7
  1463  05B9  03BF               	decf	2+(adc_ph@temp),f
  1464  05BA  083F               	movf	(adc_ph@temp)+2,w
  1465  05BB  00C0               	movwf	3+(adc_ph@temp)
  1466                           	line	49
  1467                           	
  1468  05BC                     l3501:	
  1469                           ;ADC.h: 49: a=((temp*14)/1023);
  1470  05BC  3000               	movlw	0
  1471  05BD  00A3               	movwf	(?___lldiv+3)
  1472  05BE  3000               	movlw	0
  1473  05BF  00A2               	movwf	(?___lldiv+2)
  1474  05C0  3003               	movlw	03h
  1475  05C1  00A1               	movwf	(?___lldiv+1)
  1476  05C2  30FF               	movlw	0FFh
  1477  05C3  00A0               	movwf	(?___lldiv)
  1478                           
  1479  05C4  0840               	movf	(adc_ph@temp+3),w
  1480  05C5  00F3               	movwf	(?___lmul+3)
  1481  05C6  083F               	movf	(adc_ph@temp+2),w
  1482  05C7  00F2               	movwf	(?___lmul+2)
  1483  05C8  083E               	movf	(adc_ph@temp+1),w
  1484  05C9  00F1               	movwf	(?___lmul+1)
  1485  05CA  083D               	movf	(adc_ph@temp),w
  1486  05CB  00F0               	movwf	(?___lmul)
  1487                           
  1488  05CC  3000               	movlw	0
  1489  05CD  00F7               	movwf	3+(?___lmul)+04h
  1490  05CE  3000               	movlw	0
  1491  05CF  00F6               	movwf	2+(?___lmul)+04h
  1492  05D0  3000               	movlw	0
  1493  05D1  00F5               	movwf	1+(?___lmul)+04h
  1494  05D2  300E               	movlw	0Eh
  1495  05D3  00F4               	movwf	0+(?___lmul)+04h
  1496                           
  1497  05D4  120A  118A  2274   	fcall	___lmul
              120A  118A         
  1498  05D9  0873               	movf	(3+(?___lmul)),w
  1499  05DA  1283               	bcf	status, 5	;RP0=0, select bank0
  1500  05DB  1303               	bcf	status, 6	;RP1=0, select bank0
  1501  05DC  00A7               	movwf	3+(?___lldiv)+04h
  1502  05DD  0872               	movf	(2+(?___lmul)),w
  1503  05DE  00A6               	movwf	2+(?___lldiv)+04h
  1504  05DF  0871               	movf	(1+(?___lmul)),w
  1505  05E0  00A5               	movwf	1+(?___lldiv)+04h
  1506  05E1  0870               	movf	(0+(?___lmul)),w
  1507  05E2  00A4               	movwf	0+(?___lldiv)+04h
  1508                           
  1509  05E3  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  1510  05E8  1283               	bcf	status, 5	;RP0=0, select bank0
  1511  05E9  1303               	bcf	status, 6	;RP1=0, select bank0
  1512  05EA  0823               	movf	(3+(?___lldiv)),w
  1513  05EB  00C4               	movwf	(adc_ph@a+3)
  1514  05EC  0822               	movf	(2+(?___lldiv)),w
  1515  05ED  00C3               	movwf	(adc_ph@a+2)
  1516  05EE  0821               	movf	(1+(?___lldiv)),w
  1517  05EF  00C2               	movwf	(adc_ph@a+1)
  1518  05F0  0820               	movf	(0+(?___lldiv)),w
  1519  05F1  00C1               	movwf	(adc_ph@a)
  1520                           
  1521                           	line	50
  1522                           	
  1523  05F2                     l3503:	
  1524                           ;ADC.h: 50: converter_dispph(a);
  1525  05F2  0844               	movf	(adc_ph@a+3),w
  1526  05F3  00BA               	movwf	(?_converter_dispph+3)
  1527  05F4  0843               	movf	(adc_ph@a+2),w
  1528  05F5  00B9               	movwf	(?_converter_dispph+2)
  1529  05F6  0842               	movf	(adc_ph@a+1),w
  1530  05F7  00B8               	movwf	(?_converter_dispph+1)
  1531  05F8  0841               	movf	(adc_ph@a),w
  1532  05F9  00B7               	movwf	(?_converter_dispph)
  1533                           
  1534  05FA  120A  118A  2316   	fcall	_converter_dispph
              120A  118A         
  1535                           	line	51
  1536                           	
  1537  05FF                     l3505:	
  1538                           ;ADC.h: 51: uart_string("PHO");
  1539  05FF  3017               	movlw	((STR_1-__stringbase))&0ffh
  1540  0600  120A  118A  21CA   	fcall	_uart_string
              120A  118A         
  1541                           	line	52
  1542                           	
  1543  0605                     l3507:	
  1544                           ;ADC.h: 52: converter_uartph(a);
  1545  0605  1283               	bcf	status, 5	;RP0=0, select bank0
  1546  0606  1303               	bcf	status, 6	;RP1=0, select bank0
  1547  0607  0844               	movf	(adc_ph@a+3),w
  1548  0608  00BA               	movwf	(?_converter_uartph+3)
  1549  0609  0843               	movf	(adc_ph@a+2),w
  1550  060A  00B9               	movwf	(?_converter_uartph+2)
  1551  060B  0842               	movf	(adc_ph@a+1),w
  1552  060C  00B8               	movwf	(?_converter_uartph+1)
  1553  060D  0841               	movf	(adc_ph@a),w
  1554  060E  00B7               	movwf	(?_converter_uartph)
  1555                           
  1556  060F  120A  118A  22BE   	fcall	_converter_uartph
              120A  118A         
  1557                           	line	57
  1558                           	
  1559  0614                     l3509:	
  1560                           ;ADC.h: 57: delay(50);
  1561  0614  3032               	movlw	low(032h)
  1562  0615  00F0               	movwf	(?_delay)
  1563  0616  3000               	movlw	high(032h)
  1564  0617  00F1               	movwf	((?_delay))+1
  1565  0618  120A  118A  21F1   	fcall	_delay
              120A  118A         
  1566                           	line	58
  1567                           	
  1568  061D                     l760:	
  1569  061D  0008               	return
  1570                           	opt stack 0
  1571                           GLOBAL	__end_of_adc_ph
  1572  061E                     	__end_of_adc_ph:
  1573 ;; =============== function _adc_ph ends ============
  1574                           
  1575                           	signat	_adc_ph,88
  1576                           	global	_adc_turb
  1577                           psect	text449,local,class=CODE,delta=2
  1578                           global __ptext449
  1579  0516                     __ptext449:
  1580                           
  1581 ;; *************** function _adc_turb *****************
  1582 ;; Defined at:
  1583 ;;		line 60 in file "ADC.h"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  a               4   33[BANK0 ] unsigned long 
  1588 ;;  temp            4   29[BANK0 ] unsigned long 
  1589 ;;  b               4    0        unsigned long 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;		None               void
  1592 ;; Registers used:
  1593 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         0       0       0       0       0
  1600 ;;      Locals:         0       8       0       0       0
  1601 ;;      Temps:          0       2       0       0       0
  1602 ;;      Totals:         0      10       0       0       0
  1603 ;;Total ram usage:       10 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    3
  1606 ;; This function calls:
  1607 ;;		___lmul
  1608 ;;		___lldiv
  1609 ;;		_converter_disptu
  1610 ;;		_uart_string
  1611 ;;		_converter_uarttu
  1612 ;;		_delay
  1613 ;; This function is called by:
  1614 ;;		_adc
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           psect	text449
  1618                           	file	"ADC.h"
  1619                           	line	60
  1620                           	global	__size_of_adc_turb
  1621  0084                     	__size_of_adc_turb	equ	__end_of_adc_turb-_adc_turb
  1622                           	
  1623  0516                     _adc_turb:	
  1624                           	opt	stack 3
  1625                           ; Regs used in _adc_turb: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1626                           	line	62
  1627                           	
  1628  0516                     l3483:	
  1629                           ;ADC.h: 61: unsigned long int temp,a,b;
  1630                           ;ADC.h: 62: ADCON1=0x80;
  1631  0516  3080               	movlw	(080h)
  1632  0517  1683               	bsf	status, 5	;RP0=1, select bank1
  1633  0518  1303               	bcf	status, 6	;RP1=0, select bank1
  1634  0519  009F               	movwf	(159)^080h	;volatile
  1635                           	line	64
  1636                           ;ADC.h: 64: while(GO_nDONE==1);
  1637  051A  2D1B               	goto	l763
  1638                           	
  1639  051B                     l764:	
  1640                           	
  1641  051B                     l763:	
  1642  051B  1283               	bcf	status, 5	;RP0=0, select bank0
  1643  051C  191F               	btfsc	(250/8),(250)&7
  1644  051D  2D1F               	goto	u2591
  1645  051E  2D20               	goto	u2590
  1646  051F                     u2591:
  1647  051F  2D1B               	goto	l763
  1648  0520                     u2590:
  1649  0520  2D21               	goto	l3485
  1650                           	
  1651  0521                     l765:	
  1652                           	line	65
  1653                           	
  1654  0521                     l3485:	
  1655                           ;ADC.h: 65: temp=((ADRESH<<8)+(ADRESL));
  1656  0521  081E               	movf	(30),w	;volatile
  1657  0522  00BB               	movwf	(??_adc_turb+0)+0
  1658  0523  01BC               	clrf	(??_adc_turb+0)+0+1
  1659  0524  083B               	movf	(??_adc_turb+0)+0,w
  1660  0525  00BC               	movwf	(??_adc_turb+0)+1
  1661  0526  01BB               	clrf	(??_adc_turb+0)+0
  1662  0527  1683               	bsf	status, 5	;RP0=1, select bank1
  1663  0528  1303               	bcf	status, 6	;RP1=0, select bank1
  1664  0529  081E               	movf	(158)^080h,w	;volatile
  1665  052A  1283               	bcf	status, 5	;RP0=0, select bank0
  1666  052B  1303               	bcf	status, 6	;RP1=0, select bank0
  1667  052C  073B               	addwf	0+(??_adc_turb+0)+0,w
  1668  052D  00BD               	movwf	(adc_turb@temp)
  1669  052E  3000               	movlw	0
  1670  052F  1803               	skipnc
  1671  0530  3001               	movlw	1
  1672  0531  073C               	addwf	1+(??_adc_turb+0)+0,w
  1673  0532  00BE               	movwf	1+(adc_turb@temp)
  1674  0533  01BF               	clrf	(adc_turb@temp)+2
  1675  0534  1BBE               	btfsc	(adc_turb@temp)+1,7
  1676  0535  03BF               	decf	2+(adc_turb@temp),f
  1677  0536  083F               	movf	(adc_turb@temp)+2,w
  1678  0537  00C0               	movwf	3+(adc_turb@temp)
  1679                           	line	66
  1680                           	
  1681  0538                     l3487:	
  1682                           ;ADC.h: 66: a=((temp*10)/1023);
  1683  0538  3000               	movlw	0
  1684  0539  00A3               	movwf	(?___lldiv+3)
  1685  053A  3000               	movlw	0
  1686  053B  00A2               	movwf	(?___lldiv+2)
  1687  053C  3003               	movlw	03h
  1688  053D  00A1               	movwf	(?___lldiv+1)
  1689  053E  30FF               	movlw	0FFh
  1690  053F  00A0               	movwf	(?___lldiv)
  1691                           
  1692  0540  0840               	movf	(adc_turb@temp+3),w
  1693  0541  00F3               	movwf	(?___lmul+3)
  1694  0542  083F               	movf	(adc_turb@temp+2),w
  1695  0543  00F2               	movwf	(?___lmul+2)
  1696  0544  083E               	movf	(adc_turb@temp+1),w
  1697  0545  00F1               	movwf	(?___lmul+1)
  1698  0546  083D               	movf	(adc_turb@temp),w
  1699  0547  00F0               	movwf	(?___lmul)
  1700                           
  1701  0548  3000               	movlw	0
  1702  0549  00F7               	movwf	3+(?___lmul)+04h
  1703  054A  3000               	movlw	0
  1704  054B  00F6               	movwf	2+(?___lmul)+04h
  1705  054C  3000               	movlw	0
  1706  054D  00F5               	movwf	1+(?___lmul)+04h
  1707  054E  300A               	movlw	0Ah
  1708  054F  00F4               	movwf	0+(?___lmul)+04h
  1709                           
  1710  0550  120A  118A  2274   	fcall	___lmul
              120A  118A         
  1711  0555  0873               	movf	(3+(?___lmul)),w
  1712  0556  1283               	bcf	status, 5	;RP0=0, select bank0
  1713  0557  1303               	bcf	status, 6	;RP1=0, select bank0
  1714  0558  00A7               	movwf	3+(?___lldiv)+04h
  1715  0559  0872               	movf	(2+(?___lmul)),w
  1716  055A  00A6               	movwf	2+(?___lldiv)+04h
  1717  055B  0871               	movf	(1+(?___lmul)),w
  1718  055C  00A5               	movwf	1+(?___lldiv)+04h
  1719  055D  0870               	movf	(0+(?___lmul)),w
  1720  055E  00A4               	movwf	0+(?___lldiv)+04h
  1721                           
  1722  055F  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  1723  0564  1283               	bcf	status, 5	;RP0=0, select bank0
  1724  0565  1303               	bcf	status, 6	;RP1=0, select bank0
  1725  0566  0823               	movf	(3+(?___lldiv)),w
  1726  0567  00C4               	movwf	(adc_turb@a+3)
  1727  0568  0822               	movf	(2+(?___lldiv)),w
  1728  0569  00C3               	movwf	(adc_turb@a+2)
  1729  056A  0821               	movf	(1+(?___lldiv)),w
  1730  056B  00C2               	movwf	(adc_turb@a+1)
  1731  056C  0820               	movf	(0+(?___lldiv)),w
  1732  056D  00C1               	movwf	(adc_turb@a)
  1733                           
  1734                           	line	67
  1735                           	
  1736  056E                     l3489:	
  1737                           ;ADC.h: 67: converter_disptu(a);
  1738  056E  0844               	movf	(adc_turb@a+3),w
  1739  056F  00BA               	movwf	(?_converter_disptu+3)
  1740  0570  0843               	movf	(adc_turb@a+2),w
  1741  0571  00B9               	movwf	(?_converter_disptu+2)
  1742  0572  0842               	movf	(adc_turb@a+1),w
  1743  0573  00B8               	movwf	(?_converter_disptu+1)
  1744  0574  0841               	movf	(adc_turb@a),w
  1745  0575  00B7               	movwf	(?_converter_disptu)
  1746                           
  1747  0576  120A  118A  236E   	fcall	_converter_disptu
              120A  118A         
  1748                           	line	68
  1749                           	
  1750  057B                     l3491:	
  1751                           ;ADC.h: 68: uart_string("TUO");
  1752  057B  301F               	movlw	((STR_2-__stringbase))&0ffh
  1753  057C  120A  118A  21CA   	fcall	_uart_string
              120A  118A         
  1754                           	line	69
  1755                           	
  1756  0581                     l3493:	
  1757                           ;ADC.h: 69: converter_uarttu(a);
  1758  0581  1283               	bcf	status, 5	;RP0=0, select bank0
  1759  0582  1303               	bcf	status, 6	;RP1=0, select bank0
  1760  0583  0844               	movf	(adc_turb@a+3),w
  1761  0584  00BA               	movwf	(?_converter_uarttu+3)
  1762  0585  0843               	movf	(adc_turb@a+2),w
  1763  0586  00B9               	movwf	(?_converter_uarttu+2)
  1764  0587  0842               	movf	(adc_turb@a+1),w
  1765  0588  00B8               	movwf	(?_converter_uarttu+1)
  1766  0589  0841               	movf	(adc_turb@a),w
  1767  058A  00B7               	movwf	(?_converter_uarttu)
  1768                           
  1769  058B  120A  118A  26A2   	fcall	_converter_uarttu
              120A  118A         
  1770                           	line	75
  1771                           	
  1772  0590                     l3495:	
  1773                           ;ADC.h: 75: delay(50);
  1774  0590  3032               	movlw	low(032h)
  1775  0591  00F0               	movwf	(?_delay)
  1776  0592  3000               	movlw	high(032h)
  1777  0593  00F1               	movwf	((?_delay))+1
  1778  0594  120A  118A  21F1   	fcall	_delay
              120A  118A         
  1779                           	line	76
  1780                           	
  1781  0599                     l766:	
  1782  0599  0008               	return
  1783                           	opt stack 0
  1784                           GLOBAL	__end_of_adc_turb
  1785  059A                     	__end_of_adc_turb:
  1786 ;; =============== function _adc_turb ends ============
  1787                           
  1788                           	signat	_adc_turb,88
  1789                           	global	_converter_dispch
  1790                           psect	text450,local,class=CODE,delta=2
  1791                           global __ptext450
  1792  01A9                     __ptext450:
  1793                           
  1794 ;; *************** function _converter_dispch *****************
  1795 ;; Defined at:
  1796 ;;		line 129 in file "ADC.h"
  1797 ;; Parameters:    Size  Location     Type
  1798 ;;  b               4   23[BANK0 ] unsigned long 
  1799 ;; Auto vars:     Size  Location     Type
  1800 ;;		None
  1801 ;; Return value:  Size  Location     Type
  1802 ;;		None               void
  1803 ;; Registers used:
  1804 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1805 ;; Tracked objects:
  1806 ;;		On entry : 0/0
  1807 ;;		On exit  : 0/0
  1808 ;;		Unchanged: 0/0
  1809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1810 ;;      Params:         0       4       0       0       0
  1811 ;;      Locals:         0       0       0       0       0
  1812 ;;      Temps:          0       0       0       0       0
  1813 ;;      Totals:         0       4       0       0       0
  1814 ;;Total ram usage:        4 bytes
  1815 ;; Hardware stack levels used:    1
  1816 ;; Hardware stack levels required when called:    2
  1817 ;; This function calls:
  1818 ;;		___llmod
  1819 ;;		_lcd_dat
  1820 ;; This function is called by:
  1821 ;;		_adc_chlor
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           psect	text450
  1825                           	file	"ADC.h"
  1826                           	line	129
  1827                           	global	__size_of_converter_dispch
  1828  0021                     	__size_of_converter_dispch	equ	__end_of_converter_dispch-_converter_dispch
  1829                           	
  1830  01A9                     _converter_dispch:	
  1831                           	opt	stack 3
  1832                           ; Regs used in _converter_dispch: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1833                           	line	134
  1834                           	
  1835  01A9                     l3481:	
  1836                           ;ADC.h: 134: lcd_dat((b%10)+48);
  1837  01A9  3000               	movlw	0
  1838  01AA  1283               	bcf	status, 5	;RP0=0, select bank0
  1839  01AB  1303               	bcf	status, 6	;RP1=0, select bank0
  1840  01AC  00B0               	movwf	(?___llmod+3)
  1841  01AD  3000               	movlw	0
  1842  01AE  00AF               	movwf	(?___llmod+2)
  1843  01AF  3000               	movlw	0
  1844  01B0  00AE               	movwf	(?___llmod+1)
  1845  01B1  300A               	movlw	0Ah
  1846  01B2  00AD               	movwf	(?___llmod)
  1847                           
  1848  01B3  083A               	movf	(converter_dispch@b+3),w
  1849  01B4  00B4               	movwf	3+(?___llmod)+04h
  1850  01B5  0839               	movf	(converter_dispch@b+2),w
  1851  01B6  00B3               	movwf	2+(?___llmod)+04h
  1852  01B7  0838               	movf	(converter_dispch@b+1),w
  1853  01B8  00B2               	movwf	1+(?___llmod)+04h
  1854  01B9  0837               	movf	(converter_dispch@b),w
  1855  01BA  00B1               	movwf	0+(?___llmod)+04h
  1856                           
  1857  01BB  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  1858  01C0  1283               	bcf	status, 5	;RP0=0, select bank0
  1859  01C1  1303               	bcf	status, 6	;RP1=0, select bank0
  1860  01C2  082D               	movf	0+(((0+(?___llmod)))),w
  1861  01C3  3E30               	addlw	030h
  1862  01C4  120A  118A  215A   	fcall	_lcd_dat
              120A  118A         
  1863                           	line	135
  1864                           	
  1865  01C9                     l787:	
  1866  01C9  0008               	return
  1867                           	opt stack 0
  1868                           GLOBAL	__end_of_converter_dispch
  1869  01CA                     	__end_of_converter_dispch:
  1870 ;; =============== function _converter_dispch ends ============
  1871                           
  1872                           	signat	_converter_dispch,4216
  1873                           	global	_converter_disptu
  1874                           psect	text451,local,class=CODE,delta=2
  1875                           global __ptext451
  1876  036E                     __ptext451:
  1877                           
  1878 ;; *************** function _converter_disptu *****************
  1879 ;; Defined at:
  1880 ;;		line 112 in file "ADC.h"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  b               4   23[BANK0 ] unsigned long 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;		None               void
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       4       0       0       0
  1895 ;;      Locals:         0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0
  1897 ;;      Totals:         0       4       0       0       0
  1898 ;;Total ram usage:        4 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    2
  1901 ;; This function calls:
  1902 ;;		___lldiv
  1903 ;;		___llmod
  1904 ;;		_lcd_dat
  1905 ;; This function is called by:
  1906 ;;		_adc_turb
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           psect	text451
  1910                           	file	"ADC.h"
  1911                           	line	112
  1912                           	global	__size_of_converter_disptu
  1913  0058                     	__size_of_converter_disptu	equ	__end_of_converter_disptu-_converter_disptu
  1914                           	
  1915  036E                     _converter_disptu:	
  1916                           	opt	stack 3
  1917                           ; Regs used in _converter_disptu: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1918                           	line	116
  1919                           	
  1920  036E                     l3479:	
  1921                           ;ADC.h: 116: lcd_dat(((b/10)%10)+48);
  1922  036E  3000               	movlw	0
  1923  036F  1283               	bcf	status, 5	;RP0=0, select bank0
  1924  0370  1303               	bcf	status, 6	;RP1=0, select bank0
  1925  0371  00B0               	movwf	(?___llmod+3)
  1926  0372  3000               	movlw	0
  1927  0373  00AF               	movwf	(?___llmod+2)
  1928  0374  3000               	movlw	0
  1929  0375  00AE               	movwf	(?___llmod+1)
  1930  0376  300A               	movlw	0Ah
  1931  0377  00AD               	movwf	(?___llmod)
  1932                           
  1933  0378  3000               	movlw	0
  1934  0379  00A3               	movwf	(?___lldiv+3)
  1935  037A  3000               	movlw	0
  1936  037B  00A2               	movwf	(?___lldiv+2)
  1937  037C  3000               	movlw	0
  1938  037D  00A1               	movwf	(?___lldiv+1)
  1939  037E  300A               	movlw	0Ah
  1940  037F  00A0               	movwf	(?___lldiv)
  1941                           
  1942  0380  083A               	movf	(converter_disptu@b+3),w
  1943  0381  00A7               	movwf	3+(?___lldiv)+04h
  1944  0382  0839               	movf	(converter_disptu@b+2),w
  1945  0383  00A6               	movwf	2+(?___lldiv)+04h
  1946  0384  0838               	movf	(converter_disptu@b+1),w
  1947  0385  00A5               	movwf	1+(?___lldiv)+04h
  1948  0386  0837               	movf	(converter_disptu@b),w
  1949  0387  00A4               	movwf	0+(?___lldiv)+04h
  1950                           
  1951  0388  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  1952  038D  1283               	bcf	status, 5	;RP0=0, select bank0
  1953  038E  1303               	bcf	status, 6	;RP1=0, select bank0
  1954  038F  0823               	movf	(3+(?___lldiv)),w
  1955  0390  00B4               	movwf	3+(?___llmod)+04h
  1956  0391  0822               	movf	(2+(?___lldiv)),w
  1957  0392  00B3               	movwf	2+(?___llmod)+04h
  1958  0393  0821               	movf	(1+(?___lldiv)),w
  1959  0394  00B2               	movwf	1+(?___llmod)+04h
  1960  0395  0820               	movf	(0+(?___lldiv)),w
  1961  0396  00B1               	movwf	0+(?___llmod)+04h
  1962                           
  1963  0397  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  1964  039C  1283               	bcf	status, 5	;RP0=0, select bank0
  1965  039D  1303               	bcf	status, 6	;RP1=0, select bank0
  1966  039E  082D               	movf	0+(((0+(?___llmod)))),w
  1967  039F  3E30               	addlw	030h
  1968  03A0  120A  118A  215A   	fcall	_lcd_dat
              120A  118A         
  1969                           	line	117
  1970                           ;ADC.h: 117: lcd_dat((b%10)+48);
  1971  03A5  3000               	movlw	0
  1972  03A6  1283               	bcf	status, 5	;RP0=0, select bank0
  1973  03A7  1303               	bcf	status, 6	;RP1=0, select bank0
  1974  03A8  00B0               	movwf	(?___llmod+3)
  1975  03A9  3000               	movlw	0
  1976  03AA  00AF               	movwf	(?___llmod+2)
  1977  03AB  3000               	movlw	0
  1978  03AC  00AE               	movwf	(?___llmod+1)
  1979  03AD  300A               	movlw	0Ah
  1980  03AE  00AD               	movwf	(?___llmod)
  1981                           
  1982  03AF  083A               	movf	(converter_disptu@b+3),w
  1983  03B0  00B4               	movwf	3+(?___llmod)+04h
  1984  03B1  0839               	movf	(converter_disptu@b+2),w
  1985  03B2  00B3               	movwf	2+(?___llmod)+04h
  1986  03B3  0838               	movf	(converter_disptu@b+1),w
  1987  03B4  00B2               	movwf	1+(?___llmod)+04h
  1988  03B5  0837               	movf	(converter_disptu@b),w
  1989  03B6  00B1               	movwf	0+(?___llmod)+04h
  1990                           
  1991  03B7  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  1992  03BC  1283               	bcf	status, 5	;RP0=0, select bank0
  1993  03BD  1303               	bcf	status, 6	;RP1=0, select bank0
  1994  03BE  082D               	movf	0+(((0+(?___llmod)))),w
  1995  03BF  3E30               	addlw	030h
  1996  03C0  120A  118A  215A   	fcall	_lcd_dat
              120A  118A         
  1997                           	line	118
  1998                           	
  1999  03C5                     l781:	
  2000  03C5  0008               	return
  2001                           	opt stack 0
  2002                           GLOBAL	__end_of_converter_disptu
  2003  03C6                     	__end_of_converter_disptu:
  2004 ;; =============== function _converter_disptu ends ============
  2005                           
  2006                           	signat	_converter_disptu,4216
  2007                           	global	_converter_dispph
  2008                           psect	text452,local,class=CODE,delta=2
  2009                           global __ptext452
  2010  0316                     __ptext452:
  2011                           
  2012 ;; *************** function _converter_dispph *****************
  2013 ;; Defined at:
  2014 ;;		line 95 in file "ADC.h"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  b               4   23[BANK0 ] unsigned long 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;		None               void
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         0       4       0       0       0
  2029 ;;      Locals:         0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0
  2031 ;;      Totals:         0       4       0       0       0
  2032 ;;Total ram usage:        4 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    2
  2035 ;; This function calls:
  2036 ;;		___lldiv
  2037 ;;		___llmod
  2038 ;;		_lcd_dat
  2039 ;; This function is called by:
  2040 ;;		_adc_ph
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           psect	text452
  2044                           	file	"ADC.h"
  2045                           	line	95
  2046                           	global	__size_of_converter_dispph
  2047  0058                     	__size_of_converter_dispph	equ	__end_of_converter_dispph-_converter_dispph
  2048                           	
  2049  0316                     _converter_dispph:	
  2050                           	opt	stack 3
  2051                           ; Regs used in _converter_dispph: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2052                           	line	99
  2053                           	
  2054  0316                     l3477:	
  2055                           ;ADC.h: 99: lcd_dat(((b/10)%10)+48);
  2056  0316  3000               	movlw	0
  2057  0317  1283               	bcf	status, 5	;RP0=0, select bank0
  2058  0318  1303               	bcf	status, 6	;RP1=0, select bank0
  2059  0319  00B0               	movwf	(?___llmod+3)
  2060  031A  3000               	movlw	0
  2061  031B  00AF               	movwf	(?___llmod+2)
  2062  031C  3000               	movlw	0
  2063  031D  00AE               	movwf	(?___llmod+1)
  2064  031E  300A               	movlw	0Ah
  2065  031F  00AD               	movwf	(?___llmod)
  2066                           
  2067  0320  3000               	movlw	0
  2068  0321  00A3               	movwf	(?___lldiv+3)
  2069  0322  3000               	movlw	0
  2070  0323  00A2               	movwf	(?___lldiv+2)
  2071  0324  3000               	movlw	0
  2072  0325  00A1               	movwf	(?___lldiv+1)
  2073  0326  300A               	movlw	0Ah
  2074  0327  00A0               	movwf	(?___lldiv)
  2075                           
  2076  0328  083A               	movf	(converter_dispph@b+3),w
  2077  0329  00A7               	movwf	3+(?___lldiv)+04h
  2078  032A  0839               	movf	(converter_dispph@b+2),w
  2079  032B  00A6               	movwf	2+(?___lldiv)+04h
  2080  032C  0838               	movf	(converter_dispph@b+1),w
  2081  032D  00A5               	movwf	1+(?___lldiv)+04h
  2082  032E  0837               	movf	(converter_dispph@b),w
  2083  032F  00A4               	movwf	0+(?___lldiv)+04h
  2084                           
  2085  0330  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  2086  0335  1283               	bcf	status, 5	;RP0=0, select bank0
  2087  0336  1303               	bcf	status, 6	;RP1=0, select bank0
  2088  0337  0823               	movf	(3+(?___lldiv)),w
  2089  0338  00B4               	movwf	3+(?___llmod)+04h
  2090  0339  0822               	movf	(2+(?___lldiv)),w
  2091  033A  00B3               	movwf	2+(?___llmod)+04h
  2092  033B  0821               	movf	(1+(?___lldiv)),w
  2093  033C  00B2               	movwf	1+(?___llmod)+04h
  2094  033D  0820               	movf	(0+(?___lldiv)),w
  2095  033E  00B1               	movwf	0+(?___llmod)+04h
  2096                           
  2097  033F  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  2098  0344  1283               	bcf	status, 5	;RP0=0, select bank0
  2099  0345  1303               	bcf	status, 6	;RP1=0, select bank0
  2100  0346  082D               	movf	0+(((0+(?___llmod)))),w
  2101  0347  3E30               	addlw	030h
  2102  0348  120A  118A  215A   	fcall	_lcd_dat
              120A  118A         
  2103                           	line	100
  2104                           ;ADC.h: 100: lcd_dat((b%10)+48);
  2105  034D  3000               	movlw	0
  2106  034E  1283               	bcf	status, 5	;RP0=0, select bank0
  2107  034F  1303               	bcf	status, 6	;RP1=0, select bank0
  2108  0350  00B0               	movwf	(?___llmod+3)
  2109  0351  3000               	movlw	0
  2110  0352  00AF               	movwf	(?___llmod+2)
  2111  0353  3000               	movlw	0
  2112  0354  00AE               	movwf	(?___llmod+1)
  2113  0355  300A               	movlw	0Ah
  2114  0356  00AD               	movwf	(?___llmod)
  2115                           
  2116  0357  083A               	movf	(converter_dispph@b+3),w
  2117  0358  00B4               	movwf	3+(?___llmod)+04h
  2118  0359  0839               	movf	(converter_dispph@b+2),w
  2119  035A  00B3               	movwf	2+(?___llmod)+04h
  2120  035B  0838               	movf	(converter_dispph@b+1),w
  2121  035C  00B2               	movwf	1+(?___llmod)+04h
  2122  035D  0837               	movf	(converter_dispph@b),w
  2123  035E  00B1               	movwf	0+(?___llmod)+04h
  2124                           
  2125  035F  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  2126  0364  1283               	bcf	status, 5	;RP0=0, select bank0
  2127  0365  1303               	bcf	status, 6	;RP1=0, select bank0
  2128  0366  082D               	movf	0+(((0+(?___llmod)))),w
  2129  0367  3E30               	addlw	030h
  2130  0368  120A  118A  215A   	fcall	_lcd_dat
              120A  118A         
  2131                           	line	101
  2132                           	
  2133  036D                     l775:	
  2134  036D  0008               	return
  2135                           	opt stack 0
  2136                           GLOBAL	__end_of_converter_dispph
  2137  036E                     	__end_of_converter_dispph:
  2138 ;; =============== function _converter_dispph ends ============
  2139                           
  2140                           	signat	_converter_dispph,4216
  2141                           	global	_show
  2142                           psect	text453,local,class=CODE,delta=2
  2143                           global __ptext453
  2144  0188                     __ptext453:
  2145                           
  2146 ;; *************** function _show *****************
  2147 ;; Defined at:
  2148 ;;		line 38 in file "lcd.h"
  2149 ;; Parameters:    Size  Location     Type
  2150 ;;  s               1    wreg     PTR unsigned char 
  2151 ;;		 -> STR_6(7), STR_5(4), STR_4(11), 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  s               1    9[COMMON] PTR unsigned char 
  2154 ;;		 -> STR_6(7), STR_5(4), STR_4(11), 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;		None               void
  2157 ;; Registers used:
  2158 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2164 ;;      Params:         0       0       0       0       0
  2165 ;;      Locals:         1       0       0       0       0
  2166 ;;      Temps:          1       0       0       0       0
  2167 ;;      Totals:         2       0       0       0       0
  2168 ;;Total ram usage:        2 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    2
  2171 ;; This function calls:
  2172 ;;		_lcd_dat
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           psect	text453
  2178                           	file	"lcd.h"
  2179                           	line	38
  2180                           	global	__size_of_show
  2181  0021                     	__size_of_show	equ	__end_of_show-_show
  2182                           	
  2183  0188                     _show:	
  2184                           	opt	stack 5
  2185                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2186                           ;show@s stored from wreg
  2187  0188  00F9               	movwf	(show@s)
  2188                           	line	39
  2189                           	
  2190  0189                     l3469:	
  2191                           ;lcd.h: 39: while(*s)
  2192  0189  299B               	goto	l3475
  2193                           	
  2194  018A                     l738:	
  2195                           	line	41
  2196                           	
  2197  018A                     l3471:	
  2198                           ;lcd.h: 40: {
  2199                           ;lcd.h: 41: lcd_dat(*s++);
  2200  018A  0879               	movf	(show@s),w
  2201  018B  0084               	movwf	fsr0
  2202  018C  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2203  0191  120A  118A  215A   	fcall	_lcd_dat
              120A  118A         
  2204                           	
  2205  0196                     l3473:	
  2206  0196  3001               	movlw	(01h)
  2207  0197  00F8               	movwf	(??_show+0)+0
  2208  0198  0878               	movf	(??_show+0)+0,w
  2209  0199  07F9               	addwf	(show@s),f
  2210  019A  299B               	goto	l3475
  2211                           	line	42
  2212                           	
  2213  019B                     l737:	
  2214                           	line	39
  2215                           	
  2216  019B                     l3475:	
  2217  019B  0879               	movf	(show@s),w
  2218  019C  0084               	movwf	fsr0
  2219  019D  120A  118A  2003   	fcall	stringdir
              120A  118A         
  2220  01A2  3800               	iorlw	0
  2221  01A3  1D03               	skipz
  2222  01A4  29A6               	goto	u2581
  2223  01A5  29A7               	goto	u2580
  2224  01A6                     u2581:
  2225  01A6  298A               	goto	l3471
  2226  01A7                     u2580:
  2227  01A7  29A8               	goto	l740
  2228                           	
  2229  01A8                     l739:	
  2230                           	line	43
  2231                           	
  2232  01A8                     l740:	
  2233  01A8  0008               	return
  2234                           	opt stack 0
  2235                           GLOBAL	__end_of_show
  2236  01A9                     	__end_of_show:
  2237 ;; =============== function _show ends ============
  2238                           
  2239                           	signat	_show,4216
  2240                           	global	_lcd_int
  2241                           psect	text454,local,class=CODE,delta=2
  2242                           global __ptext454
  2243  016F                     __ptext454:
  2244                           
  2245 ;; *************** function _lcd_int *****************
  2246 ;; Defined at:
  2247 ;;		line 10 in file "lcd.h"
  2248 ;; Parameters:    Size  Location     Type
  2249 ;;		None
  2250 ;; Auto vars:     Size  Location     Type
  2251 ;;		None
  2252 ;; Return value:  Size  Location     Type
  2253 ;;		None               void
  2254 ;; Registers used:
  2255 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2256 ;; Tracked objects:
  2257 ;;		On entry : 0/0
  2258 ;;		On exit  : 0/0
  2259 ;;		Unchanged: 0/0
  2260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2261 ;;      Params:         0       0       0       0       0
  2262 ;;      Locals:         0       0       0       0       0
  2263 ;;      Temps:          0       0       0       0       0
  2264 ;;      Totals:         0       0       0       0       0
  2265 ;;Total ram usage:        0 bytes
  2266 ;; Hardware stack levels used:    1
  2267 ;; Hardware stack levels required when called:    2
  2268 ;; This function calls:
  2269 ;;		_lcd_cmd
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           psect	text454
  2275                           	file	"lcd.h"
  2276                           	line	10
  2277                           	global	__size_of_lcd_int
  2278  0019                     	__size_of_lcd_int	equ	__end_of_lcd_int-_lcd_int
  2279                           	
  2280  016F                     _lcd_int:	
  2281                           	opt	stack 5
  2282                           ; Regs used in _lcd_int: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2283                           	line	11
  2284                           	
  2285  016F                     l3467:	
  2286                           ;lcd.h: 11: lcd_cmd(0x38);
  2287  016F  3038               	movlw	(038h)
  2288  0170  120A  118A  2145   	fcall	_lcd_cmd
              120A  118A         
  2289                           	line	12
  2290                           ;lcd.h: 12: lcd_cmd(0x0c);
  2291  0175  300C               	movlw	(0Ch)
  2292  0176  120A  118A  2145   	fcall	_lcd_cmd
              120A  118A         
  2293                           	line	13
  2294                           ;lcd.h: 13: lcd_cmd(0x06);
  2295  017B  3006               	movlw	(06h)
  2296  017C  120A  118A  2145   	fcall	_lcd_cmd
              120A  118A         
  2297                           	line	14
  2298                           ;lcd.h: 14: lcd_cmd(0x80);
  2299  0181  3080               	movlw	(080h)
  2300  0182  120A  118A  2145   	fcall	_lcd_cmd
              120A  118A         
  2301                           	line	15
  2302                           	
  2303  0187                     l728:	
  2304  0187  0008               	return
  2305                           	opt stack 0
  2306                           GLOBAL	__end_of_lcd_int
  2307  0188                     	__end_of_lcd_int:
  2308 ;; =============== function _lcd_int ends ============
  2309                           
  2310                           	signat	_lcd_int,88
  2311                           	global	_converter_uartch
  2312                           psect	text455,local,class=CODE,delta=2
  2313                           global __ptext455
  2314  0751                     __ptext455:
  2315                           
  2316 ;; *************** function _converter_uartch *****************
  2317 ;; Defined at:
  2318 ;;		line 138 in file "ADC.h"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  b               4   23[BANK0 ] unsigned long 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;		None
  2323 ;; Return value:  Size  Location     Type
  2324 ;;		None               void
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, pclath, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2332 ;;      Params:         0       4       0       0       0
  2333 ;;      Locals:         0       0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0
  2335 ;;      Totals:         0       4       0       0       0
  2336 ;;Total ram usage:        4 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    1
  2339 ;; This function calls:
  2340 ;;		___lldiv
  2341 ;;		_uart_tx
  2342 ;;		___llmod
  2343 ;; This function is called by:
  2344 ;;		_adc_chlor
  2345 ;; This function uses a non-reentrant model
  2346 ;;
  2347                           psect	text455
  2348                           	file	"ADC.h"
  2349                           	line	138
  2350                           	global	__size_of_converter_uartch
  2351  00AF                     	__size_of_converter_uartch	equ	__end_of_converter_uartch-_converter_uartch
  2352                           	
  2353  0751                     _converter_uartch:	
  2354                           	opt	stack 4
  2355                           ; Regs used in _converter_uartch: [wreg+status,2+status,0+pclath+cstack]
  2356                           	line	140
  2357                           	
  2358  0751                     l3465:	
  2359                           ;ADC.h: 140: uart_tx((b/1000)+48);
  2360  0751  3000               	movlw	0
  2361  0752  1283               	bcf	status, 5	;RP0=0, select bank0
  2362  0753  1303               	bcf	status, 6	;RP1=0, select bank0
  2363  0754  00A3               	movwf	(?___lldiv+3)
  2364  0755  3000               	movlw	0
  2365  0756  00A2               	movwf	(?___lldiv+2)
  2366  0757  3003               	movlw	03h
  2367  0758  00A1               	movwf	(?___lldiv+1)
  2368  0759  30E8               	movlw	0E8h
  2369  075A  00A0               	movwf	(?___lldiv)
  2370                           
  2371  075B  083A               	movf	(converter_uartch@b+3),w
  2372  075C  00A7               	movwf	3+(?___lldiv)+04h
  2373  075D  0839               	movf	(converter_uartch@b+2),w
  2374  075E  00A6               	movwf	2+(?___lldiv)+04h
  2375  075F  0838               	movf	(converter_uartch@b+1),w
  2376  0760  00A5               	movwf	1+(?___lldiv)+04h
  2377  0761  0837               	movf	(converter_uartch@b),w
  2378  0762  00A4               	movwf	0+(?___lldiv)+04h
  2379                           
  2380  0763  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  2381  0768  1283               	bcf	status, 5	;RP0=0, select bank0
  2382  0769  1303               	bcf	status, 6	;RP1=0, select bank0
  2383  076A  0820               	movf	0+(((0+(?___lldiv)))),w
  2384  076B  3E30               	addlw	030h
  2385  076C  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  2386                           	line	141
  2387                           ;ADC.h: 141: uart_tx(((b/100)%10)+48);
  2388  0771  3000               	movlw	0
  2389  0772  1283               	bcf	status, 5	;RP0=0, select bank0
  2390  0773  1303               	bcf	status, 6	;RP1=0, select bank0
  2391  0774  00B0               	movwf	(?___llmod+3)
  2392  0775  3000               	movlw	0
  2393  0776  00AF               	movwf	(?___llmod+2)
  2394  0777  3000               	movlw	0
  2395  0778  00AE               	movwf	(?___llmod+1)
  2396  0779  300A               	movlw	0Ah
  2397  077A  00AD               	movwf	(?___llmod)
  2398                           
  2399  077B  3000               	movlw	0
  2400  077C  00A3               	movwf	(?___lldiv+3)
  2401  077D  3000               	movlw	0
  2402  077E  00A2               	movwf	(?___lldiv+2)
  2403  077F  3000               	movlw	0
  2404  0780  00A1               	movwf	(?___lldiv+1)
  2405  0781  3064               	movlw	064h
  2406  0782  00A0               	movwf	(?___lldiv)
  2407                           
  2408  0783  083A               	movf	(converter_uartch@b+3),w
  2409  0784  00A7               	movwf	3+(?___lldiv)+04h
  2410  0785  0839               	movf	(converter_uartch@b+2),w
  2411  0786  00A6               	movwf	2+(?___lldiv)+04h
  2412  0787  0838               	movf	(converter_uartch@b+1),w
  2413  0788  00A5               	movwf	1+(?___lldiv)+04h
  2414  0789  0837               	movf	(converter_uartch@b),w
  2415  078A  00A4               	movwf	0+(?___lldiv)+04h
  2416                           
  2417  078B  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  2418  0790  1283               	bcf	status, 5	;RP0=0, select bank0
  2419  0791  1303               	bcf	status, 6	;RP1=0, select bank0
  2420  0792  0823               	movf	(3+(?___lldiv)),w
  2421  0793  00B4               	movwf	3+(?___llmod)+04h
  2422  0794  0822               	movf	(2+(?___lldiv)),w
  2423  0795  00B3               	movwf	2+(?___llmod)+04h
  2424  0796  0821               	movf	(1+(?___lldiv)),w
  2425  0797  00B2               	movwf	1+(?___llmod)+04h
  2426  0798  0820               	movf	(0+(?___lldiv)),w
  2427  0799  00B1               	movwf	0+(?___llmod)+04h
  2428                           
  2429  079A  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  2430  079F  1283               	bcf	status, 5	;RP0=0, select bank0
  2431  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
  2432  07A1  082D               	movf	0+(((0+(?___llmod)))),w
  2433  07A2  3E30               	addlw	030h
  2434  07A3  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  2435                           	line	142
  2436                           ;ADC.h: 142: uart_tx(((b/10)%10)+48);
  2437  07A8  3000               	movlw	0
  2438  07A9  1283               	bcf	status, 5	;RP0=0, select bank0
  2439  07AA  1303               	bcf	status, 6	;RP1=0, select bank0
  2440  07AB  00B0               	movwf	(?___llmod+3)
  2441  07AC  3000               	movlw	0
  2442  07AD  00AF               	movwf	(?___llmod+2)
  2443  07AE  3000               	movlw	0
  2444  07AF  00AE               	movwf	(?___llmod+1)
  2445  07B0  300A               	movlw	0Ah
  2446  07B1  00AD               	movwf	(?___llmod)
  2447                           
  2448  07B2  3000               	movlw	0
  2449  07B3  00A3               	movwf	(?___lldiv+3)
  2450  07B4  3000               	movlw	0
  2451  07B5  00A2               	movwf	(?___lldiv+2)
  2452  07B6  3000               	movlw	0
  2453  07B7  00A1               	movwf	(?___lldiv+1)
  2454  07B8  300A               	movlw	0Ah
  2455  07B9  00A0               	movwf	(?___lldiv)
  2456                           
  2457  07BA  083A               	movf	(converter_uartch@b+3),w
  2458  07BB  00A7               	movwf	3+(?___lldiv)+04h
  2459  07BC  0839               	movf	(converter_uartch@b+2),w
  2460  07BD  00A6               	movwf	2+(?___lldiv)+04h
  2461  07BE  0838               	movf	(converter_uartch@b+1),w
  2462  07BF  00A5               	movwf	1+(?___lldiv)+04h
  2463  07C0  0837               	movf	(converter_uartch@b),w
  2464  07C1  00A4               	movwf	0+(?___lldiv)+04h
  2465                           
  2466  07C2  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  2467  07C7  1283               	bcf	status, 5	;RP0=0, select bank0
  2468  07C8  1303               	bcf	status, 6	;RP1=0, select bank0
  2469  07C9  0823               	movf	(3+(?___lldiv)),w
  2470  07CA  00B4               	movwf	3+(?___llmod)+04h
  2471  07CB  0822               	movf	(2+(?___lldiv)),w
  2472  07CC  00B3               	movwf	2+(?___llmod)+04h
  2473  07CD  0821               	movf	(1+(?___lldiv)),w
  2474  07CE  00B2               	movwf	1+(?___llmod)+04h
  2475  07CF  0820               	movf	(0+(?___lldiv)),w
  2476  07D0  00B1               	movwf	0+(?___llmod)+04h
  2477                           
  2478  07D1  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  2479  07D6  1283               	bcf	status, 5	;RP0=0, select bank0
  2480  07D7  1303               	bcf	status, 6	;RP1=0, select bank0
  2481  07D8  082D               	movf	0+(((0+(?___llmod)))),w
  2482  07D9  3E30               	addlw	030h
  2483  07DA  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  2484                           	line	143
  2485                           ;ADC.h: 143: uart_tx((b%10)+48);
  2486  07DF  3000               	movlw	0
  2487  07E0  1283               	bcf	status, 5	;RP0=0, select bank0
  2488  07E1  1303               	bcf	status, 6	;RP1=0, select bank0
  2489  07E2  00B0               	movwf	(?___llmod+3)
  2490  07E3  3000               	movlw	0
  2491  07E4  00AF               	movwf	(?___llmod+2)
  2492  07E5  3000               	movlw	0
  2493  07E6  00AE               	movwf	(?___llmod+1)
  2494  07E7  300A               	movlw	0Ah
  2495  07E8  00AD               	movwf	(?___llmod)
  2496                           
  2497  07E9  083A               	movf	(converter_uartch@b+3),w
  2498  07EA  00B4               	movwf	3+(?___llmod)+04h
  2499  07EB  0839               	movf	(converter_uartch@b+2),w
  2500  07EC  00B3               	movwf	2+(?___llmod)+04h
  2501  07ED  0838               	movf	(converter_uartch@b+1),w
  2502  07EE  00B2               	movwf	1+(?___llmod)+04h
  2503  07EF  0837               	movf	(converter_uartch@b),w
  2504  07F0  00B1               	movwf	0+(?___llmod)+04h
  2505                           
  2506  07F1  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  2507  07F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2508  07F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2509  07F8  082D               	movf	0+(((0+(?___llmod)))),w
  2510  07F9  3E30               	addlw	030h
  2511  07FA  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  2512                           	line	144
  2513                           	
  2514  07FF                     l790:	
  2515  07FF  0008               	return
  2516                           	opt stack 0
  2517                           GLOBAL	__end_of_converter_uartch
  2518  0800                     	__end_of_converter_uartch:
  2519 ;; =============== function _converter_uartch ends ============
  2520                           
  2521                           	signat	_converter_uartch,4216
  2522                           	global	_converter_uarttu
  2523                           psect	text456,local,class=CODE,delta=2
  2524                           global __ptext456
  2525  06A2                     __ptext456:
  2526                           
  2527 ;; *************** function _converter_uarttu *****************
  2528 ;; Defined at:
  2529 ;;		line 121 in file "ADC.h"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  b               4   23[BANK0 ] unsigned long 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;		None               void
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0, pclath, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2543 ;;      Params:         0       4       0       0       0
  2544 ;;      Locals:         0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0
  2546 ;;      Totals:         0       4       0       0       0
  2547 ;;Total ram usage:        4 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    1
  2550 ;; This function calls:
  2551 ;;		___lldiv
  2552 ;;		_uart_tx
  2553 ;;		___llmod
  2554 ;; This function is called by:
  2555 ;;		_adc_turb
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           psect	text456
  2559                           	file	"ADC.h"
  2560                           	line	121
  2561                           	global	__size_of_converter_uarttu
  2562  00AF                     	__size_of_converter_uarttu	equ	__end_of_converter_uarttu-_converter_uarttu
  2563                           	
  2564  06A2                     _converter_uarttu:	
  2565                           	opt	stack 4
  2566                           ; Regs used in _converter_uarttu: [wreg+status,2+status,0+pclath+cstack]
  2567                           	line	123
  2568                           	
  2569  06A2                     l3463:	
  2570                           ;ADC.h: 123: uart_tx((b/1000)+48);
  2571  06A2  3000               	movlw	0
  2572  06A3  1283               	bcf	status, 5	;RP0=0, select bank0
  2573  06A4  1303               	bcf	status, 6	;RP1=0, select bank0
  2574  06A5  00A3               	movwf	(?___lldiv+3)
  2575  06A6  3000               	movlw	0
  2576  06A7  00A2               	movwf	(?___lldiv+2)
  2577  06A8  3003               	movlw	03h
  2578  06A9  00A1               	movwf	(?___lldiv+1)
  2579  06AA  30E8               	movlw	0E8h
  2580  06AB  00A0               	movwf	(?___lldiv)
  2581                           
  2582  06AC  083A               	movf	(converter_uarttu@b+3),w
  2583  06AD  00A7               	movwf	3+(?___lldiv)+04h
  2584  06AE  0839               	movf	(converter_uarttu@b+2),w
  2585  06AF  00A6               	movwf	2+(?___lldiv)+04h
  2586  06B0  0838               	movf	(converter_uarttu@b+1),w
  2587  06B1  00A5               	movwf	1+(?___lldiv)+04h
  2588  06B2  0837               	movf	(converter_uarttu@b),w
  2589  06B3  00A4               	movwf	0+(?___lldiv)+04h
  2590                           
  2591  06B4  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  2592  06B9  1283               	bcf	status, 5	;RP0=0, select bank0
  2593  06BA  1303               	bcf	status, 6	;RP1=0, select bank0
  2594  06BB  0820               	movf	0+(((0+(?___lldiv)))),w
  2595  06BC  3E30               	addlw	030h
  2596  06BD  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  2597                           	line	124
  2598                           ;ADC.h: 124: uart_tx(((b/100)%10)+48);
  2599  06C2  3000               	movlw	0
  2600  06C3  1283               	bcf	status, 5	;RP0=0, select bank0
  2601  06C4  1303               	bcf	status, 6	;RP1=0, select bank0
  2602  06C5  00B0               	movwf	(?___llmod+3)
  2603  06C6  3000               	movlw	0
  2604  06C7  00AF               	movwf	(?___llmod+2)
  2605  06C8  3000               	movlw	0
  2606  06C9  00AE               	movwf	(?___llmod+1)
  2607  06CA  300A               	movlw	0Ah
  2608  06CB  00AD               	movwf	(?___llmod)
  2609                           
  2610  06CC  3000               	movlw	0
  2611  06CD  00A3               	movwf	(?___lldiv+3)
  2612  06CE  3000               	movlw	0
  2613  06CF  00A2               	movwf	(?___lldiv+2)
  2614  06D0  3000               	movlw	0
  2615  06D1  00A1               	movwf	(?___lldiv+1)
  2616  06D2  3064               	movlw	064h
  2617  06D3  00A0               	movwf	(?___lldiv)
  2618                           
  2619  06D4  083A               	movf	(converter_uarttu@b+3),w
  2620  06D5  00A7               	movwf	3+(?___lldiv)+04h
  2621  06D6  0839               	movf	(converter_uarttu@b+2),w
  2622  06D7  00A6               	movwf	2+(?___lldiv)+04h
  2623  06D8  0838               	movf	(converter_uarttu@b+1),w
  2624  06D9  00A5               	movwf	1+(?___lldiv)+04h
  2625  06DA  0837               	movf	(converter_uarttu@b),w
  2626  06DB  00A4               	movwf	0+(?___lldiv)+04h
  2627                           
  2628  06DC  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  2629  06E1  1283               	bcf	status, 5	;RP0=0, select bank0
  2630  06E2  1303               	bcf	status, 6	;RP1=0, select bank0
  2631  06E3  0823               	movf	(3+(?___lldiv)),w
  2632  06E4  00B4               	movwf	3+(?___llmod)+04h
  2633  06E5  0822               	movf	(2+(?___lldiv)),w
  2634  06E6  00B3               	movwf	2+(?___llmod)+04h
  2635  06E7  0821               	movf	(1+(?___lldiv)),w
  2636  06E8  00B2               	movwf	1+(?___llmod)+04h
  2637  06E9  0820               	movf	(0+(?___lldiv)),w
  2638  06EA  00B1               	movwf	0+(?___llmod)+04h
  2639                           
  2640  06EB  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  2641  06F0  1283               	bcf	status, 5	;RP0=0, select bank0
  2642  06F1  1303               	bcf	status, 6	;RP1=0, select bank0
  2643  06F2  082D               	movf	0+(((0+(?___llmod)))),w
  2644  06F3  3E30               	addlw	030h
  2645  06F4  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  2646                           	line	125
  2647                           ;ADC.h: 125: uart_tx(((b/10)%10)+48);
  2648  06F9  3000               	movlw	0
  2649  06FA  1283               	bcf	status, 5	;RP0=0, select bank0
  2650  06FB  1303               	bcf	status, 6	;RP1=0, select bank0
  2651  06FC  00B0               	movwf	(?___llmod+3)
  2652  06FD  3000               	movlw	0
  2653  06FE  00AF               	movwf	(?___llmod+2)
  2654  06FF  3000               	movlw	0
  2655  0700  00AE               	movwf	(?___llmod+1)
  2656  0701  300A               	movlw	0Ah
  2657  0702  00AD               	movwf	(?___llmod)
  2658                           
  2659  0703  3000               	movlw	0
  2660  0704  00A3               	movwf	(?___lldiv+3)
  2661  0705  3000               	movlw	0
  2662  0706  00A2               	movwf	(?___lldiv+2)
  2663  0707  3000               	movlw	0
  2664  0708  00A1               	movwf	(?___lldiv+1)
  2665  0709  300A               	movlw	0Ah
  2666  070A  00A0               	movwf	(?___lldiv)
  2667                           
  2668  070B  083A               	movf	(converter_uarttu@b+3),w
  2669  070C  00A7               	movwf	3+(?___lldiv)+04h
  2670  070D  0839               	movf	(converter_uarttu@b+2),w
  2671  070E  00A6               	movwf	2+(?___lldiv)+04h
  2672  070F  0838               	movf	(converter_uarttu@b+1),w
  2673  0710  00A5               	movwf	1+(?___lldiv)+04h
  2674  0711  0837               	movf	(converter_uarttu@b),w
  2675  0712  00A4               	movwf	0+(?___lldiv)+04h
  2676                           
  2677  0713  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  2678  0718  1283               	bcf	status, 5	;RP0=0, select bank0
  2679  0719  1303               	bcf	status, 6	;RP1=0, select bank0
  2680  071A  0823               	movf	(3+(?___lldiv)),w
  2681  071B  00B4               	movwf	3+(?___llmod)+04h
  2682  071C  0822               	movf	(2+(?___lldiv)),w
  2683  071D  00B3               	movwf	2+(?___llmod)+04h
  2684  071E  0821               	movf	(1+(?___lldiv)),w
  2685  071F  00B2               	movwf	1+(?___llmod)+04h
  2686  0720  0820               	movf	(0+(?___lldiv)),w
  2687  0721  00B1               	movwf	0+(?___llmod)+04h
  2688                           
  2689  0722  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  2690  0727  1283               	bcf	status, 5	;RP0=0, select bank0
  2691  0728  1303               	bcf	status, 6	;RP1=0, select bank0
  2692  0729  082D               	movf	0+(((0+(?___llmod)))),w
  2693  072A  3E30               	addlw	030h
  2694  072B  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  2695                           	line	126
  2696                           ;ADC.h: 126: uart_tx((b%10)+48);
  2697  0730  3000               	movlw	0
  2698  0731  1283               	bcf	status, 5	;RP0=0, select bank0
  2699  0732  1303               	bcf	status, 6	;RP1=0, select bank0
  2700  0733  00B0               	movwf	(?___llmod+3)
  2701  0734  3000               	movlw	0
  2702  0735  00AF               	movwf	(?___llmod+2)
  2703  0736  3000               	movlw	0
  2704  0737  00AE               	movwf	(?___llmod+1)
  2705  0738  300A               	movlw	0Ah
  2706  0739  00AD               	movwf	(?___llmod)
  2707                           
  2708  073A  083A               	movf	(converter_uarttu@b+3),w
  2709  073B  00B4               	movwf	3+(?___llmod)+04h
  2710  073C  0839               	movf	(converter_uarttu@b+2),w
  2711  073D  00B3               	movwf	2+(?___llmod)+04h
  2712  073E  0838               	movf	(converter_uarttu@b+1),w
  2713  073F  00B2               	movwf	1+(?___llmod)+04h
  2714  0740  0837               	movf	(converter_uarttu@b),w
  2715  0741  00B1               	movwf	0+(?___llmod)+04h
  2716                           
  2717  0742  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  2718  0747  1283               	bcf	status, 5	;RP0=0, select bank0
  2719  0748  1303               	bcf	status, 6	;RP1=0, select bank0
  2720  0749  082D               	movf	0+(((0+(?___llmod)))),w
  2721  074A  3E30               	addlw	030h
  2722  074B  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  2723                           	line	127
  2724                           	
  2725  0750                     l784:	
  2726  0750  0008               	return
  2727                           	opt stack 0
  2728                           GLOBAL	__end_of_converter_uarttu
  2729  0751                     	__end_of_converter_uarttu:
  2730 ;; =============== function _converter_uarttu ends ============
  2731                           
  2732                           	signat	_converter_uarttu,4216
  2733                           	global	_converter_uartph
  2734                           psect	text457,local,class=CODE,delta=2
  2735                           global __ptext457
  2736  02BE                     __ptext457:
  2737                           
  2738 ;; *************** function _converter_uartph *****************
  2739 ;; Defined at:
  2740 ;;		line 104 in file "ADC.h"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  b               4   23[BANK0 ] unsigned long 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;		None               void
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         0       4       0       0       0
  2755 ;;      Locals:         0       0       0       0       0
  2756 ;;      Temps:          0       0       0       0       0
  2757 ;;      Totals:         0       4       0       0       0
  2758 ;;Total ram usage:        4 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		___lldiv
  2763 ;;		___llmod
  2764 ;;		_uart_tx
  2765 ;; This function is called by:
  2766 ;;		_adc_ph
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           psect	text457
  2770                           	file	"ADC.h"
  2771                           	line	104
  2772                           	global	__size_of_converter_uartph
  2773  0058                     	__size_of_converter_uartph	equ	__end_of_converter_uartph-_converter_uartph
  2774                           	
  2775  02BE                     _converter_uartph:	
  2776                           	opt	stack 4
  2777                           ; Regs used in _converter_uartph: [wreg+status,2+status,0+pclath+cstack]
  2778                           	line	108
  2779                           	
  2780  02BE                     l3461:	
  2781                           ;ADC.h: 108: uart_tx(((b/10)%10)+48);
  2782  02BE  3000               	movlw	0
  2783  02BF  1283               	bcf	status, 5	;RP0=0, select bank0
  2784  02C0  1303               	bcf	status, 6	;RP1=0, select bank0
  2785  02C1  00B0               	movwf	(?___llmod+3)
  2786  02C2  3000               	movlw	0
  2787  02C3  00AF               	movwf	(?___llmod+2)
  2788  02C4  3000               	movlw	0
  2789  02C5  00AE               	movwf	(?___llmod+1)
  2790  02C6  300A               	movlw	0Ah
  2791  02C7  00AD               	movwf	(?___llmod)
  2792                           
  2793  02C8  3000               	movlw	0
  2794  02C9  00A3               	movwf	(?___lldiv+3)
  2795  02CA  3000               	movlw	0
  2796  02CB  00A2               	movwf	(?___lldiv+2)
  2797  02CC  3000               	movlw	0
  2798  02CD  00A1               	movwf	(?___lldiv+1)
  2799  02CE  300A               	movlw	0Ah
  2800  02CF  00A0               	movwf	(?___lldiv)
  2801                           
  2802  02D0  083A               	movf	(converter_uartph@b+3),w
  2803  02D1  00A7               	movwf	3+(?___lldiv)+04h
  2804  02D2  0839               	movf	(converter_uartph@b+2),w
  2805  02D3  00A6               	movwf	2+(?___lldiv)+04h
  2806  02D4  0838               	movf	(converter_uartph@b+1),w
  2807  02D5  00A5               	movwf	1+(?___lldiv)+04h
  2808  02D6  0837               	movf	(converter_uartph@b),w
  2809  02D7  00A4               	movwf	0+(?___lldiv)+04h
  2810                           
  2811  02D8  120A  118A  2424   	fcall	___lldiv
              120A  118A         
  2812  02DD  1283               	bcf	status, 5	;RP0=0, select bank0
  2813  02DE  1303               	bcf	status, 6	;RP1=0, select bank0
  2814  02DF  0823               	movf	(3+(?___lldiv)),w
  2815  02E0  00B4               	movwf	3+(?___llmod)+04h
  2816  02E1  0822               	movf	(2+(?___lldiv)),w
  2817  02E2  00B3               	movwf	2+(?___llmod)+04h
  2818  02E3  0821               	movf	(1+(?___lldiv)),w
  2819  02E4  00B2               	movwf	1+(?___llmod)+04h
  2820  02E5  0820               	movf	(0+(?___lldiv)),w
  2821  02E6  00B1               	movwf	0+(?___llmod)+04h
  2822                           
  2823  02E7  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  2824  02EC  1283               	bcf	status, 5	;RP0=0, select bank0
  2825  02ED  1303               	bcf	status, 6	;RP1=0, select bank0
  2826  02EE  082D               	movf	0+(((0+(?___llmod)))),w
  2827  02EF  3E30               	addlw	030h
  2828  02F0  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  2829                           	line	109
  2830                           ;ADC.h: 109: uart_tx((b%10)+48);
  2831  02F5  3000               	movlw	0
  2832  02F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2833  02F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2834  02F8  00B0               	movwf	(?___llmod+3)
  2835  02F9  3000               	movlw	0
  2836  02FA  00AF               	movwf	(?___llmod+2)
  2837  02FB  3000               	movlw	0
  2838  02FC  00AE               	movwf	(?___llmod+1)
  2839  02FD  300A               	movlw	0Ah
  2840  02FE  00AD               	movwf	(?___llmod)
  2841                           
  2842  02FF  083A               	movf	(converter_uartph@b+3),w
  2843  0300  00B4               	movwf	3+(?___llmod)+04h
  2844  0301  0839               	movf	(converter_uartph@b+2),w
  2845  0302  00B3               	movwf	2+(?___llmod)+04h
  2846  0303  0838               	movf	(converter_uartph@b+1),w
  2847  0304  00B2               	movwf	1+(?___llmod)+04h
  2848  0305  0837               	movf	(converter_uartph@b),w
  2849  0306  00B1               	movwf	0+(?___llmod)+04h
  2850                           
  2851  0307  120A  118A  23C6   	fcall	___llmod
              120A  118A         
  2852  030C  1283               	bcf	status, 5	;RP0=0, select bank0
  2853  030D  1303               	bcf	status, 6	;RP1=0, select bank0
  2854  030E  082D               	movf	0+(((0+(?___llmod)))),w
  2855  030F  3E30               	addlw	030h
  2856  0310  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  2857                           	line	110
  2858                           	
  2859  0315                     l778:	
  2860  0315  0008               	return
  2861                           	opt stack 0
  2862                           GLOBAL	__end_of_converter_uartph
  2863  0316                     	__end_of_converter_uartph:
  2864 ;; =============== function _converter_uartph ends ============
  2865                           
  2866                           	signat	_converter_uartph,4216
  2867                           	global	_lcd_dat
  2868                           psect	text458,local,class=CODE,delta=2
  2869                           global __ptext458
  2870  015A                     __ptext458:
  2871                           
  2872 ;; *************** function _lcd_dat *****************
  2873 ;; Defined at:
  2874 ;;		line 28 in file "lcd.h"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  b               1    wreg     unsigned char 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  b               1    7[COMMON] unsigned char 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;		None               void
  2881 ;; Registers used:
  2882 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2888 ;;      Params:         0       0       0       0       0
  2889 ;;      Locals:         1       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0
  2891 ;;      Totals:         1       0       0       0       0
  2892 ;;Total ram usage:        1 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; Hardware stack levels required when called:    1
  2895 ;; This function calls:
  2896 ;;		_delay
  2897 ;; This function is called by:
  2898 ;;		_show
  2899 ;;		_converter_dispph
  2900 ;;		_converter_disptu
  2901 ;;		_converter_dispch
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           psect	text458
  2905                           	file	"lcd.h"
  2906                           	line	28
  2907                           	global	__size_of_lcd_dat
  2908  0015                     	__size_of_lcd_dat	equ	__end_of_lcd_dat-_lcd_dat
  2909                           	
  2910  015A                     _lcd_dat:	
  2911                           	opt	stack 3
  2912                           ; Regs used in _lcd_dat: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2913                           ;lcd_dat@b stored from wreg
  2914  015A  00F7               	movwf	(lcd_dat@b)
  2915                           	line	29
  2916                           	
  2917  015B                     l3449:	
  2918                           ;lcd.h: 29: PORTB=b;
  2919  015B  0877               	movf	(lcd_dat@b),w
  2920  015C  1283               	bcf	status, 5	;RP0=0, select bank0
  2921  015D  1303               	bcf	status, 6	;RP1=0, select bank0
  2922  015E  0086               	movwf	(6)	;volatile
  2923                           	line	30
  2924                           	
  2925  015F                     l3451:	
  2926                           ;lcd.h: 30: RC0=1;
  2927  015F  1407               	bsf	(56/8),(56)&7
  2928                           	line	31
  2929                           	
  2930  0160                     l3453:	
  2931                           ;lcd.h: 31: RC1=0;
  2932  0160  1087               	bcf	(57/8),(57)&7
  2933                           	line	32
  2934                           	
  2935  0161                     l3455:	
  2936                           ;lcd.h: 32: RC2=1;
  2937  0161  1507               	bsf	(58/8),(58)&7
  2938                           	line	33
  2939                           	
  2940  0162                     l3457:	
  2941                           ;lcd.h: 33: delay(5);
  2942  0162  3005               	movlw	low(05h)
  2943  0163  00F0               	movwf	(?_delay)
  2944  0164  3000               	movlw	high(05h)
  2945  0165  00F1               	movwf	((?_delay))+1
  2946  0166  120A  118A  21F1   	fcall	_delay
              120A  118A         
  2947                           	line	34
  2948                           	
  2949  016B                     l3459:	
  2950                           ;lcd.h: 34: RC2=0;
  2951  016B  1283               	bcf	status, 5	;RP0=0, select bank0
  2952  016C  1303               	bcf	status, 6	;RP1=0, select bank0
  2953  016D  1107               	bcf	(58/8),(58)&7
  2954                           	line	35
  2955                           	
  2956  016E                     l734:	
  2957  016E  0008               	return
  2958                           	opt stack 0
  2959                           GLOBAL	__end_of_lcd_dat
  2960  016F                     	__end_of_lcd_dat:
  2961 ;; =============== function _lcd_dat ends ============
  2962                           
  2963                           	signat	_lcd_dat,4216
  2964                           	global	_lcd_cmd
  2965                           psect	text459,local,class=CODE,delta=2
  2966                           global __ptext459
  2967  0145                     __ptext459:
  2968                           
  2969 ;; *************** function _lcd_cmd *****************
  2970 ;; Defined at:
  2971 ;;		line 18 in file "lcd.h"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  a               1    wreg     unsigned char 
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;  a               1    7[COMMON] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;		None               void
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2985 ;;      Params:         0       0       0       0       0
  2986 ;;      Locals:         1       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0
  2988 ;;      Totals:         1       0       0       0       0
  2989 ;;Total ram usage:        1 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    1
  2992 ;; This function calls:
  2993 ;;		_delay
  2994 ;; This function is called by:
  2995 ;;		_lcd_int
  2996 ;;		_adc
  2997 ;;		_main
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           psect	text459
  3001                           	file	"lcd.h"
  3002                           	line	18
  3003                           	global	__size_of_lcd_cmd
  3004  0015                     	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
  3005                           	
  3006  0145                     _lcd_cmd:	
  3007                           	opt	stack 5
  3008                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3009                           ;lcd_cmd@a stored from wreg
  3010  0145  00F7               	movwf	(lcd_cmd@a)
  3011                           	line	19
  3012                           	
  3013  0146                     l3437:	
  3014                           ;lcd.h: 19: PORTB=a;
  3015  0146  0877               	movf	(lcd_cmd@a),w
  3016  0147  1283               	bcf	status, 5	;RP0=0, select bank0
  3017  0148  1303               	bcf	status, 6	;RP1=0, select bank0
  3018  0149  0086               	movwf	(6)	;volatile
  3019                           	line	20
  3020                           	
  3021  014A                     l3439:	
  3022                           ;lcd.h: 20: RC0=0;
  3023  014A  1007               	bcf	(56/8),(56)&7
  3024                           	line	21
  3025                           	
  3026  014B                     l3441:	
  3027                           ;lcd.h: 21: RC1=0;
  3028  014B  1087               	bcf	(57/8),(57)&7
  3029                           	line	22
  3030                           	
  3031  014C                     l3443:	
  3032                           ;lcd.h: 22: RC2=1;
  3033  014C  1507               	bsf	(58/8),(58)&7
  3034                           	line	23
  3035                           	
  3036  014D                     l3445:	
  3037                           ;lcd.h: 23: delay(5);
  3038  014D  3005               	movlw	low(05h)
  3039  014E  00F0               	movwf	(?_delay)
  3040  014F  3000               	movlw	high(05h)
  3041  0150  00F1               	movwf	((?_delay))+1
  3042  0151  120A  118A  21F1   	fcall	_delay
              120A  118A         
  3043                           	line	24
  3044                           	
  3045  0156                     l3447:	
  3046                           ;lcd.h: 24: RC2=0;
  3047  0156  1283               	bcf	status, 5	;RP0=0, select bank0
  3048  0157  1303               	bcf	status, 6	;RP1=0, select bank0
  3049  0158  1107               	bcf	(58/8),(58)&7
  3050                           	line	25
  3051                           	
  3052  0159                     l731:	
  3053  0159  0008               	return
  3054                           	opt stack 0
  3055                           GLOBAL	__end_of_lcd_cmd
  3056  015A                     	__end_of_lcd_cmd:
  3057 ;; =============== function _lcd_cmd ends ============
  3058                           
  3059                           	signat	_lcd_cmd,4216
  3060                           	global	_uart_string
  3061                           psect	text460,local,class=CODE,delta=2
  3062                           global __ptext460
  3063  01CA                     __ptext460:
  3064                           
  3065 ;; *************** function _uart_string *****************
  3066 ;; Defined at:
  3067 ;;		line 25 in file "UART.h"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;  str             1    wreg     PTR unsigned char 
  3070 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  str             1    1[COMMON] PTR unsigned char 
  3073 ;;		 -> STR_3(4), STR_2(4), STR_1(4), 
  3074 ;;  k               2    2[COMMON] int 
  3075 ;; Return value:  Size  Location     Type
  3076 ;;		None               void
  3077 ;; Registers used:
  3078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3084 ;;      Params:         0       0       0       0       0
  3085 ;;      Locals:         3       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0
  3087 ;;      Totals:         3       0       0       0       0
  3088 ;;Total ram usage:        3 bytes
  3089 ;; Hardware stack levels used:    1
  3090 ;; Hardware stack levels required when called:    1
  3091 ;; This function calls:
  3092 ;;		_uart_tx
  3093 ;; This function is called by:
  3094 ;;		_adc_ph
  3095 ;;		_adc_turb
  3096 ;;		_adc_chlor
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           psect	text460
  3100                           	file	"UART.h"
  3101                           	global	__size_of_uart_string
  3102  0027                     	__size_of_uart_string	equ	__end_of_uart_string-_uart_string
  3103                           	
  3104  01CA                     _uart_string:	
  3105                           	opt	stack 4
  3106                           ; Regs used in _uart_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3107                           ;uart_string@str stored from wreg
  3108  01CA  00F1               	movwf	(uart_string@str)
  3109                           	line	26
  3110                           	
  3111  01CB                     l3429:	
  3112                           ;UART.h: 26: int k=0;
  3113  01CB  01F2               	clrf	(uart_string@k)
  3114  01CC  01F3               	clrf	(uart_string@k+1)
  3115                           	line	27
  3116                           ;UART.h: 27: while(str[k]!='\0')
  3117  01CD  29E2               	goto	l3435
  3118                           	
  3119  01CE                     l723:	
  3120                           	line	29
  3121                           	
  3122  01CE                     l3431:	
  3123                           ;UART.h: 28: {
  3124                           ;UART.h: 29: uart_tx(str[k]);
  3125  01CE  0872               	movf	(uart_string@k),w
  3126  01CF  0771               	addwf	(uart_string@str),w
  3127  01D0  0084               	movwf	fsr0
  3128  01D1  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3129  01D6  120A  118A  212B   	fcall	_uart_tx
              120A  118A         
  3130                           	line	30
  3131                           	
  3132  01DB                     l3433:	
  3133                           ;UART.h: 30: k++;
  3134  01DB  3001               	movlw	low(01h)
  3135  01DC  07F2               	addwf	(uart_string@k),f
  3136  01DD  1803               	skipnc
  3137  01DE  0AF3               	incf	(uart_string@k+1),f
  3138  01DF  3000               	movlw	high(01h)
  3139  01E0  07F3               	addwf	(uart_string@k+1),f
  3140  01E1  29E2               	goto	l3435
  3141                           	line	31
  3142                           	
  3143  01E2                     l722:	
  3144                           	line	27
  3145                           	
  3146  01E2                     l3435:	
  3147  01E2  0872               	movf	(uart_string@k),w
  3148  01E3  0771               	addwf	(uart_string@str),w
  3149  01E4  0084               	movwf	fsr0
  3150  01E5  120A  118A  2003   	fcall	stringdir
              120A  118A         
  3151  01EA  3800               	iorlw	0
  3152  01EB  1D03               	skipz
  3153  01EC  29EE               	goto	u2571
  3154  01ED  29EF               	goto	u2570
  3155  01EE                     u2571:
  3156  01EE  29CE               	goto	l3431
  3157  01EF                     u2570:
  3158  01EF  29F0               	goto	l725
  3159                           	
  3160  01F0                     l724:	
  3161                           	line	32
  3162                           	
  3163  01F0                     l725:	
  3164  01F0  0008               	return
  3165                           	opt stack 0
  3166                           GLOBAL	__end_of_uart_string
  3167  01F1                     	__end_of_uart_string:
  3168 ;; =============== function _uart_string ends ============
  3169                           
  3170                           	signat	_uart_string,4216
  3171                           	global	___lldiv
  3172                           psect	text461,local,class=CODE,delta=2
  3173                           global __ptext461
  3174  0424                     __ptext461:
  3175                           
  3176 ;; *************** function ___lldiv *****************
  3177 ;; Defined at:
  3178 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  divisor         4    0[BANK0 ] unsigned long 
  3181 ;;  dividend        4    4[BANK0 ] unsigned long 
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;  quotient        4    8[BANK0 ] unsigned long 
  3184 ;;  counter         1   12[BANK0 ] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  4    0[BANK0 ] unsigned long 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3194 ;;      Params:         0       8       0       0       0
  3195 ;;      Locals:         0       5       0       0       0
  3196 ;;      Temps:          1       0       0       0       0
  3197 ;;      Totals:         1      13       0       0       0
  3198 ;;Total ram usage:       14 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_adc_ph
  3204 ;;		_adc_turb
  3205 ;;		_adc_chlor
  3206 ;;		_converter_dispph
  3207 ;;		_converter_uartph
  3208 ;;		_converter_disptu
  3209 ;;		_converter_uarttu
  3210 ;;		_converter_uartch
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           psect	text461
  3214                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lldiv.c"
  3215                           	line	5
  3216                           	global	__size_of___lldiv
  3217  0070                     	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  3218                           	
  3219  0424                     ___lldiv:	
  3220                           	opt	stack 4
  3221                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3222                           	line	9
  3223                           	
  3224  0424                     l3405:	
  3225  0424  3000               	movlw	0
  3226  0425  1283               	bcf	status, 5	;RP0=0, select bank0
  3227  0426  1303               	bcf	status, 6	;RP1=0, select bank0
  3228  0427  00AB               	movwf	(___lldiv@quotient+3)
  3229  0428  3000               	movlw	0
  3230  0429  00AA               	movwf	(___lldiv@quotient+2)
  3231  042A  3000               	movlw	0
  3232  042B  00A9               	movwf	(___lldiv@quotient+1)
  3233  042C  3000               	movlw	0
  3234  042D  00A8               	movwf	(___lldiv@quotient)
  3235                           
  3236                           	line	10
  3237  042E  0823               	movf	(___lldiv@divisor+3),w
  3238  042F  0422               	iorwf	(___lldiv@divisor+2),w
  3239  0430  0421               	iorwf	(___lldiv@divisor+1),w
  3240  0431  0420               	iorwf	(___lldiv@divisor),w
  3241  0432  1903               	skipnz
  3242  0433  2C35               	goto	u2501
  3243  0434  2C36               	goto	u2500
  3244  0435                     u2501:
  3245  0435  2C8A               	goto	l3425
  3246  0436                     u2500:
  3247                           	line	11
  3248                           	
  3249  0436                     l3407:	
  3250  0436  01AC               	clrf	(___lldiv@counter)
  3251  0437  1403               	bsf	status,0
  3252  0438  0DAC               	rlf	(___lldiv@counter),f
  3253                           	line	12
  3254  0439  2C48               	goto	l3411
  3255                           	
  3256  043A                     l1653:	
  3257                           	line	13
  3258                           	
  3259  043A                     l3409:	
  3260  043A  3001               	movlw	01h
  3261  043B  00FD               	movwf	(??___lldiv+0)+0
  3262  043C                     u2515:
  3263  043C  1003               	clrc
  3264  043D  0DA0               	rlf	(___lldiv@divisor),f
  3265  043E  0DA1               	rlf	(___lldiv@divisor+1),f
  3266  043F  0DA2               	rlf	(___lldiv@divisor+2),f
  3267  0440  0DA3               	rlf	(___lldiv@divisor+3),f
  3268  0441  0BFD               	decfsz	(??___lldiv+0)+0
  3269  0442  2C3C               	goto	u2515
  3270                           	line	14
  3271  0443  3001               	movlw	(01h)
  3272  0444  00FD               	movwf	(??___lldiv+0)+0
  3273  0445  087D               	movf	(??___lldiv+0)+0,w
  3274  0446  07AC               	addwf	(___lldiv@counter),f
  3275  0447  2C48               	goto	l3411
  3276                           	line	15
  3277                           	
  3278  0448                     l1652:	
  3279                           	line	12
  3280                           	
  3281  0448                     l3411:	
  3282  0448  1FA3               	btfss	(___lldiv@divisor+3),(31)&7
  3283  0449  2C4B               	goto	u2521
  3284  044A  2C4C               	goto	u2520
  3285  044B                     u2521:
  3286  044B  2C3A               	goto	l3409
  3287  044C                     u2520:
  3288  044C  2C4E               	goto	l3413
  3289                           	
  3290  044D                     l1654:	
  3291  044D  2C4E               	goto	l3413
  3292                           	line	16
  3293                           	
  3294  044E                     l1655:	
  3295                           	line	17
  3296                           	
  3297  044E                     l3413:	
  3298  044E  3001               	movlw	01h
  3299  044F  00FD               	movwf	(??___lldiv+0)+0
  3300  0450                     u2535:
  3301  0450  1003               	clrc
  3302  0451  0DA8               	rlf	(___lldiv@quotient),f
  3303  0452  0DA9               	rlf	(___lldiv@quotient+1),f
  3304  0453  0DAA               	rlf	(___lldiv@quotient+2),f
  3305  0454  0DAB               	rlf	(___lldiv@quotient+3),f
  3306  0455  0BFD               	decfsz	(??___lldiv+0)+0
  3307  0456  2C50               	goto	u2535
  3308                           	line	18
  3309                           	
  3310  0457                     l3415:	
  3311  0457  0823               	movf	(___lldiv@divisor+3),w
  3312  0458  0227               	subwf	(___lldiv@dividend+3),w
  3313  0459  1D03               	skipz
  3314  045A  2C65               	goto	u2545
  3315  045B  0822               	movf	(___lldiv@divisor+2),w
  3316  045C  0226               	subwf	(___lldiv@dividend+2),w
  3317  045D  1D03               	skipz
  3318  045E  2C65               	goto	u2545
  3319  045F  0821               	movf	(___lldiv@divisor+1),w
  3320  0460  0225               	subwf	(___lldiv@dividend+1),w
  3321  0461  1D03               	skipz
  3322  0462  2C65               	goto	u2545
  3323  0463  0820               	movf	(___lldiv@divisor),w
  3324  0464  0224               	subwf	(___lldiv@dividend),w
  3325  0465                     u2545:
  3326  0465  1C03               	skipc
  3327  0466  2C68               	goto	u2541
  3328  0467  2C69               	goto	u2540
  3329  0468                     u2541:
  3330  0468  2C79               	goto	l3421
  3331  0469                     u2540:
  3332                           	line	19
  3333                           	
  3334  0469                     l3417:	
  3335  0469  0820               	movf	(___lldiv@divisor),w
  3336  046A  02A4               	subwf	(___lldiv@dividend),f
  3337  046B  0821               	movf	(___lldiv@divisor+1),w
  3338  046C  1C03               	skipc
  3339  046D  0F21               	incfsz	(___lldiv@divisor+1),w
  3340  046E  02A5               	subwf	(___lldiv@dividend+1),f
  3341  046F  0822               	movf	(___lldiv@divisor+2),w
  3342  0470  1C03               	skipc
  3343  0471  0F22               	incfsz	(___lldiv@divisor+2),w
  3344  0472  02A6               	subwf	(___lldiv@dividend+2),f
  3345  0473  0823               	movf	(___lldiv@divisor+3),w
  3346  0474  1C03               	skipc
  3347  0475  0F23               	incfsz	(___lldiv@divisor+3),w
  3348  0476  02A7               	subwf	(___lldiv@dividend+3),f
  3349                           	line	20
  3350                           	
  3351  0477                     l3419:	
  3352  0477  1428               	bsf	(___lldiv@quotient)+(0/8),(0)&7
  3353  0478  2C79               	goto	l3421
  3354                           	line	21
  3355                           	
  3356  0479                     l1656:	
  3357                           	line	22
  3358                           	
  3359  0479                     l3421:	
  3360  0479  3001               	movlw	01h
  3361  047A                     u2555:
  3362  047A  1003               	clrc
  3363  047B  0CA3               	rrf	(___lldiv@divisor+3),f
  3364  047C  0CA2               	rrf	(___lldiv@divisor+2),f
  3365  047D  0CA1               	rrf	(___lldiv@divisor+1),f
  3366  047E  0CA0               	rrf	(___lldiv@divisor),f
  3367  047F  3EFF               	addlw	-1
  3368  0480  1D03               	skipz
  3369  0481  2C7A               	goto	u2555
  3370                           
  3371                           	line	23
  3372                           	
  3373  0482                     l3423:	
  3374  0482  3001               	movlw	low(01h)
  3375  0483  02AC               	subwf	(___lldiv@counter),f
  3376  0484  1D03               	btfss	status,2
  3377  0485  2C87               	goto	u2561
  3378  0486  2C88               	goto	u2560
  3379  0487                     u2561:
  3380  0487  2C4E               	goto	l3413
  3381  0488                     u2560:
  3382  0488  2C8A               	goto	l3425
  3383                           	
  3384  0489                     l1657:	
  3385  0489  2C8A               	goto	l3425
  3386                           	line	24
  3387                           	
  3388  048A                     l1651:	
  3389                           	line	25
  3390                           	
  3391  048A                     l3425:	
  3392  048A  082B               	movf	(___lldiv@quotient+3),w
  3393  048B  00A3               	movwf	(?___lldiv+3)
  3394  048C  082A               	movf	(___lldiv@quotient+2),w
  3395  048D  00A2               	movwf	(?___lldiv+2)
  3396  048E  0829               	movf	(___lldiv@quotient+1),w
  3397  048F  00A1               	movwf	(?___lldiv+1)
  3398  0490  0828               	movf	(___lldiv@quotient),w
  3399  0491  00A0               	movwf	(?___lldiv)
  3400                           
  3401  0492  2C93               	goto	l1658
  3402                           	
  3403  0493                     l3427:	
  3404                           	line	26
  3405                           	
  3406  0493                     l1658:	
  3407  0493  0008               	return
  3408                           	opt stack 0
  3409                           GLOBAL	__end_of___lldiv
  3410  0494                     	__end_of___lldiv:
  3411 ;; =============== function ___lldiv ends ============
  3412                           
  3413                           	signat	___lldiv,8316
  3414                           	global	___llmod
  3415                           psect	text462,local,class=CODE,delta=2
  3416                           global __ptext462
  3417  03C6                     __ptext462:
  3418                           
  3419 ;; *************** function ___llmod *****************
  3420 ;; Defined at:
  3421 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  divisor         4   13[BANK0 ] unsigned long 
  3424 ;;  dividend        4   17[BANK0 ] unsigned long 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;  counter         1   22[BANK0 ] unsigned char 
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  4   13[BANK0 ] unsigned long 
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3436 ;;      Params:         0       8       0       0       0
  3437 ;;      Locals:         0       1       0       0       0
  3438 ;;      Temps:          0       1       0       0       0
  3439 ;;      Totals:         0      10       0       0       0
  3440 ;;Total ram usage:       10 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_converter_dispph
  3446 ;;		_converter_uartph
  3447 ;;		_converter_disptu
  3448 ;;		_converter_uarttu
  3449 ;;		_converter_dispch
  3450 ;;		_converter_uartch
  3451 ;; This function uses a non-reentrant model
  3452 ;;
  3453                           psect	text462
  3454                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\llmod.c"
  3455                           	line	5
  3456                           	global	__size_of___llmod
  3457  005E                     	__size_of___llmod	equ	__end_of___llmod-___llmod
  3458                           	
  3459  03C6                     ___llmod:	
  3460                           	opt	stack 4
  3461                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3462                           	line	8
  3463                           	
  3464  03C6                     l3385:	
  3465  03C6  1283               	bcf	status, 5	;RP0=0, select bank0
  3466  03C7  1303               	bcf	status, 6	;RP1=0, select bank0
  3467  03C8  0830               	movf	(___llmod@divisor+3),w
  3468  03C9  042F               	iorwf	(___llmod@divisor+2),w
  3469  03CA  042E               	iorwf	(___llmod@divisor+1),w
  3470  03CB  042D               	iorwf	(___llmod@divisor),w
  3471  03CC  1903               	skipnz
  3472  03CD  2BCF               	goto	u2441
  3473  03CE  2BD0               	goto	u2440
  3474  03CF                     u2441:
  3475  03CF  2C1A               	goto	l3401
  3476  03D0                     u2440:
  3477                           	line	9
  3478                           	
  3479  03D0                     l3387:	
  3480  03D0  01B6               	clrf	(___llmod@counter)
  3481  03D1  1403               	bsf	status,0
  3482  03D2  0DB6               	rlf	(___llmod@counter),f
  3483                           	line	10
  3484  03D3  2BE2               	goto	l3391
  3485                           	
  3486  03D4                     l1634:	
  3487                           	line	11
  3488                           	
  3489  03D4                     l3389:	
  3490  03D4  3001               	movlw	01h
  3491  03D5  00B5               	movwf	(??___llmod+0)+0
  3492  03D6                     u2455:
  3493  03D6  1003               	clrc
  3494  03D7  0DAD               	rlf	(___llmod@divisor),f
  3495  03D8  0DAE               	rlf	(___llmod@divisor+1),f
  3496  03D9  0DAF               	rlf	(___llmod@divisor+2),f
  3497  03DA  0DB0               	rlf	(___llmod@divisor+3),f
  3498  03DB  0BB5               	decfsz	(??___llmod+0)+0
  3499  03DC  2BD6               	goto	u2455
  3500                           	line	12
  3501  03DD  3001               	movlw	(01h)
  3502  03DE  00B5               	movwf	(??___llmod+0)+0
  3503  03DF  0835               	movf	(??___llmod+0)+0,w
  3504  03E0  07B6               	addwf	(___llmod@counter),f
  3505  03E1  2BE2               	goto	l3391
  3506                           	line	13
  3507                           	
  3508  03E2                     l1633:	
  3509                           	line	10
  3510                           	
  3511  03E2                     l3391:	
  3512  03E2  1FB0               	btfss	(___llmod@divisor+3),(31)&7
  3513  03E3  2BE5               	goto	u2461
  3514  03E4  2BE6               	goto	u2460
  3515  03E5                     u2461:
  3516  03E5  2BD4               	goto	l3389
  3517  03E6                     u2460:
  3518  03E6  2BE8               	goto	l3393
  3519                           	
  3520  03E7                     l1635:	
  3521  03E7  2BE8               	goto	l3393
  3522                           	line	14
  3523                           	
  3524  03E8                     l1636:	
  3525                           	line	15
  3526                           	
  3527  03E8                     l3393:	
  3528  03E8  0830               	movf	(___llmod@divisor+3),w
  3529  03E9  0234               	subwf	(___llmod@dividend+3),w
  3530  03EA  1D03               	skipz
  3531  03EB  2BF6               	goto	u2475
  3532  03EC  082F               	movf	(___llmod@divisor+2),w
  3533  03ED  0233               	subwf	(___llmod@dividend+2),w
  3534  03EE  1D03               	skipz
  3535  03EF  2BF6               	goto	u2475
  3536  03F0  082E               	movf	(___llmod@divisor+1),w
  3537  03F1  0232               	subwf	(___llmod@dividend+1),w
  3538  03F2  1D03               	skipz
  3539  03F3  2BF6               	goto	u2475
  3540  03F4  082D               	movf	(___llmod@divisor),w
  3541  03F5  0231               	subwf	(___llmod@dividend),w
  3542  03F6                     u2475:
  3543  03F6  1C03               	skipc
  3544  03F7  2BF9               	goto	u2471
  3545  03F8  2BFA               	goto	u2470
  3546  03F9                     u2471:
  3547  03F9  2C09               	goto	l3397
  3548  03FA                     u2470:
  3549                           	line	16
  3550                           	
  3551  03FA                     l3395:	
  3552  03FA  082D               	movf	(___llmod@divisor),w
  3553  03FB  02B1               	subwf	(___llmod@dividend),f
  3554  03FC  082E               	movf	(___llmod@divisor+1),w
  3555  03FD  1C03               	skipc
  3556  03FE  0F2E               	incfsz	(___llmod@divisor+1),w
  3557  03FF  02B2               	subwf	(___llmod@dividend+1),f
  3558  0400  082F               	movf	(___llmod@divisor+2),w
  3559  0401  1C03               	skipc
  3560  0402  0F2F               	incfsz	(___llmod@divisor+2),w
  3561  0403  02B3               	subwf	(___llmod@dividend+2),f
  3562  0404  0830               	movf	(___llmod@divisor+3),w
  3563  0405  1C03               	skipc
  3564  0406  0F30               	incfsz	(___llmod@divisor+3),w
  3565  0407  02B4               	subwf	(___llmod@dividend+3),f
  3566  0408  2C09               	goto	l3397
  3567                           	
  3568  0409                     l1637:	
  3569                           	line	17
  3570                           	
  3571  0409                     l3397:	
  3572  0409  3001               	movlw	01h
  3573  040A                     u2485:
  3574  040A  1003               	clrc
  3575  040B  0CB0               	rrf	(___llmod@divisor+3),f
  3576  040C  0CAF               	rrf	(___llmod@divisor+2),f
  3577  040D  0CAE               	rrf	(___llmod@divisor+1),f
  3578  040E  0CAD               	rrf	(___llmod@divisor),f
  3579  040F  3EFF               	addlw	-1
  3580  0410  1D03               	skipz
  3581  0411  2C0A               	goto	u2485
  3582                           
  3583                           	line	18
  3584                           	
  3585  0412                     l3399:	
  3586  0412  3001               	movlw	low(01h)
  3587  0413  02B6               	subwf	(___llmod@counter),f
  3588  0414  1D03               	btfss	status,2
  3589  0415  2C17               	goto	u2491
  3590  0416  2C18               	goto	u2490
  3591  0417                     u2491:
  3592  0417  2BE8               	goto	l3393
  3593  0418                     u2490:
  3594  0418  2C1A               	goto	l3401
  3595                           	
  3596  0419                     l1638:	
  3597  0419  2C1A               	goto	l3401
  3598                           	line	19
  3599                           	
  3600  041A                     l1632:	
  3601                           	line	20
  3602                           	
  3603  041A                     l3401:	
  3604  041A  0834               	movf	(___llmod@dividend+3),w
  3605  041B  00B0               	movwf	(?___llmod+3)
  3606  041C  0833               	movf	(___llmod@dividend+2),w
  3607  041D  00AF               	movwf	(?___llmod+2)
  3608  041E  0832               	movf	(___llmod@dividend+1),w
  3609  041F  00AE               	movwf	(?___llmod+1)
  3610  0420  0831               	movf	(___llmod@dividend),w
  3611  0421  00AD               	movwf	(?___llmod)
  3612                           
  3613  0422  2C23               	goto	l1639
  3614                           	
  3615  0423                     l3403:	
  3616                           	line	21
  3617                           	
  3618  0423                     l1639:	
  3619  0423  0008               	return
  3620                           	opt stack 0
  3621                           GLOBAL	__end_of___llmod
  3622  0424                     	__end_of___llmod:
  3623 ;; =============== function ___llmod ends ============
  3624                           
  3625                           	signat	___llmod,8316
  3626                           	global	___lmul
  3627                           psect	text463,local,class=CODE,delta=2
  3628                           global __ptext463
  3629  0274                     __ptext463:
  3630                           
  3631 ;; *************** function ___lmul *****************
  3632 ;; Defined at:
  3633 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lmul.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  multiplier      4    0[COMMON] unsigned long 
  3636 ;;  multiplicand    4    4[COMMON] unsigned long 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  product         4    9[COMMON] unsigned long 
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  4    0[COMMON] unsigned long 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3648 ;;      Params:         8       0       0       0       0
  3649 ;;      Locals:         4       0       0       0       0
  3650 ;;      Temps:          1       0       0       0       0
  3651 ;;      Totals:        13       0       0       0       0
  3652 ;;Total ram usage:       13 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_adc_ph
  3658 ;;		_adc_turb
  3659 ;;		_adc_chlor
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           psect	text463
  3663                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\lmul.c"
  3664                           	line	3
  3665                           	global	__size_of___lmul
  3666  004A                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  3667                           	
  3668  0274                     ___lmul:	
  3669                           	opt	stack 5
  3670                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3671                           	line	4
  3672                           	
  3673  0274                     l3371:	
  3674  0274  3000               	movlw	0
  3675  0275  00FC               	movwf	(___lmul@product+3)
  3676  0276  3000               	movlw	0
  3677  0277  00FB               	movwf	(___lmul@product+2)
  3678  0278  3000               	movlw	0
  3679  0279  00FA               	movwf	(___lmul@product+1)
  3680  027A  3000               	movlw	0
  3681  027B  00F9               	movwf	(___lmul@product)
  3682                           
  3683  027C  2A7D               	goto	l3373
  3684                           	line	6
  3685                           	
  3686  027D                     l1554:	
  3687                           	line	7
  3688                           	
  3689  027D                     l3373:	
  3690  027D  1C70               	btfss	(___lmul@multiplier),(0)&7
  3691  027E  2A80               	goto	u2391
  3692  027F  2A81               	goto	u2390
  3693  0280                     u2391:
  3694  0280  2A99               	goto	l3377
  3695  0281                     u2390:
  3696                           	line	8
  3697                           	
  3698  0281                     l3375:	
  3699  0281  0874               	movf	(___lmul@multiplicand),w
  3700  0282  07F9               	addwf	(___lmul@product),f
  3701  0283  0875               	movf	(___lmul@multiplicand+1),w
  3702  0284  1103               	clrz
  3703  0285  1803               	skipnc
  3704  0286  3E01               	addlw	1
  3705  0287  1903               	skipnz
  3706  0288  2A8A               	goto	u2401
  3707  0289  07FA               	addwf	(___lmul@product+1),f
  3708  028A                     u2401:
  3709  028A  0876               	movf	(___lmul@multiplicand+2),w
  3710  028B  1103               	clrz
  3711  028C  1803               	skipnc
  3712  028D  3E01               	addlw	1
  3713  028E  1903               	skipnz
  3714  028F  2A91               	goto	u2402
  3715  0290  07FB               	addwf	(___lmul@product+2),f
  3716  0291                     u2402:
  3717  0291  0877               	movf	(___lmul@multiplicand+3),w
  3718  0292  1103               	clrz
  3719  0293  1803               	skipnc
  3720  0294  3E01               	addlw	1
  3721  0295  1903               	skipnz
  3722  0296  2A98               	goto	u2403
  3723  0297  07FC               	addwf	(___lmul@product+3),f
  3724  0298                     u2403:
  3725                           
  3726  0298  2A99               	goto	l3377
  3727                           	
  3728  0299                     l1555:	
  3729                           	line	9
  3730                           	
  3731  0299                     l3377:	
  3732  0299  3001               	movlw	01h
  3733  029A  00F8               	movwf	(??___lmul+0)+0
  3734  029B                     u2415:
  3735  029B  1003               	clrc
  3736  029C  0DF4               	rlf	(___lmul@multiplicand),f
  3737  029D  0DF5               	rlf	(___lmul@multiplicand+1),f
  3738  029E  0DF6               	rlf	(___lmul@multiplicand+2),f
  3739  029F  0DF7               	rlf	(___lmul@multiplicand+3),f
  3740  02A0  0BF8               	decfsz	(??___lmul+0)+0
  3741  02A1  2A9B               	goto	u2415
  3742                           	line	10
  3743                           	
  3744  02A2                     l3379:	
  3745  02A2  3001               	movlw	01h
  3746  02A3                     u2425:
  3747  02A3  1003               	clrc
  3748  02A4  0CF3               	rrf	(___lmul@multiplier+3),f
  3749  02A5  0CF2               	rrf	(___lmul@multiplier+2),f
  3750  02A6  0CF1               	rrf	(___lmul@multiplier+1),f
  3751  02A7  0CF0               	rrf	(___lmul@multiplier),f
  3752  02A8  3EFF               	addlw	-1
  3753  02A9  1D03               	skipz
  3754  02AA  2AA3               	goto	u2425
  3755                           
  3756                           	line	11
  3757  02AB  0873               	movf	(___lmul@multiplier+3),w
  3758  02AC  0472               	iorwf	(___lmul@multiplier+2),w
  3759  02AD  0471               	iorwf	(___lmul@multiplier+1),w
  3760  02AE  0470               	iorwf	(___lmul@multiplier),w
  3761  02AF  1D03               	skipz
  3762  02B0  2AB2               	goto	u2431
  3763  02B1  2AB3               	goto	u2430
  3764  02B2                     u2431:
  3765  02B2  2A7D               	goto	l3373
  3766  02B3                     u2430:
  3767  02B3  2AB4               	goto	l3381
  3768                           	
  3769  02B4                     l1556:	
  3770                           	line	12
  3771                           	
  3772  02B4                     l3381:	
  3773  02B4  087C               	movf	(___lmul@product+3),w
  3774  02B5  00F3               	movwf	(?___lmul+3)
  3775  02B6  087B               	movf	(___lmul@product+2),w
  3776  02B7  00F2               	movwf	(?___lmul+2)
  3777  02B8  087A               	movf	(___lmul@product+1),w
  3778  02B9  00F1               	movwf	(?___lmul+1)
  3779  02BA  0879               	movf	(___lmul@product),w
  3780  02BB  00F0               	movwf	(?___lmul)
  3781                           
  3782  02BC  2ABD               	goto	l1557
  3783                           	
  3784  02BD                     l3383:	
  3785                           	line	13
  3786                           	
  3787  02BD                     l1557:	
  3788  02BD  0008               	return
  3789                           	opt stack 0
  3790                           GLOBAL	__end_of___lmul
  3791  02BE                     	__end_of___lmul:
  3792 ;; =============== function ___lmul ends ============
  3793                           
  3794                           	signat	___lmul,8316
  3795                           	global	_delay
  3796                           psect	text464,local,class=CODE,delta=2
  3797                           global __ptext464
  3798  01F1                     __ptext464:
  3799                           
  3800 ;; *************** function _delay *****************
  3801 ;; Defined at:
  3802 ;;		line 46 in file "lcd.h"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  L               2    0[COMMON] int 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  j               2    5[COMMON] int 
  3807 ;;  i               2    3[COMMON] int 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;		None               void
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, btemp+1
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3817 ;;      Params:         2       0       0       0       0
  3818 ;;      Locals:         4       0       0       0       0
  3819 ;;      Temps:          1       0       0       0       0
  3820 ;;      Totals:         7       0       0       0       0
  3821 ;;Total ram usage:        7 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_lcd_cmd
  3827 ;;		_lcd_dat
  3828 ;;		_adc_ph
  3829 ;;		_adc_turb
  3830 ;;		_adc_chlor
  3831 ;;		_main
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           psect	text464
  3835                           	file	"lcd.h"
  3836                           	line	46
  3837                           	global	__size_of_delay
  3838  003E                     	__size_of_delay	equ	__end_of_delay-_delay
  3839                           	
  3840  01F1                     _delay:	
  3841                           	opt	stack 7
  3842                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  3843                           	line	48
  3844                           	
  3845  01F1                     l3357:	
  3846                           ;lcd.h: 47: int i,j;
  3847                           ;lcd.h: 48: for(i=0;i<L;i++)
  3848  01F1  01F3               	clrf	(delay@i)
  3849  01F2  01F4               	clrf	(delay@i+1)
  3850  01F3  2A1F               	goto	l743
  3851                           	line	49
  3852                           	
  3853  01F4                     l744:	
  3854                           	line	50
  3855                           	
  3856  01F4                     l3359:	
  3857                           ;lcd.h: 49: {
  3858                           ;lcd.h: 50: for(j=0;j<250;j++)
  3859  01F4  01F5               	clrf	(delay@j)
  3860  01F5  01F6               	clrf	(delay@j+1)
  3861                           	
  3862  01F6                     l3361:	
  3863  01F6  0876               	movf	(delay@j+1),w
  3864  01F7  3A80               	xorlw	80h
  3865  01F8  00FF               	movwf	btemp+1
  3866  01F9  3080               	movlw	(high(0FAh))^80h
  3867  01FA  027F               	subwf	btemp+1,w
  3868  01FB  1D03               	skipz
  3869  01FC  29FF               	goto	u2365
  3870  01FD  30FA               	movlw	low(0FAh)
  3871  01FE  0275               	subwf	(delay@j),w
  3872  01FF                     u2365:
  3873                           
  3874  01FF  1C03               	skipc
  3875  0200  2A02               	goto	u2361
  3876  0201  2A03               	goto	u2360
  3877  0202                     u2361:
  3878  0202  2A05               	goto	l3365
  3879  0203                     u2360:
  3880  0203  2A19               	goto	l3369
  3881                           	
  3882  0204                     l3363:	
  3883  0204  2A19               	goto	l3369
  3884                           	line	51
  3885                           	
  3886  0205                     l745:	
  3887                           	line	50
  3888                           	
  3889  0205                     l3365:	
  3890                           ;lcd.h: 51: {
  3891  0205  3001               	movlw	low(01h)
  3892  0206  07F5               	addwf	(delay@j),f
  3893  0207  1803               	skipnc
  3894  0208  0AF6               	incf	(delay@j+1),f
  3895  0209  3000               	movlw	high(01h)
  3896  020A  07F6               	addwf	(delay@j+1),f
  3897                           	
  3898  020B                     l3367:	
  3899  020B  0876               	movf	(delay@j+1),w
  3900  020C  3A80               	xorlw	80h
  3901  020D  00FF               	movwf	btemp+1
  3902  020E  3080               	movlw	(high(0FAh))^80h
  3903  020F  027F               	subwf	btemp+1,w
  3904  0210  1D03               	skipz
  3905  0211  2A14               	goto	u2375
  3906  0212  30FA               	movlw	low(0FAh)
  3907  0213  0275               	subwf	(delay@j),w
  3908  0214                     u2375:
  3909                           
  3910  0214  1C03               	skipc
  3911  0215  2A17               	goto	u2371
  3912  0216  2A18               	goto	u2370
  3913  0217                     u2371:
  3914  0217  2A05               	goto	l3365
  3915  0218                     u2370:
  3916  0218  2A19               	goto	l3369
  3917                           	
  3918  0219                     l746:	
  3919                           	line	48
  3920                           	
  3921  0219                     l3369:	
  3922  0219  3001               	movlw	low(01h)
  3923  021A  07F3               	addwf	(delay@i),f
  3924  021B  1803               	skipnc
  3925  021C  0AF4               	incf	(delay@i+1),f
  3926  021D  3000               	movlw	high(01h)
  3927  021E  07F4               	addwf	(delay@i+1),f
  3928                           	
  3929  021F                     l743:	
  3930  021F  0874               	movf	(delay@i+1),w
  3931  0220  3A80               	xorlw	80h
  3932  0221  00F2               	movwf	(??_delay+0)+0
  3933  0222  0871               	movf	(delay@L+1),w
  3934  0223  3A80               	xorlw	80h
  3935  0224  0272               	subwf	(??_delay+0)+0,w
  3936  0225  1D03               	skipz
  3937  0226  2A29               	goto	u2385
  3938  0227  0870               	movf	(delay@L),w
  3939  0228  0273               	subwf	(delay@i),w
  3940  0229                     u2385:
  3941                           
  3942  0229  1C03               	skipc
  3943  022A  2A2C               	goto	u2381
  3944  022B  2A2D               	goto	u2380
  3945  022C                     u2381:
  3946  022C  29F4               	goto	l3359
  3947  022D                     u2380:
  3948  022D  2A2E               	goto	l748
  3949                           	
  3950  022E                     l747:	
  3951                           	line	54
  3952                           	
  3953  022E                     l748:	
  3954  022E  0008               	return
  3955                           	opt stack 0
  3956                           GLOBAL	__end_of_delay
  3957  022F                     	__end_of_delay:
  3958 ;; =============== function _delay ends ============
  3959                           
  3960                           	signat	_delay,4216
  3961                           	global	_uart_tx
  3962                           psect	text465,local,class=CODE,delta=2
  3963                           global __ptext465
  3964  012B                     __ptext465:
  3965                           
  3966 ;; *************** function _uart_tx *****************
  3967 ;; Defined at:
  3968 ;;		line 13 in file "UART.h"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  ch              1    wreg     unsigned char 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  ch              1    0[COMMON] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;		None               void
  3975 ;; Registers used:
  3976 ;;		wreg
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3982 ;;      Params:         0       0       0       0       0
  3983 ;;      Locals:         1       0       0       0       0
  3984 ;;      Temps:          0       0       0       0       0
  3985 ;;      Totals:         1       0       0       0       0
  3986 ;;Total ram usage:        1 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_uart_string
  3992 ;;		_converter_uartph
  3993 ;;		_converter_uarttu
  3994 ;;		_converter_uartch
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           psect	text465
  3999                           	file	"UART.h"
  4000                           	line	13
  4001                           	global	__size_of_uart_tx
  4002  000C                     	__size_of_uart_tx	equ	__end_of_uart_tx-_uart_tx
  4003                           	
  4004  012B                     _uart_tx:	
  4005                           	opt	stack 4
  4006                           ; Regs used in _uart_tx: [wreg]
  4007                           ;uart_tx@ch stored from wreg
  4008  012B  00F0               	movwf	(uart_tx@ch)
  4009                           	line	14
  4010                           	
  4011  012C                     l3355:	
  4012                           ;UART.h: 14: TXREG=ch;
  4013  012C  0870               	movf	(uart_tx@ch),w
  4014  012D  1283               	bcf	status, 5	;RP0=0, select bank0
  4015  012E  1303               	bcf	status, 6	;RP1=0, select bank0
  4016  012F  0099               	movwf	(25)	;volatile
  4017                           	line	15
  4018                           ;UART.h: 15: while(TXIF==0);
  4019  0130  2931               	goto	l710
  4020                           	
  4021  0131                     l711:	
  4022                           	
  4023  0131                     l710:	
  4024  0131  1E0C               	btfss	(100/8),(100)&7
  4025  0132  2934               	goto	u2351
  4026  0133  2935               	goto	u2350
  4027  0134                     u2351:
  4028  0134  2931               	goto	l710
  4029  0135                     u2350:
  4030                           	
  4031  0135                     l712:	
  4032                           	line	16
  4033                           ;UART.h: 16: TXIF=0;
  4034  0135  120C               	bcf	(100/8),(100)&7
  4035                           	line	17
  4036                           	
  4037  0136                     l713:	
  4038  0136  0008               	return
  4039                           	opt stack 0
  4040                           GLOBAL	__end_of_uart_tx
  4041  0137                     	__end_of_uart_tx:
  4042 ;; =============== function _uart_tx ends ============
  4043                           
  4044                           	signat	_uart_tx,4216
  4045                           	global	_uart_init
  4046                           psect	text466,local,class=CODE,delta=2
  4047                           global __ptext466
  4048  0137                     __ptext466:
  4049                           
  4050 ;; *************** function _uart_init *****************
  4051 ;; Defined at:
  4052 ;;		line 6 in file "UART.h"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;		None
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;		None
  4057 ;; Return value:  Size  Location     Type
  4058 ;;		None               void
  4059 ;; Registers used:
  4060 ;;		wreg
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4066 ;;      Params:         0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_main
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           psect	text466
  4079                           	file	"UART.h"
  4080                           	line	6
  4081                           	global	__size_of_uart_init
  4082  000E                     	__size_of_uart_init	equ	__end_of_uart_init-_uart_init
  4083                           	
  4084  0137                     _uart_init:	
  4085                           	opt	stack 7
  4086                           ; Regs used in _uart_init: [wreg]
  4087                           	line	7
  4088                           	
  4089  0137                     l2235:	
  4090                           ;UART.h: 7: TXSTA=0X24;
  4091  0137  3024               	movlw	(024h)
  4092  0138  1683               	bsf	status, 5	;RP0=1, select bank1
  4093  0139  1303               	bcf	status, 6	;RP1=0, select bank1
  4094  013A  0098               	movwf	(152)^080h	;volatile
  4095                           	line	8
  4096                           ;UART.h: 8: RCSTA=0X90;
  4097  013B  3090               	movlw	(090h)
  4098  013C  1283               	bcf	status, 5	;RP0=0, select bank0
  4099  013D  1303               	bcf	status, 6	;RP1=0, select bank0
  4100  013E  0098               	movwf	(24)	;volatile
  4101                           	line	9
  4102                           	
  4103  013F                     l2237:	
  4104                           ;UART.h: 9: BRGH=1;
  4105  013F  1683               	bsf	status, 5	;RP0=1, select bank1
  4106  0140  1303               	bcf	status, 6	;RP1=0, select bank1
  4107  0141  1518               	bsf	(1218/8)^080h,(1218)&7
  4108                           	line	10
  4109                           ;UART.h: 10: SPBRG=129;
  4110  0142  3081               	movlw	(081h)
  4111  0143  0099               	movwf	(153)^080h	;volatile
  4112                           	line	11
  4113                           	
  4114  0144                     l707:	
  4115  0144  0008               	return
  4116                           	opt stack 0
  4117                           GLOBAL	__end_of_uart_init
  4118  0145                     	__end_of_uart_init:
  4119 ;; =============== function _uart_init ends ============
  4120                           
  4121                           	signat	_uart_init,88
  4122                           psect	text467,local,class=CODE,delta=2
  4123                           global __ptext467
  4124  0000                     __ptext467:
  4125                           	global	btemp
  4126  007E                     	btemp set 07Eh
  4127                           
  4128                           	DABS	1,126,2	;btemp
  4129                           	global	wtemp0
  4130  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Jan 16 07:48:12 2021

           uart_string@str 0071                          pc 0002                         _RD 0C60  
                       _WR 0C61                         fsr 0004                        l710 0131  
                      l711 0131                        l712 0135                        l713 0136  
                      l722 01E2                        l707 0144                        l723 01CE  
                      l731 0159                        l724 01F0                        l740 01A8  
                      l725 01F0                        l734 016E                        l743 021F  
                      l751 0245                        l744 01F4                        l728 0187  
                      l760 061D                        l752 025C                        l745 0205  
                      l737 019B                        l753 0273                        l746 0219  
                      l738 018A                        l770 0623                        l754 0273  
                      l747 022E                        l739 01A8                        l763 051B  
                      l771 0629                        l748 022E                        l764 051B  
                      l772 06A1                        l781 03C5                        l765 0521  
                      l757 059F                        l790 07FF                        l766 0599  
                      l758 059F                        l775 036D                        l759 05A5  
                      l784 0750                        l769 0623                        l793 04D5  
                      l778 0315                        l794 0512                        l787 01C9  
                      l795 0513                        l796 0513                        _GIE 005F  
                      _RC0 0038                        _RC1 0039                        _RC2 003A  
                      _adc 022F                        fsr0 0004                       ?_adc 0045  
                     l2235 0137                       l2237 013F                       l1632 041A  
                     l1633 03E2                       l3401 041A                       l1554 027D  
                     l1634 03D4                       l1555 0299                       l3403 0423  
                     l1635 03E7                       l1651 048A                       l3411 0448  
                     l1556 02B4                       l1636 03E8                       l1652 0448  
                     l1557 02BD                       l1637 0409                       l3421 0479  
                     l3413 044E                       l1653 043A                       l3405 0424  
                     l3501 05BC                       l1638 0419                       l1654 044D  
                     l1639 0423                       l3423 0482                       l3415 0457  
                     l1655 044E                       l3407 0436                       l3431 01CE  
                     l3503 05F2                       l3511 061E                       l1656 0479  
                     l3361 01F6                       l1657 0489                       l3417 0469  
                     l3409 043A                       l3425 048A                       l3433 01DB  
                     l3441 014B                       l3505 05FF                       l3521 0689  
                     l3513 0629                       l1658 0493                       l3355 012C  
                     l3363 0204                       l3371 0274                       l3427 0493  
                     l3419 0477                       l3435 01E2                       l3443 014C  
                     l3451 015F                       l3507 0605                       l3523 0698  
                     l3515 0640                       l3531 023F                       l3365 0205  
                     l3357 01F1                       l3381 02B4                       l3373 027D  
                     l3429 01CB                       l3445 014D                       l3437 0146  
                     l3453 0160                       l3461 02BE                       l3509 0614  
                     l3517 0676                       l3541 025C                       l3533 0245  
                     l3525 022F                       l3367 020B                       l3359 01F4  
                     l3383 02BD                       l3375 0281                       l3391 03E2  
                     l3447 0156                       l3439 014A                       l3455 0161  
                     l3463 06A2                       l3471 018A                       l3519 0683  
                     l3543 0265                       l3535 024E                       l3527 0237  
                     l3551 0497                       l3369 0219                       l3377 0299  
                     l3393 03E8                       l3385 03C6                       l3457 0162  
                     l3449 015B                       l3465 0751                       l3473 0196  
                     l3481 01A9                       l3545 0267                       l3537 0250  
                     l3529 0239                       l3561 049D                       l3553 0498  
                     l3379 02A2                       l3395 03FA                       l3387 03D0  
                     l3459 016B                       l3467 016F                       l3475 019B  
                     l3491 057B                       l3483 0516                       l3547 026D  
                     l3539 0256                       l3571 04AB                       l3563 049E  
                     l3555 0499                       l3397 0409                       l3389 03D4  
                     l3469 0189                       l3477 0316                       l3493 0581  
                     l3485 0521                       l3581 04C8                       l3573 04B0  
                     l3565 049F                       l3557 049A                       l3549 0494  
                     l3399 0412                       l3479 036E                       l3495 0590  
                     l3487 0538                       l3591 04F4                       l3583 04CE  
                     l3575 04B6                       l3567 04A0                       l3559 049B  
                     l3489 056E                       l3497 059A                       l3593 04FD  
                     l3585 04D5                       l3577 04BC                       l3569 04A5  
                     l3499 05A5                       l3595 0508                       l3587 04E0  
                     l3579 04C2                       l3589 04E9                       STR_1 001F  
                     STR_2 0027                       STR_3 0023                       STR_4 0009  
                     STR_5 001B                       STR_6 0014                       _BRGH 04C2  
                     u2401 028A                       u2402 0291                       u2403 0298  
                     u2500 0436                       u2501 0435                       u2350 0135  
                     u2430 02B3                       u2351 0134                       u2431 02B2  
                     u2415 029B                       u2360 0203                       u2440 03D0  
                     u2520 044C                       u2600 05A4                       u2361 0202  
                     u2425 02A3                       u2441 03CF                       u2521 044B  
                     u2601 05A3                       u2370 0218                       u2610 0628  
                     u2371 0217                       u2515 043C                       u2611 0627  
                     u2380 022D                       u2460 03E6                       u2540 0469  
                     u2620 0237                       u2381 022C                       u2365 01FF  
                     u2461 03E5                       u2541 0468                       u2621 0236  
                     u2390 0281                       u2470 03FA                       u2630 024E  
                     u2375 0214                       u2391 0280                       u2471 03F9  
                     u2455 03D6                       u2535 0450                       u2631 024D  
                     u2560 0488                       u2640 0265                       u2385 0229  
                     u2561 0487                       u2545 0465                       u2641 0264  
                     u2490 0418                       u2570 01EF                       u2491 0417  
                     u2475 03F6                       u2555 047A                       u2571 01EE  
                     u2580 01A7                       u2485 040A                       u2581 01A6  
                     u2590 0520                       u2591 051F                       _RCIF 0065  
                     _WREN 0C62                       _TXIF 0064                       adc@i 0045  
                     _main 0494                       _show 0188                       btemp 007E  
                     start 0000                      ??_adc 007E                      ?_main 0070  
                    _EEADR 010D                      ?_show 0070                      _CARRY 0018  
          __end_of___lldiv 0494            __end_of___llmod 0424                      _RCREG 001A  
                    _RCSTA 0018                      _SPBRG 0099                      _PORTB 0006  
                    _TRISB 0086                      _TRISD 0088                      _TXREG 0019  
                    _TXSTA 0098        ___lmul@multiplicand 0074            __end_of_lcd_dat 016F  
          __end_of_lcd_cmd 015A            __end_of_lcd_int 0188                      _delay 01F1  
                    pclath 000A            __end_of_uart_tx 0137                      show@s 0079  
                    status 0003                      wtemp0 007E               __end_of_main 0516  
             __end_of_show 01A9          converter_dispch@b 0037          converter_dispph@b 0037  
        converter_disptu@b 0037                     ??_main 007E                     ??_show 0078  
                   ?_delay 0070          converter_uartch@b 0037                     _ADCON0 001F  
                   _ADCON1 009F          converter_uartph@b 0037           ___llmod@dividend 0031  
                   _ADRESH 001E                     _ADRESL 009E          converter_uarttu@b 0037  
                   _EEDATA 010C                     _EECON1 018C                     _EECON2 018D  
         __end_of_adc_turb 059A                     _TRISA1 0429                     _TRISA2 042A  
                   _TRISA3 042B                     _TRISC0 0438                     _TRISC1 0439  
                   _TRISC2 043A                     _TRISC6 043E                     _TRISC7 043F  
                   ___lmul 0274                     _adc_ph 059A                  ??___lldiv 007D  
                ??___llmod 0035          ?_converter_dispch 0037          ?_converter_dispph 0037  
        ?_converter_disptu 0037                     delay@L 0070                     delay@i 0073  
                   delay@j 0075          ?_converter_uartch 0037          ?_converter_uartph 0037  
        ?_converter_uarttu 0037         ??_converter_dispch 007E         ??_converter_dispph 007E  
       ??_converter_disptu 007E                  ??_lcd_dat 0077                  ??_lcd_cmd 0077  
                ??_lcd_int 0078         ??_converter_uartch 007E         ??_converter_uartph 007E  
       ??_converter_uarttu 007E               ?_uart_string 0070                  ??_uart_tx 0070  
       __size_of_adc_chlor 0084             __pcstackCOMMON 0070              __end_of_delay 022F  
                  ??_delay 0072                 adc_chlor@a 0041                 adc_ph@temp 003D  
               __pmaintext 0494                    ?___lmul 0070                    ?_adc_ph 0070  
           ___lmul@product 0079                  ?_adc_turb 0070          __end_of_adc_chlor 06A2  
       __size_of_uart_init 000E               adc_turb@temp 003D            __size_of___lmul 004A  
          __size_of_adc_ph 0084                    ___lldiv 0424                    ___llmod 03C6  
                  adc_ph@a 0041                    _lcd_dat 015A                    _lcd_cmd 0145  
               ??_adc_turb 003B                    _lcd_int 016F               __size_of_adc 0045  
                  _uart_tx 012B       __size_of_uart_string 0027       end_of_initialization 0127  
        __end_of_uart_init 0145            ___lldiv@divisor 0020            ___lldiv@counter 002C  
__size_of_converter_dispch 0021  __size_of_converter_dispph 0058  __size_of_converter_disptu 0058  
__size_of_converter_uartch 00AF  __size_of_converter_uartph 0058  __size_of_converter_uarttu 00AF  
           __end_of___lmul 02BE             __end_of_adc_ph 061E        start_initialization 0127  
              __end_of_adc 0274            ___llmod@divisor 002D            ___llmod@counter 0036  
            adc_chlor@temp 003D                   ??___lmul 0078                   ??_adc_ph 003B  
        __size_of_adc_turb 0084              __pcstackBANK0 0020                  _adc_chlor 061E  
                adc_turb@a 0041                  __ptext450 01A9                  __ptext451 036E  
                __ptext460 01CA                  __ptext452 0316                  __ptext461 0424  
                __ptext453 0188                  __ptext445 0000                  __ptext462 03C6  
                __ptext454 016F                  __ptext446 022F                  __ptext463 0274  
                __ptext455 0751                  __ptext447 061E                  __ptext464 01F1  
                __ptext456 06A2                  __ptext448 059A                  __ptext465 012B  
                __ptext457 02BE                  __ptext449 0516                  __ptext466 0137  
                __ptext458 015A                  __ptext467 0000                  __ptext459 0145  
                 ?___lldiv 0020                   ?___llmod 002D                  __pstrings 0003  
                 ?_lcd_dat 0070                   ?_lcd_cmd 0070                   ?_lcd_int 0070  
               ?_adc_chlor 0070                   ?_uart_tx 0070             __size_of_delay 003E  
         _converter_dispch 01A9           _converter_dispph 0316           _converter_disptu 036E  
         _converter_uartch 0751           _converter_uartph 02BE           _converter_uarttu 06A2  
                 _GO_nDONE 00FA                  _uart_init 0137                __stringbase 0008  
            ??_uart_string 0071          ___lmul@multiplier 0070                 ?_uart_init 0070  
         __size_of___lldiv 0070           __size_of___llmod 005E                   _adc_turb 0516  
         __size_of_lcd_dat 0015           __size_of_lcd_cmd 0015           __size_of_lcd_int 0019  
              ??_adc_chlor 003B           __size_of_uart_tx 000C        __end_of_uart_string 01F1  
            __size_of_main 0082              __size_of_show 0021                  uart_tx@ch 0070  
                 lcd_dat@b 0077                   lcd_cmd@a 0077           ___lldiv@dividend 0024  
                stringcode 0003                ??_uart_init 0070   __end_of_converter_dispch 01CA  
 __end_of_converter_dispph 036E   __end_of_converter_disptu 03C6   __end_of_converter_uartch 0800  
 __end_of_converter_uartph 0316   __end_of_converter_uarttu 0751           ___lldiv@quotient 0028  
                 stringdir 0003                   stringtab 0003                _uart_string 01CA  
             uart_string@k 0072  
