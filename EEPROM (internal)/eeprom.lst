

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Mon Dec 30 15:46:06 2019

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_lcd_init
    43                           	FNCALL	_main,_lcd_string
    44                           	FNCALL	_main,_lcd_cmd
    45                           	FNCALL	_main,_EEwrite
    46                           	FNCALL	_main,_msdelay
    47                           	FNCALL	_main,_EEread
    48                           	FNCALL	_main,_lcd_data
    49                           	FNCALL	_lcd_string,_lcd_data
    50                           	FNCALL	_lcd_init,_lcd_cmd
    51                           	FNCALL	_lcd_init,_msdelay
    52                           	FNCALL	_lcd_data,_msdelay
    53                           	FNCALL	_lcd_cmd,_msdelay
    54                           	FNROOT	_main
    55                           	global	_PORTB
    56                           psect	text130,local,class=CODE,delta=2
    57                           global __ptext130
    58  0000                     __ptext130:
    59  0006                     _PORTB	set	6
    60                           	global	_PORTC
    61  0007                     _PORTC	set	7
    62                           	global	_CARRY
    63  0018                     _CARRY	set	24
    64                           	global	_EEIF
    65  006C                     _EEIF	set	108
    66                           	global	_GIE
    67  005F                     _GIE	set	95
    68                           	global	_RB0
    69  0030                     _RB0	set	48
    70                           	global	_RB1
    71  0031                     _RB1	set	49
    72                           	global	_RB2
    73  0032                     _RB2	set	50
    74                           	global	_RD0
    75  0040                     _RD0	set	64
    76                           	global	_RD5
    77  0045                     _RD5	set	69
    78                           	global	_TRISB
    79  0086                     _TRISB	set	134
    80                           	global	_TRISC
    81  0087                     _TRISC	set	135
    82                           	global	_EEADR
    83  010D                     _EEADR	set	269
    84                           	global	_EEDATA
    85  010C                     _EEDATA	set	268
    86                           	global	_EECON1
    87  018C                     _EECON1	set	396
    88                           	global	_EECON2
    89  018D                     _EECON2	set	397
    90                           	global	_EEPGD
    91  0C67                     _EEPGD	set	3175
    92                           	global	_RD
    93  0C60                     _RD	set	3168
    94                           	global	_WR
    95  0C61                     _WR	set	3169
    96                           	global	_WREN
    97  0C62                     _WREN	set	3170
    98                           psect	strings,class=STRING,delta=2
    99                           global __pstrings
   100  0003                     __pstrings:
   101                           ;	global	stringdir,stringtab,__stringbase
   102  0003                     stringtab:
   103                           ;	String table - string pointers are 1 byte each
   104  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   105  0003  3000               movlw high(stringdir)
   106  0004  008A               movwf pclath
   107  0005  0804               movf fsr,w
   108  0006  0A84               incf fsr
   109  0007  0782               	addwf pc
   110  0008                     __stringbase:
   111  0008  3400               	retlw	0
   112                           psect	strings
   113                           	
   114  0009                     STR_1:	
   115  0009  3444               	retlw	68	;'D'
   116  000A  3461               	retlw	97	;'a'
   117  000B  3474               	retlw	116	;'t'
   118  000C  3461               	retlw	97	;'a'
   119  000D  343A               	retlw	58	;':'
   120  000E  3420               	retlw	32	;' '
   121  000F  3400               	retlw	0
   122                           psect	strings
   123                           	file	"eeprom.as"
   124                           	line	#
   125                           psect cinit,class=CODE,delta=2
   126                           global start_initialization
   127  06AA                     start_initialization:
   128                           
   129                           psect cinit,class=CODE,delta=2
   130                           global end_of_initialization
   131                           
   132                           ;End of C runtime variable initialization code
   133                           
   134  06AA                     end_of_initialization:
   135  06AA  0183               clrf status
   136  06AB  120A  118A  2F9E   ljmp _main	;jump to C main() function
   137                           psect	cstackCOMMON,class=COMMON,space=1
   138                           global __pcstackCOMMON
   139  0070                     __pcstackCOMMON:
   140                           	global	?_EEwrite
   141  0070                     ?_EEwrite:	; 0 bytes @ 0x0
   142                           	global	??_EEread
   143  0070                     ??_EEread:	; 0 bytes @ 0x0
   144                           	global	?_msdelay
   145  0070                     ?_msdelay:	; 0 bytes @ 0x0
   146                           	global	?_lcd_cmd
   147  0070                     ?_lcd_cmd:	; 0 bytes @ 0x0
   148                           	global	?_lcd_data
   149  0070                     ?_lcd_data:	; 0 bytes @ 0x0
   150                           	global	?_lcd_init
   151  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   152                           	global	?_lcd_string
   153  0070                     ?_lcd_string:	; 0 bytes @ 0x0
   154                           	global	?_main
   155  0070                     ?_main:	; 0 bytes @ 0x0
   156                           	global	?_EEread
   157  0070                     ?_EEread:	; 1 bytes @ 0x0
   158                           	global	EEwrite@address
   159  0070                     EEwrite@address:	; 1 bytes @ 0x0
   160                           	global	msdelay@time
   161  0070                     msdelay@time:	; 2 bytes @ 0x0
   162  0070                     	ds	1
   163                           	global	??_EEwrite
   164  0071                     ??_EEwrite:	; 0 bytes @ 0x1
   165                           	global	EEread@address
   166  0071                     EEread@address:	; 1 bytes @ 0x1
   167                           	global	EEwrite@data
   168  0071                     EEwrite@data:	; 1 bytes @ 0x1
   169  0071                     	ds	1
   170                           	global	??_msdelay
   171  0072                     ??_msdelay:	; 0 bytes @ 0x2
   172                           	global	EEread@byte
   173  0072                     EEread@byte:	; 1 bytes @ 0x2
   174                           	global	msdelay@i
   175  0072                     msdelay@i:	; 2 bytes @ 0x2
   176  0072                     	ds	2
   177                           	global	msdelay@j
   178  0074                     msdelay@j:	; 2 bytes @ 0x4
   179  0074                     	ds	2
   180                           	global	??_lcd_cmd
   181  0076                     ??_lcd_cmd:	; 0 bytes @ 0x6
   182                           	global	??_lcd_data
   183  0076                     ??_lcd_data:	; 0 bytes @ 0x6
   184                           	global	lcd_cmd@command
   185  0076                     lcd_cmd@command:	; 1 bytes @ 0x6
   186                           	global	lcd_data@disp_data
   187  0076                     lcd_data@disp_data:	; 1 bytes @ 0x6
   188  0076                     	ds	1
   189                           	global	??_lcd_init
   190  0077                     ??_lcd_init:	; 0 bytes @ 0x7
   191                           	global	??_lcd_string
   192  0077                     ??_lcd_string:	; 0 bytes @ 0x7
   193                           	global	lcd_string@k
   194  0077                     lcd_string@k:	; 2 bytes @ 0x7
   195  0077                     	ds	2
   196                           	global	lcd_string@str
   197  0079                     lcd_string@str:	; 1 bytes @ 0x9
   198  0079                     	ds	1
   199                           	global	??_main
   200  007A                     ??_main:	; 0 bytes @ 0xA
   201  007A                     	ds	1
   202                           	global	main@a
   203  007B                     main@a:	; 1 bytes @ 0xB
   204  007B                     	ds	1
   205 ;;Data sizes: Strings 7, constant 0, data 0, bss 0, persistent 0 stack 0
   206 ;;Auto spaces:   Size  Autos    Used
   207 ;; COMMON          14     12      12
   208 ;; BANK0           80      0       0
   209 ;; BANK1           80      0       0
   210 ;; BANK3           96      0       0
   211 ;; BANK2           96      0       0
   212                           
   213 ;;
   214 ;; Pointer list with targets:
   215                           
   216 ;; lcd_string@str	PTR unsigned char  size(1) Largest target is 7
   217 ;;		 -> STR_1(CODE[7]), 
   218 ;;
   219                           
   220                           
   221 ;;
   222 ;; Critical Paths under _main in COMMON
   223 ;;
   224 ;;   _main->_lcd_string
   225 ;;   _lcd_string->_lcd_data
   226 ;;   _lcd_init->_lcd_cmd
   227 ;;   _lcd_data->_msdelay
   228 ;;   _lcd_cmd->_msdelay
   229 ;;
   230 ;; Critical Paths under _main in BANK0
   231 ;;
   232 ;;   None.
   233 ;;
   234 ;; Critical Paths under _main in BANK1
   235 ;;
   236 ;;   None.
   237 ;;
   238 ;; Critical Paths under _main in BANK3
   239 ;;
   240 ;;   None.
   241 ;;
   242 ;; Critical Paths under _main in BANK2
   243 ;;
   244 ;;   None.
   245                           
   246 ;;
   247 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   248 ;;
   249                           
   250 ;;
   251 ;;Call Graph Tables:
   252 ;;
   253 ;; ---------------------------------------------------------------------------------
   254 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   255 ;; ---------------------------------------------------------------------------------
   256 ;; (0) _main                                                 2     2      0     555
   257 ;;                                             10 COMMON     2     2      0
   258 ;;                           _lcd_init
   259 ;;                         _lcd_string
   260 ;;                            _lcd_cmd
   261 ;;                            _EEwrite
   262 ;;                            _msdelay
   263 ;;                             _EEread
   264 ;;                           _lcd_data
   265 ;; ---------------------------------------------------------------------------------
   266 ;; (1) _lcd_string                                           3     3      0     135
   267 ;;                                              7 COMMON     3     3      0
   268 ;;                           _lcd_data
   269 ;; ---------------------------------------------------------------------------------
   270 ;; (1) _lcd_init                                             0     0      0     135
   271 ;;                            _lcd_cmd
   272 ;;                            _msdelay
   273 ;; ---------------------------------------------------------------------------------
   274 ;; (1) _lcd_data                                             1     1      0      75
   275 ;;                                              6 COMMON     1     1      0
   276 ;;                            _msdelay
   277 ;; ---------------------------------------------------------------------------------
   278 ;; (1) _lcd_cmd                                              1     1      0      75
   279 ;;                                              6 COMMON     1     1      0
   280 ;;                            _msdelay
   281 ;; ---------------------------------------------------------------------------------
   282 ;; (1) _EEread                                               3     3      0      30
   283 ;;                                              0 COMMON     3     3      0
   284 ;; ---------------------------------------------------------------------------------
   285 ;; (1) _EEwrite                                              2     1      1      30
   286 ;;                                              0 COMMON     2     1      1
   287 ;; ---------------------------------------------------------------------------------
   288 ;; (2) _msdelay                                              6     4      2      60
   289 ;;                                              0 COMMON     6     4      2
   290 ;; ---------------------------------------------------------------------------------
   291 ;; Estimated maximum stack depth 2
   292 ;; ---------------------------------------------------------------------------------
   293                           
   294 ;; Call Graph Graphs:
   295                           
   296 ;; _main (ROOT)
   297 ;;   _lcd_init
   298 ;;     _lcd_cmd
   299 ;;       _msdelay
   300 ;;     _msdelay
   301 ;;   _lcd_string
   302 ;;     _lcd_data
   303 ;;       _msdelay
   304 ;;   _lcd_cmd
   305 ;;     _msdelay
   306 ;;   _EEwrite
   307 ;;   _msdelay
   308 ;;   _EEread
   309 ;;   _lcd_data
   310 ;;     _msdelay
   311 ;;
   312                           
   313 ;; Address spaces:
   314                           
   315 ;;Name               Size   Autos  Total    Cost      Usage
   316 ;;BITCOMMON            E      0       0       0        0.0%
   317 ;;EEDATA             100      0       0       0        0.0%
   318 ;;NULL                 0      0       0       0        0.0%
   319 ;;CODE                 0      0       0       0        0.0%
   320 ;;COMMON               E      C       C       1       85.7%
   321 ;;BITSFR0              0      0       0       1        0.0%
   322 ;;SFR0                 0      0       0       1        0.0%
   323 ;;BITSFR1              0      0       0       2        0.0%
   324 ;;SFR1                 0      0       0       2        0.0%
   325 ;;STACK                0      0       3       2        0.0%
   326 ;;ABS                  0      0       0       3        0.0%
   327 ;;BITBANK0            50      0       0       4        0.0%
   328 ;;BITSFR3              0      0       0       4        0.0%
   329 ;;SFR3                 0      0       0       4        0.0%
   330 ;;BANK0               50      0       0       5        0.0%
   331 ;;BITSFR2              0      0       0       5        0.0%
   332 ;;SFR2                 0      0       0       5        0.0%
   333 ;;BITBANK1            50      0       0       6        0.0%
   334 ;;BANK1               50      0       0       7        0.0%
   335 ;;BITBANK3            60      0       0       8        0.0%
   336 ;;BANK3               60      0       0       9        0.0%
   337 ;;BITBANK2            60      0       0      10        0.0%
   338 ;;BANK2               60      0       0      11        0.0%
   339 ;;DATA                 0      0       0      12        0.0%
   340                           
   341                           	global	_main
   342                           psect	maintext,global,class=CODE,delta=2
   343                           global __pmaintext
   344  079E                     __pmaintext:
   345                           
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 55 in file "C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;  a               1   11[COMMON] unsigned char 
   353 ;; Return value:  Size  Location     Type
   354 ;;		None               void
   355 ;; Registers used:
   356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 17F/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         1       0       0       0       0
   364 ;;      Temps:          1       0       0       0       0
   365 ;;      Totals:         2       0       0       0       0
   366 ;;Total ram usage:        2 bytes
   367 ;; Hardware stack levels required when called:    3
   368 ;; This function calls:
   369 ;;		_lcd_init
   370 ;;		_lcd_string
   371 ;;		_lcd_cmd
   372 ;;		_EEwrite
   373 ;;		_msdelay
   374 ;;		_EEread
   375 ;;		_lcd_data
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           psect	maintext
   381                           	file	"C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   382                           	line	55
   383                           	global	__size_of_main
   384  0062                     	__size_of_main	equ	__end_of_main-_main
   385                           	
   386  079E                     _main:	
   387                           	opt	stack 5
   388                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   389                           	line	57
   390                           	
   391  079E                     l2693:	
   392                           ;eeprom.c: 56: unsigned char a;
   393                           ;eeprom.c: 57: TRISC=0X00;
   394  079E  1683               	bsf	status, 5	;RP0=1, select bank1
   395  079F  1303               	bcf	status, 6	;RP1=0, select bank1
   396  07A0  0187               	clrf	(135)^080h	;volatile
   397                           	line	58
   398                           	
   399  07A1                     l2695:	
   400                           ;eeprom.c: 58: PORTC=0XFF;
   401  07A1  30FF               	movlw	(0FFh)
   402  07A2  1283               	bcf	status, 5	;RP0=0, select bank0
   403  07A3  1303               	bcf	status, 6	;RP1=0, select bank0
   404  07A4  0087               	movwf	(7)	;volatile
   405                           	line	59
   406                           	
   407  07A5                     l2697:	
   408                           ;eeprom.c: 59: TRISB=0X00;
   409  07A5  1683               	bsf	status, 5	;RP0=1, select bank1
   410  07A6  1303               	bcf	status, 6	;RP1=0, select bank1
   411  07A7  0186               	clrf	(134)^080h	;volatile
   412                           	line	60
   413                           ;eeprom.c: 60: PORTB=0XFF;
   414  07A8  30FF               	movlw	(0FFh)
   415  07A9  1283               	bcf	status, 5	;RP0=0, select bank0
   416  07AA  1303               	bcf	status, 6	;RP1=0, select bank0
   417  07AB  0086               	movwf	(6)	;volatile
   418                           	line	61
   419                           	
   420  07AC                     l2699:	
   421                           ;eeprom.c: 61: EEDATA=0X00;
   422  07AC  1283               	bcf	status, 5	;RP0=0, select bank2
   423  07AD  1703               	bsf	status, 6	;RP1=1, select bank2
   424  07AE  018C               	clrf	(268)^0100h	;volatile
   425                           	line	62
   426                           	
   427  07AF                     l2701:	
   428                           ;eeprom.c: 62: EEADR=0X00;
   429  07AF  018D               	clrf	(269)^0100h	;volatile
   430                           	line	63
   431                           	
   432  07B0                     l2703:	
   433                           ;eeprom.c: 63: lcd_init();
   434  07B0  120A  118A  2761   	fcall	_lcd_init
              120A  118A         
   435                           	line	64
   436                           	
   437  07B5                     l2705:	
   438                           ;eeprom.c: 64: lcd_string("Data: ");
   439  07B5  3001               	movlw	((STR_1-__stringbase))&0ffh
   440  07B6  120A  118A  2708   	fcall	_lcd_string
              120A  118A         
   441                           	line	65
   442                           	
   443  07BB                     l2707:	
   444                           ;eeprom.c: 65: lcd_cmd(0x88);
   445  07BB  3088               	movlw	(088h)
   446  07BC  120A  118A  26C0   	fcall	_lcd_cmd
              120A  118A         
   447  07C1  2FC2               	goto	l2709
   448                           	line	66
   449                           ;eeprom.c: 66: while(1)
   450                           	
   451  07C2                     l712:	
   452                           	line	68
   453                           	
   454  07C2                     l2709:	
   455                           ;eeprom.c: 67: {
   456                           ;eeprom.c: 68: if(RD0==0)
   457  07C2  1283               	bcf	status, 5	;RP0=0, select bank0
   458  07C3  1303               	bcf	status, 6	;RP1=0, select bank0
   459  07C4  1808               	btfsc	(64/8),(64)&7
   460  07C5  2FC7               	goto	u2271
   461  07C6  2FC8               	goto	u2270
   462  07C7                     u2271:
   463  07C7  2FDC               	goto	l2713
   464  07C8                     u2270:
   465                           	line	70
   466                           	
   467  07C8                     l2711:	
   468                           ;eeprom.c: 69: {
   469                           ;eeprom.c: 70: EEwrite('2',0XA0);
   470  07C8  30A0               	movlw	(0A0h)
   471  07C9  00FA               	movwf	(??_main+0)+0
   472  07CA  087A               	movf	(??_main+0)+0,w
   473  07CB  00F0               	movwf	(?_EEwrite)
   474  07CC  3032               	movlw	(032h)
   475  07CD  120A  118A  26EA   	fcall	_EEwrite
              120A  118A         
   476                           	line	71
   477                           ;eeprom.c: 71: msdelay(50);
   478  07D2  3032               	movlw	low(032h)
   479  07D3  00F0               	movwf	(?_msdelay)
   480  07D4  3000               	movlw	high(032h)
   481  07D5  00F1               	movwf	((?_msdelay))+1
   482  07D6  120A  118A  272F   	fcall	_msdelay
              120A  118A         
   483  07DB  2FDC               	goto	l2713
   484                           	line	72
   485                           	
   486  07DC                     l713:	
   487                           	line	73
   488                           	
   489  07DC                     l2713:	
   490                           ;eeprom.c: 72: }
   491                           ;eeprom.c: 73: if(RD5==0)
   492  07DC  1283               	bcf	status, 5	;RP0=0, select bank0
   493  07DD  1303               	bcf	status, 6	;RP1=0, select bank0
   494  07DE  1A88               	btfsc	(69/8),(69)&7
   495  07DF  2FE1               	goto	u2281
   496  07E0  2FE2               	goto	u2280
   497  07E1                     u2281:
   498  07E1  2FC2               	goto	l2709
   499  07E2                     u2280:
   500                           	line	75
   501                           	
   502  07E2                     l2715:	
   503                           ;eeprom.c: 74: {
   504                           ;eeprom.c: 75: a=EEread(0xA0);
   505  07E2  30A0               	movlw	(0A0h)
   506  07E3  120A  118A  26AE   	fcall	_EEread
              120A  118A         
   507  07E8  00FA               	movwf	(??_main+0)+0
   508  07E9  087A               	movf	(??_main+0)+0,w
   509  07EA  00FB               	movwf	(main@a)
   510                           	line	76
   511                           	
   512  07EB                     l2717:	
   513                           ;eeprom.c: 76: lcd_data(a);
   514  07EB  087B               	movf	(main@a),w
   515  07EC  120A  118A  26D5   	fcall	_lcd_data
              120A  118A         
   516                           	line	77
   517                           	
   518  07F1                     l2719:	
   519                           ;eeprom.c: 77: msdelay(50);
   520  07F1  3032               	movlw	low(032h)
   521  07F2  00F0               	movwf	(?_msdelay)
   522  07F3  3000               	movlw	high(032h)
   523  07F4  00F1               	movwf	((?_msdelay))+1
   524  07F5  120A  118A  272F   	fcall	_msdelay
              120A  118A         
   525  07FA  2FC2               	goto	l2709
   526                           	line	78
   527                           	
   528  07FB                     l714:	
   529  07FB  2FC2               	goto	l2709
   530                           	line	79
   531                           	
   532  07FC                     l715:	
   533                           	line	66
   534  07FC  2FC2               	goto	l2709
   535                           	
   536  07FD                     l716:	
   537                           	line	80
   538                           	
   539  07FD                     l717:	
   540                           	global	start
   541  07FD  120A  118A  2800   	ljmp	start
   542                           	opt stack 0
   543                           GLOBAL	__end_of_main
   544  0800                     	__end_of_main:
   545 ;; =============== function _main ends ============
   546                           
   547                           	signat	_main,88
   548                           	global	_lcd_string
   549                           psect	text131,local,class=CODE,delta=2
   550                           global __ptext131
   551  0708                     __ptext131:
   552                           
   553 ;; *************** function _lcd_string *****************
   554 ;; Defined at:
   555 ;;		line 46 in file "C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  str             1    wreg     PTR unsigned char 
   558 ;;		 -> STR_1(7), 
   559 ;; Auto vars:     Size  Location     Type
   560 ;;  str             1    9[COMMON] PTR unsigned char 
   561 ;;		 -> STR_1(7), 
   562 ;;  k               2    7[COMMON] int 
   563 ;; Return value:  Size  Location     Type
   564 ;;		None               void
   565 ;; Registers used:
   566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   567 ;; Tracked objects:
   568 ;;		On entry : 0/0
   569 ;;		On exit  : 0/0
   570 ;;		Unchanged: 0/0
   571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   572 ;;      Params:         0       0       0       0       0
   573 ;;      Locals:         3       0       0       0       0
   574 ;;      Temps:          0       0       0       0       0
   575 ;;      Totals:         3       0       0       0       0
   576 ;;Total ram usage:        3 bytes
   577 ;; Hardware stack levels used:    1
   578 ;; Hardware stack levels required when called:    2
   579 ;; This function calls:
   580 ;;		_lcd_data
   581 ;; This function is called by:
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           psect	text131
   586                           	file	"C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   587                           	line	46
   588                           	global	__size_of_lcd_string
   589  0027                     	__size_of_lcd_string	equ	__end_of_lcd_string-_lcd_string
   590                           	
   591  0708                     _lcd_string:	
   592                           	opt	stack 5
   593                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   594                           ;lcd_string@str stored from wreg
   595  0708  00F9               	movwf	(lcd_string@str)
   596                           	line	47
   597                           	
   598  0709                     l2685:	
   599                           ;eeprom.c: 47: int k=0;
   600  0709  01F7               	clrf	(lcd_string@k)
   601  070A  01F8               	clrf	(lcd_string@k+1)
   602                           	line	48
   603                           ;eeprom.c: 48: while(str[k]!='\0')
   604  070B  2F20               	goto	l2691
   605                           	
   606  070C                     l707:	
   607                           	line	50
   608                           	
   609  070C                     l2687:	
   610                           ;eeprom.c: 49: {
   611                           ;eeprom.c: 50: lcd_data(str[k]);
   612  070C  0877               	movf	(lcd_string@k),w
   613  070D  0779               	addwf	(lcd_string@str),w
   614  070E  0084               	movwf	fsr0
   615  070F  120A  118A  2003   	fcall	stringdir
              120A  118A         
   616  0714  120A  118A  26D5   	fcall	_lcd_data
              120A  118A         
   617                           	line	51
   618                           	
   619  0719                     l2689:	
   620                           ;eeprom.c: 51: k++;
   621  0719  3001               	movlw	low(01h)
   622  071A  07F7               	addwf	(lcd_string@k),f
   623  071B  1803               	skipnc
   624  071C  0AF8               	incf	(lcd_string@k+1),f
   625  071D  3000               	movlw	high(01h)
   626  071E  07F8               	addwf	(lcd_string@k+1),f
   627  071F  2F20               	goto	l2691
   628                           	line	52
   629                           	
   630  0720                     l706:	
   631                           	line	48
   632                           	
   633  0720                     l2691:	
   634  0720  0877               	movf	(lcd_string@k),w
   635  0721  0779               	addwf	(lcd_string@str),w
   636  0722  0084               	movwf	fsr0
   637  0723  120A  118A  2003   	fcall	stringdir
              120A  118A         
   638  0728  3800               	iorlw	0
   639  0729  1D03               	skipz
   640  072A  2F2C               	goto	u2261
   641  072B  2F2D               	goto	u2260
   642  072C                     u2261:
   643  072C  2F0C               	goto	l2687
   644  072D                     u2260:
   645  072D  2F2E               	goto	l709
   646                           	
   647  072E                     l708:	
   648                           	line	53
   649                           	
   650  072E                     l709:	
   651  072E  0008               	return
   652                           	opt stack 0
   653                           GLOBAL	__end_of_lcd_string
   654  072F                     	__end_of_lcd_string:
   655 ;; =============== function _lcd_string ends ============
   656                           
   657                           	signat	_lcd_string,4216
   658                           	global	_lcd_init
   659                           psect	text132,local,class=CODE,delta=2
   660                           global __ptext132
   661  0761                     __ptext132:
   662                           
   663 ;; *************** function _lcd_init *****************
   664 ;; Defined at:
   665 ;;		line 35 in file "C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;		None
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;		None               void
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0, pclath, cstack
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   679 ;;      Params:         0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0
   681 ;;      Temps:          0       0       0       0       0
   682 ;;      Totals:         0       0       0       0       0
   683 ;;Total ram usage:        0 bytes
   684 ;; Hardware stack levels used:    1
   685 ;; Hardware stack levels required when called:    2
   686 ;; This function calls:
   687 ;;		_lcd_cmd
   688 ;;		_msdelay
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           psect	text132
   694                           	file	"C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   695                           	line	35
   696                           	global	__size_of_lcd_init
   697  003D                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
   698                           	
   699  0761                     _lcd_init:	
   700                           	opt	stack 5
   701                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   702                           	line	36
   703                           	
   704  0761                     l2683:	
   705                           ;eeprom.c: 36: lcd_cmd(0x38);
   706  0761  3038               	movlw	(038h)
   707  0762  120A  118A  26C0   	fcall	_lcd_cmd
              120A  118A         
   708                           	line	37
   709                           ;eeprom.c: 37: msdelay(10);
   710  0767  300A               	movlw	low(0Ah)
   711  0768  00F0               	movwf	(?_msdelay)
   712  0769  3000               	movlw	high(0Ah)
   713  076A  00F1               	movwf	((?_msdelay))+1
   714  076B  120A  118A  272F   	fcall	_msdelay
              120A  118A         
   715                           	line	38
   716                           ;eeprom.c: 38: lcd_cmd(0x0F);
   717  0770  300F               	movlw	(0Fh)
   718  0771  120A  118A  26C0   	fcall	_lcd_cmd
              120A  118A         
   719                           	line	39
   720                           ;eeprom.c: 39: msdelay(10);
   721  0776  300A               	movlw	low(0Ah)
   722  0777  00F0               	movwf	(?_msdelay)
   723  0778  3000               	movlw	high(0Ah)
   724  0779  00F1               	movwf	((?_msdelay))+1
   725  077A  120A  118A  272F   	fcall	_msdelay
              120A  118A         
   726                           	line	40
   727                           ;eeprom.c: 40: lcd_cmd(0x01);
   728  077F  3001               	movlw	(01h)
   729  0780  120A  118A  26C0   	fcall	_lcd_cmd
              120A  118A         
   730                           	line	41
   731                           ;eeprom.c: 41: msdelay(10);
   732  0785  300A               	movlw	low(0Ah)
   733  0786  00F0               	movwf	(?_msdelay)
   734  0787  3000               	movlw	high(0Ah)
   735  0788  00F1               	movwf	((?_msdelay))+1
   736  0789  120A  118A  272F   	fcall	_msdelay
              120A  118A         
   737                           	line	42
   738                           ;eeprom.c: 42: lcd_cmd(0x80);
   739  078E  3080               	movlw	(080h)
   740  078F  120A  118A  26C0   	fcall	_lcd_cmd
              120A  118A         
   741                           	line	43
   742                           ;eeprom.c: 43: msdelay(10);
   743  0794  300A               	movlw	low(0Ah)
   744  0795  00F0               	movwf	(?_msdelay)
   745  0796  3000               	movlw	high(0Ah)
   746  0797  00F1               	movwf	((?_msdelay))+1
   747  0798  120A  118A  272F   	fcall	_msdelay
              120A  118A         
   748                           	line	44
   749                           	
   750  079D                     l703:	
   751  079D  0008               	return
   752                           	opt stack 0
   753                           GLOBAL	__end_of_lcd_init
   754  079E                     	__end_of_lcd_init:
   755 ;; =============== function _lcd_init ends ============
   756                           
   757                           	signat	_lcd_init,88
   758                           	global	_lcd_data
   759                           psect	text133,local,class=CODE,delta=2
   760                           global __ptext133
   761  06D5                     __ptext133:
   762                           
   763 ;; *************** function _lcd_data *****************
   764 ;; Defined at:
   765 ;;		line 25 in file "C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  disp_data       1    wreg     unsigned char 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  disp_data       1    6[COMMON] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;		None               void
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         0       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0
   781 ;;      Temps:          0       0       0       0       0
   782 ;;      Totals:         1       0       0       0       0
   783 ;;Total ram usage:        1 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		_msdelay
   788 ;; This function is called by:
   789 ;;		_lcd_string
   790 ;;		_main
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           psect	text133
   794                           	file	"C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   795                           	line	25
   796                           	global	__size_of_lcd_data
   797  0015                     	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_data
   798                           	
   799  06D5                     _lcd_data:	
   800                           	opt	stack 6
   801                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
   802                           ;lcd_data@disp_data stored from wreg
   803  06D5  00F6               	movwf	(lcd_data@disp_data)
   804                           	line	26
   805                           	
   806  06D6                     l2671:	
   807                           ;eeprom.c: 26: PORTC = disp_data;
   808  06D6  0876               	movf	(lcd_data@disp_data),w
   809  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
   810  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
   811  06D9  0087               	movwf	(7)	;volatile
   812                           	line	27
   813                           	
   814  06DA                     l2673:	
   815                           ;eeprom.c: 27: RB0=1;
   816  06DA  1406               	bsf	(48/8),(48)&7
   817                           	line	28
   818                           	
   819  06DB                     l2675:	
   820                           ;eeprom.c: 28: RB1=0;
   821  06DB  1086               	bcf	(49/8),(49)&7
   822                           	line	29
   823                           	
   824  06DC                     l2677:	
   825                           ;eeprom.c: 29: RB2=1;
   826  06DC  1506               	bsf	(50/8),(50)&7
   827                           	line	30
   828                           	
   829  06DD                     l2679:	
   830                           ;eeprom.c: 30: msdelay(1);
   831  06DD  3001               	movlw	low(01h)
   832  06DE  00F0               	movwf	(?_msdelay)
   833  06DF  3000               	movlw	high(01h)
   834  06E0  00F1               	movwf	((?_msdelay))+1
   835  06E1  120A  118A  272F   	fcall	_msdelay
              120A  118A         
   836                           	line	31
   837                           	
   838  06E6                     l2681:	
   839                           ;eeprom.c: 31: RB2=0;
   840  06E6  1283               	bcf	status, 5	;RP0=0, select bank0
   841  06E7  1303               	bcf	status, 6	;RP1=0, select bank0
   842  06E8  1106               	bcf	(50/8),(50)&7
   843                           	line	32
   844                           	
   845  06E9                     l700:	
   846  06E9  0008               	return
   847                           	opt stack 0
   848                           GLOBAL	__end_of_lcd_data
   849  06EA                     	__end_of_lcd_data:
   850 ;; =============== function _lcd_data ends ============
   851                           
   852                           	signat	_lcd_data,4216
   853                           	global	_lcd_cmd
   854                           psect	text134,local,class=CODE,delta=2
   855                           global __ptext134
   856  06C0                     __ptext134:
   857                           
   858 ;; *************** function _lcd_cmd *****************
   859 ;; Defined at:
   860 ;;		line 15 in file "C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  command         1    wreg     unsigned char 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  command         1    6[COMMON] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;		None               void
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         1       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0
   877 ;;      Totals:         1       0       0       0       0
   878 ;;Total ram usage:        1 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    1
   881 ;; This function calls:
   882 ;;		_msdelay
   883 ;; This function is called by:
   884 ;;		_lcd_init
   885 ;;		_main
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           psect	text134
   889                           	file	"C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   890                           	line	15
   891                           	global	__size_of_lcd_cmd
   892  0015                     	__size_of_lcd_cmd	equ	__end_of_lcd_cmd-_lcd_cmd
   893                           	
   894  06C0                     _lcd_cmd:	
   895                           	opt	stack 6
   896                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
   897                           ;lcd_cmd@command stored from wreg
   898  06C0  00F6               	movwf	(lcd_cmd@command)
   899                           	line	16
   900                           	
   901  06C1                     l2659:	
   902                           ;eeprom.c: 16: PORTC = command;
   903  06C1  0876               	movf	(lcd_cmd@command),w
   904  06C2  1283               	bcf	status, 5	;RP0=0, select bank0
   905  06C3  1303               	bcf	status, 6	;RP1=0, select bank0
   906  06C4  0087               	movwf	(7)	;volatile
   907                           	line	17
   908                           	
   909  06C5                     l2661:	
   910                           ;eeprom.c: 17: RB0=0;
   911  06C5  1006               	bcf	(48/8),(48)&7
   912                           	line	18
   913                           	
   914  06C6                     l2663:	
   915                           ;eeprom.c: 18: RB1=0;
   916  06C6  1086               	bcf	(49/8),(49)&7
   917                           	line	19
   918                           	
   919  06C7                     l2665:	
   920                           ;eeprom.c: 19: RB2=1;
   921  06C7  1506               	bsf	(50/8),(50)&7
   922                           	line	20
   923                           	
   924  06C8                     l2667:	
   925                           ;eeprom.c: 20: msdelay(1);
   926  06C8  3001               	movlw	low(01h)
   927  06C9  00F0               	movwf	(?_msdelay)
   928  06CA  3000               	movlw	high(01h)
   929  06CB  00F1               	movwf	((?_msdelay))+1
   930  06CC  120A  118A  272F   	fcall	_msdelay
              120A  118A         
   931                           	line	21
   932                           	
   933  06D1                     l2669:	
   934                           ;eeprom.c: 21: RB2=0;
   935  06D1  1283               	bcf	status, 5	;RP0=0, select bank0
   936  06D2  1303               	bcf	status, 6	;RP1=0, select bank0
   937  06D3  1106               	bcf	(50/8),(50)&7
   938                           	line	22
   939                           	
   940  06D4                     l697:	
   941  06D4  0008               	return
   942                           	opt stack 0
   943                           GLOBAL	__end_of_lcd_cmd
   944  06D5                     	__end_of_lcd_cmd:
   945 ;; =============== function _lcd_cmd ends ============
   946                           
   947                           	signat	_lcd_cmd,4216
   948                           	global	_EEread
   949                           psect	text135,local,class=CODE,delta=2
   950                           global __ptext135
   951  06AE                     __ptext135:
   952                           
   953 ;; *************** function _EEread *****************
   954 ;; Defined at:
   955 ;;		line 82 in file "C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  address         1    wreg     unsigned char 
   958 ;; Auto vars:     Size  Location     Type
   959 ;;  address         1    1[COMMON] unsigned char 
   960 ;;  byte            1    2[COMMON] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      unsigned char 
   963 ;; Registers used:
   964 ;;		wreg
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   970 ;;      Params:         0       0       0       0       0
   971 ;;      Locals:         2       0       0       0       0
   972 ;;      Temps:          1       0       0       0       0
   973 ;;      Totals:         3       0       0       0       0
   974 ;;Total ram usage:        3 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           psect	text135
   983                           	file	"C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
   984                           	line	82
   985                           	global	__size_of_EEread
   986  0012                     	__size_of_EEread	equ	__end_of_EEread-_EEread
   987                           	
   988  06AE                     _EEread:	
   989                           	opt	stack 7
   990                           ; Regs used in _EEread: [wreg]
   991                           ;EEread@address stored from wreg
   992                           	line	84
   993  06AE  00F1               	movwf	(EEread@address)
   994                           	
   995  06AF                     l1793:	
   996                           ;eeprom.c: 83: unsigned char byte;
   997                           ;eeprom.c: 84: EEADR=address;
   998  06AF  0871               	movf	(EEread@address),w
   999  06B0  1283               	bcf	status, 5	;RP0=0, select bank2
  1000  06B1  1703               	bsf	status, 6	;RP1=1, select bank2
  1001  06B2  008D               	movwf	(269)^0100h	;volatile
  1002                           	line	85
  1003                           	
  1004  06B3                     l1795:	
  1005                           ;eeprom.c: 85: EEPGD=0;
  1006  06B3  1683               	bsf	status, 5	;RP0=1, select bank3
  1007  06B4  1703               	bsf	status, 6	;RP1=1, select bank3
  1008  06B5  138C               	bcf	(3175/8)^0180h,(3175)&7
  1009                           	line	86
  1010                           	
  1011  06B6                     l1797:	
  1012                           ;eeprom.c: 86: RD=1;
  1013  06B6  140C               	bsf	(3168/8)^0180h,(3168)&7
  1014                           	line	87
  1015                           ;eeprom.c: 87: byte=EEDATA;
  1016  06B7  1283               	bcf	status, 5	;RP0=0, select bank2
  1017  06B8  1703               	bsf	status, 6	;RP1=1, select bank2
  1018  06B9  080C               	movf	(268)^0100h,w	;volatile
  1019  06BA  00F0               	movwf	(??_EEread+0)+0
  1020  06BB  0870               	movf	(??_EEread+0)+0,w
  1021  06BC  00F2               	movwf	(EEread@byte)
  1022                           	line	88
  1023                           ;eeprom.c: 88: return byte;
  1024  06BD  0872               	movf	(EEread@byte),w
  1025  06BE  2EBF               	goto	l720
  1026                           	
  1027  06BF                     l1799:	
  1028                           	line	89
  1029                           	
  1030  06BF                     l720:	
  1031  06BF  0008               	return
  1032                           	opt stack 0
  1033                           GLOBAL	__end_of_EEread
  1034  06C0                     	__end_of_EEread:
  1035 ;; =============== function _EEread ends ============
  1036                           
  1037                           	signat	_EEread,4217
  1038                           	global	_EEwrite
  1039                           psect	text136,local,class=CODE,delta=2
  1040                           global __ptext136
  1041  06EA                     __ptext136:
  1042                           
  1043 ;; *************** function _EEwrite *****************
  1044 ;; Defined at:
  1045 ;;		line 91 in file "C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  data            1    wreg     unsigned char 
  1048 ;;  address         1    0[COMMON] unsigned char 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  data            1    1[COMMON] unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;		None               void
  1053 ;; Registers used:
  1054 ;;		wreg
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         1       0       0       0       0
  1061 ;;      Locals:         1       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0
  1063 ;;      Totals:         2       0       0       0       0
  1064 ;;Total ram usage:        2 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           psect	text136
  1073                           	file	"C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
  1074                           	line	91
  1075                           	global	__size_of_EEwrite
  1076  001E                     	__size_of_EEwrite	equ	__end_of_EEwrite-_EEwrite
  1077                           	
  1078  06EA                     _EEwrite:	
  1079                           	opt	stack 7
  1080                           ; Regs used in _EEwrite: [wreg]
  1081                           ;EEwrite@data stored from wreg
  1082  06EA  00F1               	movwf	(EEwrite@data)
  1083                           	line	92
  1084                           	
  1085  06EB                     l1785:	
  1086                           ;eeprom.c: 92: EEADR=address;
  1087  06EB  0870               	movf	(EEwrite@address),w
  1088  06EC  1283               	bcf	status, 5	;RP0=0, select bank2
  1089  06ED  1703               	bsf	status, 6	;RP1=1, select bank2
  1090  06EE  008D               	movwf	(269)^0100h	;volatile
  1091                           	line	93
  1092                           ;eeprom.c: 93: EEDATA=data;
  1093  06EF  0871               	movf	(EEwrite@data),w
  1094  06F0  008C               	movwf	(268)^0100h	;volatile
  1095                           	line	94
  1096                           	
  1097  06F1                     l1787:	
  1098                           ;eeprom.c: 94: EEPGD=0;
  1099  06F1  1683               	bsf	status, 5	;RP0=1, select bank3
  1100  06F2  1703               	bsf	status, 6	;RP1=1, select bank3
  1101  06F3  138C               	bcf	(3175/8)^0180h,(3175)&7
  1102                           	line	95
  1103                           	
  1104  06F4                     l1789:	
  1105                           ;eeprom.c: 95: WREN=1;
  1106  06F4  150C               	bsf	(3170/8)^0180h,(3170)&7
  1107                           	line	96
  1108                           ;eeprom.c: 96: EECON2=0X55;
  1109  06F5  3055               	movlw	(055h)
  1110  06F6  008D               	movwf	(397)^0180h	;volatile
  1111                           	line	97
  1112                           ;eeprom.c: 97: EECON2=0XAA;
  1113  06F7  30AA               	movlw	(0AAh)
  1114  06F8  008D               	movwf	(397)^0180h	;volatile
  1115                           	line	98
  1116                           	
  1117  06F9                     l1791:	
  1118                           ;eeprom.c: 98: WR=1;
  1119  06F9  148C               	bsf	(3169/8)^0180h,(3169)&7
  1120                           	line	99
  1121                           ;eeprom.c: 99: while(EEIF==0);
  1122  06FA  2EFB               	goto	l723
  1123                           	
  1124  06FB                     l724:	
  1125                           	
  1126  06FB                     l723:	
  1127  06FB  1283               	bcf	status, 5	;RP0=0, select bank0
  1128  06FC  1303               	bcf	status, 6	;RP1=0, select bank0
  1129  06FD  1E0D               	btfss	(108/8),(108)&7
  1130  06FE  2F00               	goto	u41
  1131  06FF  2F01               	goto	u40
  1132  0700                     u41:
  1133  0700  2EFB               	goto	l723
  1134  0701                     u40:
  1135                           	
  1136  0701                     l725:	
  1137                           	line	100
  1138                           ;eeprom.c: 100: WREN=0;
  1139  0701  1683               	bsf	status, 5	;RP0=1, select bank3
  1140  0702  1703               	bsf	status, 6	;RP1=1, select bank3
  1141  0703  110C               	bcf	(3170/8)^0180h,(3170)&7
  1142                           	line	101
  1143                           ;eeprom.c: 101: EEIF=0;
  1144  0704  1283               	bcf	status, 5	;RP0=0, select bank0
  1145  0705  1303               	bcf	status, 6	;RP1=0, select bank0
  1146  0706  120D               	bcf	(108/8),(108)&7
  1147                           	line	102
  1148                           	
  1149  0707                     l726:	
  1150  0707  0008               	return
  1151                           	opt stack 0
  1152                           GLOBAL	__end_of_EEwrite
  1153  0708                     	__end_of_EEwrite:
  1154 ;; =============== function _EEwrite ends ============
  1155                           
  1156                           	signat	_EEwrite,8312
  1157                           	global	_msdelay
  1158                           psect	text137,local,class=CODE,delta=2
  1159                           global __ptext137
  1160  072F                     __ptext137:
  1161                           
  1162 ;; *************** function _msdelay *****************
  1163 ;; Defined at:
  1164 ;;		line 9 in file "C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  time            2    0[COMMON] unsigned int 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  j               2    4[COMMON] unsigned int 
  1169 ;;  i               2    2[COMMON] unsigned int 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;		None               void
  1172 ;; Registers used:
  1173 ;;		wreg, status,2
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         2       0       0       0       0
  1180 ;;      Locals:         4       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0
  1182 ;;      Totals:         6       0       0       0       0
  1183 ;;Total ram usage:        6 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_lcd_cmd
  1189 ;;		_lcd_data
  1190 ;;		_lcd_init
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           psect	text137
  1195                           	file	"C:\Users\ELCOT\Desktop\pic16 internal eeprom test\eeprom.c"
  1196                           	line	9
  1197                           	global	__size_of_msdelay
  1198  0032                     	__size_of_msdelay	equ	__end_of_msdelay-_msdelay
  1199                           	
  1200  072F                     _msdelay:	
  1201                           	opt	stack 6
  1202                           ; Regs used in _msdelay: [wreg+status,2]
  1203                           	line	11
  1204                           	
  1205  072F                     l1773:	
  1206                           ;eeprom.c: 10: unsigned i,j ;
  1207                           ;eeprom.c: 11: for(i=0;i<time;i++)
  1208  072F  01F2               	clrf	(msdelay@i)
  1209  0730  01F3               	clrf	(msdelay@i+1)
  1210  0731  2F55               	goto	l689
  1211                           	line	12
  1212                           	
  1213  0732                     l690:	
  1214                           	
  1215  0732                     l1775:	
  1216                           ;eeprom.c: 12: for(j=0;j<1275;j++);
  1217  0732  01F4               	clrf	(msdelay@j)
  1218  0733  01F5               	clrf	(msdelay@j+1)
  1219                           	
  1220  0734                     l1777:	
  1221  0734  3004               	movlw	high(04FBh)
  1222  0735  0275               	subwf	(msdelay@j+1),w
  1223  0736  30FB               	movlw	low(04FBh)
  1224  0737  1903               	skipnz
  1225  0738  0274               	subwf	(msdelay@j),w
  1226  0739  1C03               	skipc
  1227  073A  2F3C               	goto	u11
  1228  073B  2F3D               	goto	u10
  1229  073C                     u11:
  1230  073C  2F3F               	goto	l1781
  1231  073D                     u10:
  1232  073D  2F4F               	goto	l1783
  1233                           	
  1234  073E                     l1779:	
  1235  073E  2F4F               	goto	l1783
  1236                           	
  1237  073F                     l691:	
  1238                           	
  1239  073F                     l1781:	
  1240  073F  3001               	movlw	low(01h)
  1241  0740  07F4               	addwf	(msdelay@j),f
  1242  0741  1803               	skipnc
  1243  0742  0AF5               	incf	(msdelay@j+1),f
  1244  0743  3000               	movlw	high(01h)
  1245  0744  07F5               	addwf	(msdelay@j+1),f
  1246  0745  3004               	movlw	high(04FBh)
  1247  0746  0275               	subwf	(msdelay@j+1),w
  1248  0747  30FB               	movlw	low(04FBh)
  1249  0748  1903               	skipnz
  1250  0749  0274               	subwf	(msdelay@j),w
  1251  074A  1C03               	skipc
  1252  074B  2F4D               	goto	u21
  1253  074C  2F4E               	goto	u20
  1254  074D                     u21:
  1255  074D  2F3F               	goto	l1781
  1256  074E                     u20:
  1257  074E  2F4F               	goto	l1783
  1258                           	
  1259  074F                     l692:	
  1260                           	line	11
  1261                           	
  1262  074F                     l1783:	
  1263  074F  3001               	movlw	low(01h)
  1264  0750  07F2               	addwf	(msdelay@i),f
  1265  0751  1803               	skipnc
  1266  0752  0AF3               	incf	(msdelay@i+1),f
  1267  0753  3000               	movlw	high(01h)
  1268  0754  07F3               	addwf	(msdelay@i+1),f
  1269                           	
  1270  0755                     l689:	
  1271  0755  0871               	movf	(msdelay@time+1),w
  1272  0756  0273               	subwf	(msdelay@i+1),w
  1273  0757  1D03               	skipz
  1274  0758  2F5B               	goto	u35
  1275  0759  0870               	movf	(msdelay@time),w
  1276  075A  0272               	subwf	(msdelay@i),w
  1277  075B                     u35:
  1278  075B  1C03               	skipc
  1279  075C  2F5E               	goto	u31
  1280  075D  2F5F               	goto	u30
  1281  075E                     u31:
  1282  075E  2F32               	goto	l1775
  1283  075F                     u30:
  1284  075F  2F60               	goto	l694
  1285                           	
  1286  0760                     l693:	
  1287                           	line	13
  1288                           	
  1289  0760                     l694:	
  1290  0760  0008               	return
  1291                           	opt stack 0
  1292                           GLOBAL	__end_of_msdelay
  1293  0761                     	__end_of_msdelay:
  1294 ;; =============== function _msdelay ends ============
  1295                           
  1296                           	signat	_msdelay,4216
  1297                           psect	text138,local,class=CODE,delta=2
  1298                           global __ptext138
  1299  0000                     __ptext138:
  1300                           	global	btemp
  1301  007E                     	btemp set 07Eh
  1302                           
  1303                           	DABS	1,126,2	;btemp
  1304                           	global	wtemp0
  1305  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon Dec 30 15:46:06 2019

                   pc 0002                    _RD 0C60                    u10 073D                    u11 073C  
                  u20 074E                    u21 074D                    u30 075F                    u31 075E  
                  u40 0701                    u41 0700                    u35 075B                    _WR 0C61  
                  fsr 0004        lcd_cmd@command 0076                   l700 06E9                   l703 079D  
                 l720 06BF                   l712 07C2                   l713 07DC                   l706 0720  
                 l714 07FB                   l723 06FB                   l707 070C                   l715 07FC  
                 l724 06FB                   l708 072E                   l716 07FD                   l725 0701  
                 l709 072E                   l717 07FD                   l726 0707                   l690 0732  
                 l691 073F                   l692 074F                   l693 0760                   l694 0760  
                 l689 0755                   l697 06D4                   _GIE 005F                   _RB0 0030  
                 _RB1 0031                   _RB2 0032                   _RD0 0040                   _RD5 0045  
                 fsr0 0004                  l2701 07AF                  l2711 07C8                  l2703 07B0  
                l2713 07DC                  l2705 07B5                  l2715 07E2                  l2707 07BB  
                l1781 073F                  l1773 072F                  l2661 06C5                  l2717 07EB  
                l2709 07C2                  l1783 074F                  l1775 0732                  l1791 06F9  
                l2663 06C6                  l2671 06D6                  l2719 07F1                  l1777 0734  
                l1785 06EB                  l1793 06AF                  l2665 06C7                  l2681 06E6  
                l2673 06DA                  l1779 073E                  l1787 06F1                  l1795 06B3  
                l2667 06C8                  l2659 06C1                  l2675 06DB                  l2683 0761  
                l2691 0720                  l1789 06F4                  l1797 06B6                  l2669 06D1  
                l2677 06DC                  l2685 0709                  l2693 079E                  l1799 06BF  
                l2679 06DD                  l2687 070C                  l2695 07A1                  l2689 0719  
                l2697 07A5                  l2699 07AC                  _EEIF 006C                  STR_1 0009  
                u2260 072D                  u2261 072C                  u2270 07C8                  u2271 07C7  
                u2280 07E2                  u2281 07E1                  _WREN 0C62       __end_of_EEwrite 0708  
                _main 079E                  btemp 007E                  start 0000           lcd_string@k 0077  
               ?_main 0070                 _EEADR 010D                 _CARRY 0018                 _EEPGD 0C67  
               _PORTB 0006                 _PORTC 0007                 _TRISB 0086                 _TRISC 0087  
     __end_of_lcd_cmd 06D5                 main@a 007B       __end_of_msdelay 0761                 pclath 000A  
               status 0003                 wtemp0 007E          __end_of_main 0800                ??_main 007A  
           ??_EEwrite 0071                _EEDATA 010C                _EECON1 018C                _EECON2 018D  
       EEread@address 0071                _EEread 06AE      __end_of_lcd_data 06EA      __end_of_lcd_init 079E  
           ??_lcd_cmd 0076             ??_msdelay 0072         lcd_string@str 0079     lcd_data@disp_data 0076  
      __pcstackCOMMON 0070               ?_EEread 0070            __pmaintext 079E           msdelay@time 0070  
             _EEwrite 06EA             ?_lcd_data 0070            _lcd_string 0708             ?_lcd_init 0070  
     __size_of_EEread 0012               _lcd_cmd 06C0               _msdelay 072F           EEwrite@data 0071  
          ??_lcd_data 0076            ??_lcd_init 0077  end_of_initialization 06AA        EEwrite@address 0070  
         ?_lcd_string 0070        __end_of_EEread 06C0   start_initialization 06AA              ??_EEread 0070  
 __size_of_lcd_string 0027              ?_EEwrite 0070            EEread@byte 0072     __size_of_lcd_data 0015  
   __size_of_lcd_init 003D             __ptext130 0000             __ptext131 0708             __ptext132 0761  
           __ptext133 06D5             __ptext134 06C0             __ptext135 06AE             __ptext136 06EA  
           __ptext137 072F             __ptext138 0000             __pstrings 0003              ?_lcd_cmd 0070  
            ?_msdelay 0070           __stringbase 0008          ??_lcd_string 0077      __size_of_EEwrite 001E  
  __end_of_lcd_string 072F      __size_of_lcd_cmd 0015      __size_of_msdelay 0032              _lcd_data 06D5  
            _lcd_init 0761         __size_of_main 0062              msdelay@i 0072              msdelay@j 0074  
           stringcode 0003              stringdir 0003              stringtab 0003  
