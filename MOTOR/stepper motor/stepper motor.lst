

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Mon Dec 09 17:32:07 2019

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_delay
    43                           	FNROOT	_main
    44                           	global	main@F1095
    45                           psect	idataBANK0,class=CODE,space=0,delta=2
    46                           global __pidataBANK0
    47  073D                     __pidataBANK0:
    48                           	file	"F:\Basic Microcontroller\PIC16F877A\MOTOR\stepper motor\stepper.c"
    49                           	line	7
    50                           
    51                           ;initializer for main@F1095
    52  073D  3401               	retlw	01h
    53  073E  3403               	retlw	03h
    54  073F  3402               	retlw	02h
    55  0740  3406               	retlw	06h
    56  0741  3404               	retlw	04h
    57  0742  340C               	retlw	0Ch
    58  0743  3408               	retlw	08h
    59  0744  3409               	retlw	09h
    60                           	global	_PORTC
    61  0007                     _PORTC	set	7
    62                           	global	_CARRY
    63  0018                     _CARRY	set	24
    64                           	global	_GIE
    65  005F                     _GIE	set	95
    66                           	global	_TRISC
    67  0087                     _TRISC	set	135
    68                           	global	_EEADR
    69  010D                     _EEADR	set	269
    70                           	global	_EEDATA
    71  010C                     _EEDATA	set	268
    72                           	global	_EECON1
    73  018C                     _EECON1	set	396
    74                           	global	_EECON2
    75  018D                     _EECON2	set	397
    76                           	global	_RD
    77  0C60                     _RD	set	3168
    78                           	global	_WR
    79  0C61                     _WR	set	3169
    80                           	global	_WREN
    81  0C62                     _WREN	set	3170
    82                           	file	"stepper motor.as"
    83                           	line	#
    84                           psect cinit,class=CODE,delta=2
    85                           global start_initialization
    86  0745                     start_initialization:
    87                           
    88                           psect	dataBANK0,class=BANK0,space=1
    89                           global __pdataBANK0
    90  002A                     __pdataBANK0:
    91                           	file	"F:\Basic Microcontroller\PIC16F877A\MOTOR\stepper motor\stepper.c"
    92  002A                     main@F1095:
    93  002A                            ds      8
    94                           
    95                           global btemp
    96                           psect inittext,class=CODE,delta=2
    97                           global init_fetch,btemp
    98                           ;	Called with low address in FSR and high address in W
    99  0757                     init_fetch:
   100  0757  087E               	movf btemp,w
   101  0758  008A               	movwf pclath
   102  0759  087F               	movf btemp+1,w
   103  075A  0082               	movwf pc
   104                           global init_ram
   105                           ;Called with:
   106                           ;	high address of idata address in btemp 
   107                           ;	low address of idata address in btemp+1 
   108                           ;	low address of data in FSR
   109                           ;	high address + 1 of data in btemp-1
   110  075B                     init_ram:
   111  075B  120A  118A  2757   	fcall init_fetch
              120A  118A         
   112  0760  0080               	movwf indf,f
   113  0761  0A84               	incf fsr,f
   114  0762  0804               	movf fsr,w
   115  0763  067D               	xorwf btemp-1,w
   116  0764  1903               	btfsc status,2
   117  0765  3400               	retlw 0
   118  0766  0AFF               	incf btemp+1,f
   119  0767  1903               	btfsc status,2
   120  0768  0AFE               	incf btemp,f
   121  0769  2F5B               	goto init_ram
   122                           ; Initialize objects allocated to BANK0
   123                           psect cinit,class=CODE,delta=2
   124                           global init_ram, __pidataBANK0
   125  0745  1383               	bcf	status, 7	;select IRP bank0
   126  0746  3032               	movlw low(__pdataBANK0+8)
   127  0747  00FD               	movwf btemp-1,f
   128  0748  3007               	movlw high(__pidataBANK0)
   129  0749  00FE               	movwf btemp,f
   130  074A  303D               	movlw low(__pidataBANK0)
   131  074B  00FF               	movwf btemp+1,f
   132  074C  302A               	movlw low(__pdataBANK0)
   133  074D  0084               	movwf fsr,f
   134  074E  120A  118A  275B   	fcall init_ram
              120A  118A         
   135                           psect cinit,class=CODE,delta=2
   136                           global end_of_initialization
   137                           
   138                           ;End of C runtime variable initialization code
   139                           
   140  0753                     end_of_initialization:
   141  0753  0183               clrf status
   142  0754  120A  118A  2FA8   ljmp _main	;jump to C main() function
   143                           psect	cstackCOMMON,class=COMMON,space=1
   144                           global __pcstackCOMMON
   145  0070                     __pcstackCOMMON:
   146                           	global	?_delay
   147  0070                     ?_delay:	; 0 bytes @ 0x0
   148                           	global	?_main
   149  0070                     ?_main:	; 0 bytes @ 0x0
   150                           	global	delay@a
   151  0070                     delay@a:	; 2 bytes @ 0x0
   152  0070                     	ds	2
   153                           	global	??_delay
   154  0072                     ??_delay:	; 0 bytes @ 0x2
   155  0072                     	ds	1
   156                           	global	delay@i
   157  0073                     delay@i:	; 2 bytes @ 0x3
   158  0073                     	ds	2
   159                           	global	delay@j
   160  0075                     delay@j:	; 2 bytes @ 0x5
   161  0075                     	ds	2
   162                           	global	??_main
   163  0077                     ??_main:	; 0 bytes @ 0x7
   164  0077                     	ds	4
   165                           psect	cstackBANK0,class=BANK0,space=1
   166                           global __pcstackBANK0
   167  0020                     __pcstackBANK0:
   168                           	global	main@array
   169  0020                     main@array:	; 8 bytes @ 0x0
   170  0020                     	ds	8
   171                           	global	main@i
   172  0028                     main@i:	; 2 bytes @ 0x8
   173  0028                     	ds	2
   174 ;;Data sizes: Strings 0, constant 0, data 8, bss 0, persistent 0 stack 0
   175 ;;Auto spaces:   Size  Autos    Used
   176 ;; COMMON          14     11      11
   177 ;; BANK0           80     10      18
   178 ;; BANK1           80      0       0
   179 ;; BANK3           96      0       0
   180 ;; BANK2           96      0       0
   181                           
   182 ;;
   183 ;; Pointer list with targets:
   184                           
   185                           
   186                           
   187 ;;
   188 ;; Critical Paths under _main in COMMON
   189 ;;
   190 ;;   _main->_delay
   191 ;;
   192 ;; Critical Paths under _main in BANK0
   193 ;;
   194 ;;   None.
   195 ;;
   196 ;; Critical Paths under _main in BANK1
   197 ;;
   198 ;;   None.
   199 ;;
   200 ;; Critical Paths under _main in BANK3
   201 ;;
   202 ;;   None.
   203 ;;
   204 ;; Critical Paths under _main in BANK2
   205 ;;
   206 ;;   None.
   207                           
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   210 ;;
   211                           
   212 ;;
   213 ;;Call Graph Tables:
   214 ;;
   215 ;; ---------------------------------------------------------------------------------
   216 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   217 ;; ---------------------------------------------------------------------------------
   218 ;; (0) _main                                                14    14      0     184
   219 ;;                                              7 COMMON     4     4      0
   220 ;;                                              0 BANK0     10    10      0
   221 ;;                              _delay
   222 ;; ---------------------------------------------------------------------------------
   223 ;; (1) _delay                                                7     5      2      92
   224 ;;                                              0 COMMON     7     5      2
   225 ;; ---------------------------------------------------------------------------------
   226 ;; Estimated maximum stack depth 1
   227 ;; ---------------------------------------------------------------------------------
   228                           
   229 ;; Call Graph Graphs:
   230                           
   231 ;; _main (ROOT)
   232 ;;   _delay
   233 ;;
   234                           
   235 ;; Address spaces:
   236                           
   237 ;;Name               Size   Autos  Total    Cost      Usage
   238 ;;BANK3               60      0       0       9        0.0%
   239 ;;BITBANK3            60      0       0       8        0.0%
   240 ;;SFR3                 0      0       0       4        0.0%
   241 ;;BITSFR3              0      0       0       4        0.0%
   242 ;;BANK2               60      0       0      11        0.0%
   243 ;;BITBANK2            60      0       0      10        0.0%
   244 ;;SFR2                 0      0       0       5        0.0%
   245 ;;BITSFR2              0      0       0       5        0.0%
   246 ;;SFR1                 0      0       0       2        0.0%
   247 ;;BITSFR1              0      0       0       2        0.0%
   248 ;;BANK1               50      0       0       7        0.0%
   249 ;;BITBANK1            50      0       0       6        0.0%
   250 ;;CODE                 0      0       0       0        0.0%
   251 ;;DATA                 0      0      1E      12        0.0%
   252 ;;ABS                  0      0      1D       3        0.0%
   253 ;;NULL                 0      0       0       0        0.0%
   254 ;;STACK                0      0       1       2        0.0%
   255 ;;BANK0               50      A      12       5       22.5%
   256 ;;BITBANK0            50      0       0       4        0.0%
   257 ;;SFR0                 0      0       0       1        0.0%
   258 ;;BITSFR0              0      0       0       1        0.0%
   259 ;;COMMON               E      B       B       1       78.6%
   260 ;;BITCOMMON            E      0       0       0        0.0%
   261 ;;EEDATA             100      0       0       0        0.0%
   262                           
   263                           	global	_main
   264                           psect	maintext,global,class=CODE,delta=2
   265                           global __pmaintext
   266  07A8                     __pmaintext:
   267                           
   268 ;; *************** function _main *****************
   269 ;; Defined at:
   270 ;;		line 4 in file "F:\Basic Microcontroller\PIC16F877A\MOTOR\stepper motor\stepper.c"
   271 ;; Parameters:    Size  Location     Type
   272 ;;		None
   273 ;; Auto vars:     Size  Location     Type
   274 ;;  array           8    0[BANK0 ] unsigned char [8]
   275 ;;  i               2    8[BANK0 ] int 
   276 ;; Return value:  Size  Location     Type
   277 ;;		None               void
   278 ;; Registers used:
   279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   280 ;; Tracked objects:
   281 ;;		On entry : 17F/0
   282 ;;		On exit  : 0/0
   283 ;;		Unchanged: 0/0
   284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   285 ;;      Params:         0       0       0       0       0
   286 ;;      Locals:         0      10       0       0       0
   287 ;;      Temps:          4       0       0       0       0
   288 ;;      Totals:         4      10       0       0       0
   289 ;;Total ram usage:       14 bytes
   290 ;; Hardware stack levels required when called:    1
   291 ;; This function calls:
   292 ;;		_delay
   293 ;; This function is called by:
   294 ;;		Startup code after reset
   295 ;; This function uses a non-reentrant model
   296 ;;
   297                           psect	maintext
   298                           	file	"F:\Basic Microcontroller\PIC16F877A\MOTOR\stepper motor\stepper.c"
   299                           	line	4
   300                           	global	__size_of_main
   301  0058                     	__size_of_main	equ	__end_of_main-_main
   302                           	
   303  07A8                     _main:	
   304                           	opt	stack 7
   305                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   306                           	line	5
   307                           	
   308  07A8                     l2653:	
   309                           ;stepper.c: 5: TRISC=0X00;
   310  07A8  1683               	bsf	status, 5	;RP0=1, select bank1
   311  07A9  1303               	bcf	status, 6	;RP1=0, select bank1
   312  07AA  0187               	clrf	(135)^080h	;volatile
   313                           	line	7
   314                           	
   315  07AB                     l2655:	
   316                           ;stepper.c: 6: int i;
   317                           ;stepper.c: 7: char array[]={0x01,0x03,0x02,0x06,0x04,0x0c,0x08,0x09};
   318  07AB  3020               	movlw	(main@array)&0ffh
   319  07AC  0084               	movwf	fsr0
   320  07AD  302A               	movlw	low(main@F1095)
   321  07AE  00F7               	movwf	(??_main+0)+0
   322  07AF  0804               	movf	fsr0,w
   323  07B0  00F8               	movwf	((??_main+0)+0+1)
   324  07B1  3008               	movlw	8
   325  07B2  00F9               	movwf	((??_main+0)+0+2)
   326  07B3                     u2310:
   327  07B3  0877               	movf	(??_main+0)+0,w
   328  07B4  0084               	movwf	fsr0
   329  07B5  1383               	bcf	status, 7	;select IRP bank0
   330                           	
   331  07B6  0800               	movf	indf,w
   332  07B7  00FA               	movwf	((??_main+0)+0+3)
   333  07B8  0AF7               	incf	(??_main+0)+0,f
   334  07B9  0878               	movf	((??_main+0)+0+1),w
   335  07BA  0084               	movwf	fsr0
   336                           	
   337  07BB  087A               	movf	((??_main+0)+0+3),w
   338  07BC  0080               	movwf	indf
   339  07BD  0AF8               	incf	((??_main+0)+0+1),f
   340  07BE  0BF9               	decfsz	((??_main+0)+0+2),f
   341  07BF  2FB3               	goto	u2310
   342  07C0  2FC1               	goto	l2657
   343                           	line	8
   344                           ;stepper.c: 8: while (1)
   345                           	
   346  07C1                     l689:	
   347                           	line	10
   348                           	
   349  07C1                     l2657:	
   350                           ;stepper.c: 9: {
   351                           ;stepper.c: 10: for(i=0;i<8;i++)
   352  07C1  1283               	bcf	status, 5	;RP0=0, select bank0
   353  07C2  1303               	bcf	status, 6	;RP1=0, select bank0
   354  07C3  01A8               	clrf	(main@i)
   355  07C4  01A9               	clrf	(main@i+1)
   356                           	
   357  07C5                     l2659:	
   358  07C5  0829               	movf	(main@i+1),w
   359  07C6  3A80               	xorlw	80h
   360  07C7  00FF               	movwf	btemp+1
   361  07C8  3080               	movlw	(high(08h))^80h
   362  07C9  027F               	subwf	btemp+1,w
   363  07CA  1D03               	skipz
   364  07CB  2FCE               	goto	u2325
   365  07CC  3008               	movlw	low(08h)
   366  07CD  0228               	subwf	(main@i),w
   367  07CE                     u2325:
   368                           
   369  07CE  1C03               	skipc
   370  07CF  2FD1               	goto	u2321
   371  07D0  2FD2               	goto	u2320
   372  07D1                     u2321:
   373  07D1  2FD4               	goto	l2663
   374  07D2                     u2320:
   375  07D2  2FC1               	goto	l2657
   376                           	
   377  07D3                     l2661:	
   378  07D3  2FC1               	goto	l2657
   379                           	line	11
   380                           	
   381  07D4                     l690:	
   382                           	line	12
   383                           	
   384  07D4                     l2663:	
   385                           ;stepper.c: 11: {
   386                           ;stepper.c: 12: PORTC=array[i];
   387  07D4  1283               	bcf	status, 5	;RP0=0, select bank0
   388  07D5  1303               	bcf	status, 6	;RP1=0, select bank0
   389  07D6  0828               	movf	(main@i),w
   390  07D7  3E20               	addlw	main@array&0ffh
   391  07D8  0084               	movwf	fsr0
   392  07D9  1383               	bcf	status, 7	;select IRP bank0
   393  07DA  0800               	movf	indf,w
   394  07DB  0087               	movwf	(7)	;volatile
   395                           	line	13
   396                           	
   397  07DC                     l2665:	
   398                           ;stepper.c: 13: delay(1000);
   399  07DC  30E8               	movlw	low(03E8h)
   400  07DD  00F0               	movwf	(?_delay)
   401  07DE  3003               	movlw	high(03E8h)
   402  07DF  00F1               	movwf	((?_delay))+1
   403  07E0  120A  118A  276A   	fcall	_delay
              120A  118A         
   404                           	line	10
   405                           	
   406  07E5                     l2667:	
   407  07E5  3001               	movlw	low(01h)
   408  07E6  1283               	bcf	status, 5	;RP0=0, select bank0
   409  07E7  1303               	bcf	status, 6	;RP1=0, select bank0
   410  07E8  07A8               	addwf	(main@i),f
   411  07E9  1803               	skipnc
   412  07EA  0AA9               	incf	(main@i+1),f
   413  07EB  3000               	movlw	high(01h)
   414  07EC  07A9               	addwf	(main@i+1),f
   415                           	
   416  07ED                     l2669:	
   417  07ED  0829               	movf	(main@i+1),w
   418  07EE  3A80               	xorlw	80h
   419  07EF  00FF               	movwf	btemp+1
   420  07F0  3080               	movlw	(high(08h))^80h
   421  07F1  027F               	subwf	btemp+1,w
   422  07F2  1D03               	skipz
   423  07F3  2FF6               	goto	u2335
   424  07F4  3008               	movlw	low(08h)
   425  07F5  0228               	subwf	(main@i),w
   426  07F6                     u2335:
   427                           
   428  07F6  1C03               	skipc
   429  07F7  2FF9               	goto	u2331
   430  07F8  2FFA               	goto	u2330
   431  07F9                     u2331:
   432  07F9  2FD4               	goto	l2663
   433  07FA                     u2330:
   434  07FA  2FC1               	goto	l2657
   435                           	
   436  07FB                     l691:	
   437  07FB  2FC1               	goto	l2657
   438                           	line	15
   439                           	
   440  07FC                     l692:	
   441                           	line	8
   442  07FC  2FC1               	goto	l2657
   443                           	
   444  07FD                     l693:	
   445                           	line	16
   446                           	
   447  07FD                     l694:	
   448                           	global	start
   449  07FD  120A  118A  2800   	ljmp	start
   450                           	opt stack 0
   451                           GLOBAL	__end_of_main
   452  0800                     	__end_of_main:
   453 ;; =============== function _main ends ============
   454                           
   455                           	signat	_main,88
   456                           	global	_delay
   457                           psect	text89,local,class=CODE,delta=2
   458                           global __ptext89
   459  076A                     __ptext89:
   460                           
   461 ;; *************** function _delay *****************
   462 ;; Defined at:
   463 ;;		line 20 in file "F:\Basic Microcontroller\PIC16F877A\MOTOR\stepper motor\stepper.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;  a               2    0[COMMON] int 
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  j               2    5[COMMON] int 
   468 ;;  i               2    3[COMMON] int 
   469 ;; Return value:  Size  Location     Type
   470 ;;		None               void
   471 ;; Registers used:
   472 ;;		wreg, status,2, btemp+1
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   478 ;;      Params:         2       0       0       0       0
   479 ;;      Locals:         4       0       0       0       0
   480 ;;      Temps:          1       0       0       0       0
   481 ;;      Totals:         7       0       0       0       0
   482 ;;Total ram usage:        7 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           psect	text89
   491                           	file	"F:\Basic Microcontroller\PIC16F877A\MOTOR\stepper motor\stepper.c"
   492                           	line	20
   493                           	global	__size_of_delay
   494  003E                     	__size_of_delay	equ	__end_of_delay-_delay
   495                           	
   496  076A                     _delay:	
   497                           	opt	stack 7
   498                           ; Regs used in _delay: [wreg+status,2+btemp+1]
   499                           	line	22
   500                           	
   501  076A                     l2639:	
   502                           ;stepper.c: 21: int i,j;
   503                           ;stepper.c: 22: for(i=0;i<a;i++)
   504  076A  01F3               	clrf	(delay@i)
   505  076B  01F4               	clrf	(delay@i+1)
   506  076C  2F98               	goto	l697
   507                           	line	23
   508                           	
   509  076D                     l698:	
   510                           	line	24
   511                           	
   512  076D                     l2641:	
   513                           ;stepper.c: 23: {
   514                           ;stepper.c: 24: for(j=0;j<100;j++)
   515  076D  01F5               	clrf	(delay@j)
   516  076E  01F6               	clrf	(delay@j+1)
   517                           	
   518  076F                     l2643:	
   519  076F  0876               	movf	(delay@j+1),w
   520  0770  3A80               	xorlw	80h
   521  0771  00FF               	movwf	btemp+1
   522  0772  3080               	movlw	(high(064h))^80h
   523  0773  027F               	subwf	btemp+1,w
   524  0774  1D03               	skipz
   525  0775  2F78               	goto	u2285
   526  0776  3064               	movlw	low(064h)
   527  0777  0275               	subwf	(delay@j),w
   528  0778                     u2285:
   529                           
   530  0778  1C03               	skipc
   531  0779  2F7B               	goto	u2281
   532  077A  2F7C               	goto	u2280
   533  077B                     u2281:
   534  077B  2F7E               	goto	l2647
   535  077C                     u2280:
   536  077C  2F92               	goto	l2651
   537                           	
   538  077D                     l2645:	
   539  077D  2F92               	goto	l2651
   540                           	line	25
   541                           	
   542  077E                     l699:	
   543                           	line	24
   544                           	
   545  077E                     l2647:	
   546                           ;stepper.c: 25: {
   547  077E  3001               	movlw	low(01h)
   548  077F  07F5               	addwf	(delay@j),f
   549  0780  1803               	skipnc
   550  0781  0AF6               	incf	(delay@j+1),f
   551  0782  3000               	movlw	high(01h)
   552  0783  07F6               	addwf	(delay@j+1),f
   553                           	
   554  0784                     l2649:	
   555  0784  0876               	movf	(delay@j+1),w
   556  0785  3A80               	xorlw	80h
   557  0786  00FF               	movwf	btemp+1
   558  0787  3080               	movlw	(high(064h))^80h
   559  0788  027F               	subwf	btemp+1,w
   560  0789  1D03               	skipz
   561  078A  2F8D               	goto	u2295
   562  078B  3064               	movlw	low(064h)
   563  078C  0275               	subwf	(delay@j),w
   564  078D                     u2295:
   565                           
   566  078D  1C03               	skipc
   567  078E  2F90               	goto	u2291
   568  078F  2F91               	goto	u2290
   569  0790                     u2291:
   570  0790  2F7E               	goto	l2647
   571  0791                     u2290:
   572  0791  2F92               	goto	l2651
   573                           	
   574  0792                     l700:	
   575                           	line	22
   576                           	
   577  0792                     l2651:	
   578  0792  3001               	movlw	low(01h)
   579  0793  07F3               	addwf	(delay@i),f
   580  0794  1803               	skipnc
   581  0795  0AF4               	incf	(delay@i+1),f
   582  0796  3000               	movlw	high(01h)
   583  0797  07F4               	addwf	(delay@i+1),f
   584                           	
   585  0798                     l697:	
   586  0798  0874               	movf	(delay@i+1),w
   587  0799  3A80               	xorlw	80h
   588  079A  00F2               	movwf	(??_delay+0)+0
   589  079B  0871               	movf	(delay@a+1),w
   590  079C  3A80               	xorlw	80h
   591  079D  0272               	subwf	(??_delay+0)+0,w
   592  079E  1D03               	skipz
   593  079F  2FA2               	goto	u2305
   594  07A0  0870               	movf	(delay@a),w
   595  07A1  0273               	subwf	(delay@i),w
   596  07A2                     u2305:
   597                           
   598  07A2  1C03               	skipc
   599  07A3  2FA5               	goto	u2301
   600  07A4  2FA6               	goto	u2300
   601  07A5                     u2301:
   602  07A5  2F6D               	goto	l2641
   603  07A6                     u2300:
   604  07A6  2FA7               	goto	l702
   605                           	
   606  07A7                     l701:	
   607                           	line	28
   608                           	
   609  07A7                     l702:	
   610  07A7  0008               	return
   611                           	opt stack 0
   612                           GLOBAL	__end_of_delay
   613  07A8                     	__end_of_delay:
   614 ;; =============== function _delay ends ============
   615                           
   616                           	signat	_delay,4216
   617                           psect	text90,local,class=CODE,delta=2
   618                           global __ptext90
   619  0000                     __ptext90:
   620                           	global	btemp
   621  007E                     	btemp set 07Eh
   622                           
   623                           	DABS	1,126,2	;btemp
   624                           	global	wtemp0
   625  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon Dec 09 17:32:07 2019

                   pc 0002                    _RD 0C60                    _WR 0C61                    fsr 0004  
                 l700 0792                   l701 07A7                   l702 07A7                   l690 07D4  
                 l691 07FB                   l692 07FC                   l693 07FD                   l694 07FD  
                 l697 0798                   l689 07C1                   l698 076D                   l699 077E  
                 _GIE 005F                   fsr0 0004                   indf 0000                  l2641 076D  
                l2651 0792                  l2643 076F                  l2645 077D                  l2661 07D3  
                l2653 07A8                  l2647 077E                  l2639 076A                  l2663 07D4  
                l2655 07AB                  l2649 0784                  l2665 07DC                  l2657 07C1  
                l2667 07E5                  l2659 07C5                  l2669 07ED                  u2300 07A6  
                u2301 07A5                  u2310 07B3                  u2320 07D2                  u2305 07A2  
                u2321 07D1                  u2330 07FA                  u2331 07F9                  u2325 07CE  
                u2335 07F6                  u2280 077C                  u2281 077B                  u2290 0791  
                u2291 0790                  u2285 0778                  u2295 078D                  _WREN 0C62  
                _main 07A8                  btemp 007E                  start 0000                 ?_main 0070  
               _EEADR 010D                 _CARRY 0018                 _PORTC 0007                 _TRISC 0087  
               _delay 076A                 main@i 0028                 pclath 000A                 status 0003  
               wtemp0 007E          __end_of_main 0800                ??_main 0077                ?_delay 0070  
              _EEDATA 010C                _EECON1 018C                _EECON2 018D                delay@a 0070  
              delay@i 0073                delay@j 0075        __pcstackCOMMON 0070          __pidataBANK0 073D  
       __end_of_delay 07A8               ??_delay 0072            __pmaintext 07A8  end_of_initialization 0753  
             init_ram 075B   start_initialization 0745           __pdataBANK0 002A         __pcstackBANK0 0020  
      __size_of_delay 003E             main@F1095 002A             main@array 0020             init_fetch 0757  
            __ptext90 0000              __ptext89 076A         __size_of_main 0058  
