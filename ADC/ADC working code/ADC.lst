

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Mon Dec 09 19:00:17 2019

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_lcd_int
    43                           	FNCALL	_main,_show
    44                           	FNCALL	_main,_cmd
    45                           	FNCALL	_main,_adc
    46                           	FNCALL	_adc,___lwdiv
    47                           	FNCALL	_adc,_dat
    48                           	FNCALL	_adc,___lwmod
    49                           	FNCALL	_show,_dat
    50                           	FNCALL	_lcd_int,_cmd
    51                           	FNCALL	_dat,_delay
    52                           	FNCALL	_cmd,_delay
    53                           	FNROOT	_main
    54                           	global	_ADCON0
    55                           psect	text206,local,class=CODE,delta=2
    56                           global __ptext206
    57  0000                     __ptext206:
    58  001F                     _ADCON0	set	31
    59                           	global	_ADRESH
    60  001E                     _ADRESH	set	30
    61                           	global	_PORTD
    62  0008                     _PORTD	set	8
    63                           	global	_CARRY
    64  0018                     _CARRY	set	24
    65                           	global	_GIE
    66  005F                     _GIE	set	95
    67                           	global	_GO_nDONE
    68  00FA                     _GO_nDONE	set	250
    69                           	global	_RC4
    70  003C                     _RC4	set	60
    71                           	global	_RC5
    72  003D                     _RC5	set	61
    73                           	global	_RC6
    74  003E                     _RC6	set	62
    75                           	global	_ADCON1
    76  009F                     _ADCON1	set	159
    77                           	global	_ADRESL
    78  009E                     _ADRESL	set	158
    79                           	global	_TRISC
    80  0087                     _TRISC	set	135
    81                           	global	_TRISD
    82  0088                     _TRISD	set	136
    83                           	global	_TRISA0
    84  0428                     _TRISA0	set	1064
    85                           	global	_EEADR
    86  010D                     _EEADR	set	269
    87                           	global	_EEDATA
    88  010C                     _EEDATA	set	268
    89                           	global	_EECON1
    90  018C                     _EECON1	set	396
    91                           	global	_EECON2
    92  018D                     _EECON2	set	397
    93                           	global	_RD
    94  0C60                     _RD	set	3168
    95                           	global	_WR
    96  0C61                     _WR	set	3169
    97                           	global	_WREN
    98  0C62                     _WREN	set	3170
    99                           psect	strings,class=STRING,delta=2
   100                           global __pstrings
   101  0003                     __pstrings:
   102                           ;	global	stringdir,stringtab,__stringbase
   103  0003                     stringtab:
   104                           ;	String table - string pointers are 1 byte each
   105  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   106  0003  3000               movlw high(stringdir)
   107  0004  008A               movwf pclath
   108  0005  0804               movf fsr,w
   109  0006  0A84               incf fsr
   110  0007  0782               	addwf pc
   111  0008                     __stringbase:
   112  0008  3400               	retlw	0
   113                           psect	strings
   114                           	
   115  0009                     STR_1:	
   116  0009  3441               	retlw	65	;'A'
   117  000A  3444               	retlw	68	;'D'
   118  000B  3443               	retlw	67	;'C'
   119  000C  3420               	retlw	32	;' '
   120  000D  3456               	retlw	86	;'V'
   121  000E  3461               	retlw	97	;'a'
   122  000F  346C               	retlw	108	;'l'
   123  0010  3475               	retlw	117	;'u'
   124  0011  3465               	retlw	101	;'e'
   125  0012  3420               	retlw	32	;' '
   126  0013  343A               	retlw	58	;':'
   127  0014  3400               	retlw	0
   128                           psect	strings
   129                           	file	"ADC.as"
   130                           	line	#
   131                           psect cinit,class=CODE,delta=2
   132                           global start_initialization
   133  060A                     start_initialization:
   134                           
   135                           psect cinit,class=CODE,delta=2
   136                           global end_of_initialization
   137                           
   138                           ;End of C runtime variable initialization code
   139                           
   140  060A                     end_of_initialization:
   141  060A  0183               clrf status
   142  060B  120A  118A  2E72   ljmp _main	;jump to C main() function
   143                           psect	cstackCOMMON,class=COMMON,space=1
   144                           global __pcstackCOMMON
   145  0070                     __pcstackCOMMON:
   146                           	global	?_lcd_int
   147  0070                     ?_lcd_int:	; 0 bytes @ 0x0
   148                           	global	?_show
   149  0070                     ?_show:	; 0 bytes @ 0x0
   150                           	global	?_cmd
   151  0070                     ?_cmd:	; 0 bytes @ 0x0
   152                           	global	?_adc
   153  0070                     ?_adc:	; 0 bytes @ 0x0
   154                           	global	?_delay
   155  0070                     ?_delay:	; 0 bytes @ 0x0
   156                           	global	?_main
   157  0070                     ?_main:	; 0 bytes @ 0x0
   158                           	global	?_dat
   159  0070                     ?_dat:	; 0 bytes @ 0x0
   160                           	global	?___lwdiv
   161  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   162                           	global	delay@L
   163  0070                     delay@L:	; 2 bytes @ 0x0
   164                           	global	___lwdiv@divisor
   165  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   166  0070                     	ds	2
   167                           	global	??_delay
   168  0072                     ??_delay:	; 0 bytes @ 0x2
   169                           	global	___lwdiv@dividend
   170  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   171  0072                     	ds	1
   172                           	global	delay@i
   173  0073                     delay@i:	; 2 bytes @ 0x3
   174  0073                     	ds	1
   175                           	global	??___lwdiv
   176  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   177  0074                     	ds	1
   178                           	global	delay@j
   179  0075                     delay@j:	; 2 bytes @ 0x5
   180                           	global	___lwdiv@quotient
   181  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   182  0075                     	ds	2
   183                           	global	??_cmd
   184  0077                     ??_cmd:	; 0 bytes @ 0x7
   185                           	global	??_dat
   186  0077                     ??_dat:	; 0 bytes @ 0x7
   187                           	global	cmd@a
   188  0077                     cmd@a:	; 1 bytes @ 0x7
   189                           	global	dat@b
   190  0077                     dat@b:	; 1 bytes @ 0x7
   191                           	global	___lwdiv@counter
   192  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   193  0077                     	ds	1
   194                           	global	??_lcd_int
   195  0078                     ??_lcd_int:	; 0 bytes @ 0x8
   196                           	global	??_show
   197  0078                     ??_show:	; 0 bytes @ 0x8
   198                           	global	?___lwmod
   199  0078                     ?___lwmod:	; 2 bytes @ 0x8
   200                           	global	___lwmod@divisor
   201  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
   202  0078                     	ds	1
   203                           	global	show@s
   204  0079                     show@s:	; 1 bytes @ 0x9
   205  0079                     	ds	1
   206                           	global	___lwmod@dividend
   207  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
   208  007A                     	ds	2
   209                           	global	??___lwmod
   210  007C                     ??___lwmod:	; 0 bytes @ 0xC
   211  007C                     	ds	1
   212                           	global	___lwmod@counter
   213  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
   214  007D                     	ds	1
   215                           	global	??_main
   216  007E                     ??_main:	; 0 bytes @ 0xE
   217                           psect	cstackBANK0,class=BANK0,space=1
   218                           global __pcstackBANK0
   219  0020                     __pcstackBANK0:
   220                           	global	??_adc
   221  0020                     ??_adc:	; 0 bytes @ 0x0
   222  0020                     	ds	2
   223                           	global	adc@adcval
   224  0022                     adc@adcval:	; 2 bytes @ 0x2
   225  0022                     	ds	2
   226 ;;Data sizes: Strings 12, constant 0, data 0, bss 0, persistent 0 stack 0
   227 ;;Auto spaces:   Size  Autos    Used
   228 ;; COMMON          14     14      14
   229 ;; BANK0           80      4       4
   230 ;; BANK1           80      0       0
   231 ;; BANK3           96      0       0
   232 ;; BANK2           96      0       0
   233                           
   234 ;;
   235 ;; Pointer list with targets:
   236                           
   237 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   238 ;;
   239 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   240 ;;
   241 ;; show@s	PTR unsigned char  size(1) Largest target is 12
   242 ;;		 -> STR_1(CODE[12]), 
   243 ;;
   244                           
   245                           
   246 ;;
   247 ;; Critical Paths under _main in COMMON
   248 ;;
   249 ;;   _adc->___lwmod
   250 ;;   _show->_dat
   251 ;;   _lcd_int->_cmd
   252 ;;   _dat->_delay
   253 ;;   _cmd->_delay
   254 ;;   ___lwmod->___lwdiv
   255 ;;
   256 ;; Critical Paths under _main in BANK0
   257 ;;
   258 ;;   _main->_adc
   259 ;;
   260 ;; Critical Paths under _main in BANK1
   261 ;;
   262 ;;   None.
   263 ;;
   264 ;; Critical Paths under _main in BANK3
   265 ;;
   266 ;;   None.
   267 ;;
   268 ;; Critical Paths under _main in BANK2
   269 ;;
   270 ;;   None.
   271                           
   272 ;;
   273 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   274 ;;
   275                           
   276 ;;
   277 ;;Call Graph Tables:
   278 ;;
   279 ;; ---------------------------------------------------------------------------------
   280 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   281 ;; ---------------------------------------------------------------------------------
   282 ;; (0) _main                                                 0     0      0     911
   283 ;;                            _lcd_int
   284 ;;                               _show
   285 ;;                                _cmd
   286 ;;                                _adc
   287 ;; ---------------------------------------------------------------------------------
   288 ;; (1) _adc                                                  4     4      0     524
   289 ;;                                              0 BANK0      4     4      0
   290 ;;                            ___lwdiv
   291 ;;                                _dat
   292 ;;                            ___lwmod
   293 ;; ---------------------------------------------------------------------------------
   294 ;; (1) _show                                                 2     2      0     159
   295 ;;                                              8 COMMON     2     2      0
   296 ;;                                _dat
   297 ;; ---------------------------------------------------------------------------------
   298 ;; (1) _lcd_int                                              0     0      0     114
   299 ;;                                _cmd
   300 ;; ---------------------------------------------------------------------------------
   301 ;; (2) _dat                                                  1     1      0     114
   302 ;;                                              7 COMMON     1     1      0
   303 ;;                              _delay
   304 ;; ---------------------------------------------------------------------------------
   305 ;; (1) _cmd                                                  1     1      0     114
   306 ;;                                              7 COMMON     1     1      0
   307 ;;                              _delay
   308 ;; ---------------------------------------------------------------------------------
   309 ;; (2) ___lwmod                                              6     2      4     159
   310 ;;                                              8 COMMON     6     2      4
   311 ;;                            ___lwdiv (ARG)
   312 ;; ---------------------------------------------------------------------------------
   313 ;; (2) ___lwdiv                                              8     4      4     162
   314 ;;                                              0 COMMON     8     4      4
   315 ;; ---------------------------------------------------------------------------------
   316 ;; (3) _delay                                                7     5      2      92
   317 ;;                                              0 COMMON     7     5      2
   318 ;; ---------------------------------------------------------------------------------
   319 ;; Estimated maximum stack depth 3
   320 ;; ---------------------------------------------------------------------------------
   321                           
   322 ;; Call Graph Graphs:
   323                           
   324 ;; _main (ROOT)
   325 ;;   _lcd_int
   326 ;;     _cmd
   327 ;;       _delay
   328 ;;   _show
   329 ;;     _dat
   330 ;;       _delay
   331 ;;   _cmd
   332 ;;     _delay
   333 ;;   _adc
   334 ;;     ___lwdiv
   335 ;;     _dat
   336 ;;       _delay
   337 ;;     ___lwmod
   338 ;;       ___lwdiv (ARG)
   339 ;;
   340                           
   341 ;; Address spaces:
   342                           
   343 ;;Name               Size   Autos  Total    Cost      Usage
   344 ;;BITCOMMON            E      0       0       0        0.0%
   345 ;;EEDATA             100      0       0       0        0.0%
   346 ;;NULL                 0      0       0       0        0.0%
   347 ;;CODE                 0      0       0       0        0.0%
   348 ;;COMMON               E      E       E       1      100.0%
   349 ;;BITSFR0              0      0       0       1        0.0%
   350 ;;SFR0                 0      0       0       1        0.0%
   351 ;;BITSFR1              0      0       0       2        0.0%
   352 ;;SFR1                 0      0       0       2        0.0%
   353 ;;STACK                0      0       3       2        0.0%
   354 ;;ABS                  0      0       0       3        0.0%
   355 ;;BITBANK0            50      0       0       4        0.0%
   356 ;;BITSFR3              0      0       0       4        0.0%
   357 ;;SFR3                 0      0       0       4        0.0%
   358 ;;BANK0               50      4       4       5        5.0%
   359 ;;BITSFR2              0      0       0       5        0.0%
   360 ;;SFR2                 0      0       0       5        0.0%
   361 ;;BITBANK1            50      0       0       6        0.0%
   362 ;;BANK1               50      0       0       7        0.0%
   363 ;;BITBANK3            60      0       0       8        0.0%
   364 ;;BANK3               60      0       0       9        0.0%
   365 ;;BITBANK2            60      0       0      10        0.0%
   366 ;;BANK2               60      0       0      11        0.0%
   367 ;;DATA                 0      0       0      12        0.0%
   368                           
   369                           	global	_main
   370                           psect	maintext,global,class=CODE,delta=2
   371                           global __pmaintext
   372  0672                     __pmaintext:
   373                           
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 12 in file "F:\Avinashi lingam\PIC\ADC\ADC.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;		None               void
   383 ;; Registers used:
   384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : 17F/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0
   393 ;;      Totals:         0       0       0       0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels required when called:    3
   396 ;; This function calls:
   397 ;;		_lcd_int
   398 ;;		_show
   399 ;;		_cmd
   400 ;;		_adc
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           psect	maintext
   406                           	file	"F:\Avinashi lingam\PIC\ADC\ADC.c"
   407                           	line	12
   408                           	global	__size_of_main
   409  0021                     	__size_of_main	equ	__end_of_main-_main
   410                           	
   411  0672                     _main:	
   412                           	opt	stack 5
   413                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   414                           	line	13
   415                           	
   416  0672                     l2916:	
   417                           ;ADC.c: 13: TRISD=0;
   418  0672  1683               	bsf	status, 5	;RP0=1, select bank1
   419  0673  1303               	bcf	status, 6	;RP1=0, select bank1
   420  0674  0188               	clrf	(136)^080h	;volatile
   421                           	line	14
   422                           ;ADC.c: 14: TRISC=0;
   423  0675  0187               	clrf	(135)^080h	;volatile
   424                           	line	15
   425                           	
   426  0676                     l2918:	
   427                           ;ADC.c: 15: TRISA0=1;
   428  0676  1405               	bsf	(1064/8)^080h,(1064)&7
   429                           	line	16
   430                           	
   431  0677                     l2920:	
   432                           ;ADC.c: 16: lcd_int();
   433  0677  120A  118A  2638   	fcall	_lcd_int
              120A  118A         
   434                           	line	17
   435                           	
   436  067C                     l2922:	
   437                           ;ADC.c: 17: show("ADC Value :");
   438  067C  3001               	movlw	((STR_1-__stringbase))&0ffh
   439  067D  120A  118A  2651   	fcall	_show
              120A  118A         
   440  0682  2E83               	goto	l2924
   441                           	line	18
   442                           ;ADC.c: 18: while(1)
   443                           	
   444  0683                     l695:	
   445                           	line	20
   446                           	
   447  0683                     l2924:	
   448                           ;ADC.c: 19: {
   449                           ;ADC.c: 20: cmd(0xC0);
   450  0683  30C0               	movlw	(0C0h)
   451  0684  120A  118A  260E   	fcall	_cmd
              120A  118A         
   452                           	line	21
   453                           	
   454  0689                     l2926:	
   455                           ;ADC.c: 21: adc();
   456  0689  120A  118A  2763   	fcall	_adc
              120A  118A         
   457  068E  2E83               	goto	l2924
   458                           	line	22
   459                           	
   460  068F                     l696:	
   461                           	line	18
   462  068F  2E83               	goto	l2924
   463                           	
   464  0690                     l697:	
   465                           	line	23
   466                           	
   467  0690                     l698:	
   468                           	global	start
   469  0690  120A  118A  2800   	ljmp	start
   470                           	opt stack 0
   471                           GLOBAL	__end_of_main
   472  0693                     	__end_of_main:
   473 ;; =============== function _main ends ============
   474                           
   475                           	signat	_main,88
   476                           	global	_adc
   477                           psect	text207,local,class=CODE,delta=2
   478                           global __ptext207
   479  0763                     __ptext207:
   480                           
   481 ;; *************** function _adc *****************
   482 ;; Defined at:
   483 ;;		line 60 in file "F:\Avinashi lingam\PIC\ADC\ADC.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;  adcval          2    2[BANK0 ] unsigned int 
   488 ;; Return value:  Size  Location     Type
   489 ;;		None               void
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         0       2       0       0       0
   499 ;;      Temps:          0       2       0       0       0
   500 ;;      Totals:         0       4       0       0       0
   501 ;;Total ram usage:        4 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; Hardware stack levels required when called:    2
   504 ;; This function calls:
   505 ;;		___lwdiv
   506 ;;		_dat
   507 ;;		___lwmod
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           psect	text207
   513                           	file	"F:\Avinashi lingam\PIC\ADC\ADC.c"
   514                           	line	60
   515                           	global	__size_of_adc
   516  009D                     	__size_of_adc	equ	__end_of_adc-_adc
   517                           	
   518  0763                     _adc:	
   519                           	opt	stack 5
   520                           ; Regs used in _adc: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   521                           	line	62
   522                           	
   523  0763                     l2904:	
   524                           ;ADC.c: 61: unsigned int adcval;
   525                           ;ADC.c: 62: ADCON1=0x80;
   526  0763  3080               	movlw	(080h)
   527  0764  1683               	bsf	status, 5	;RP0=1, select bank1
   528  0765  1303               	bcf	status, 6	;RP1=0, select bank1
   529  0766  009F               	movwf	(159)^080h	;volatile
   530                           	line	63
   531                           ;ADC.c: 63: ADCON0=0x45;
   532  0767  3045               	movlw	(045h)
   533  0768  1283               	bcf	status, 5	;RP0=0, select bank0
   534  0769  1303               	bcf	status, 6	;RP1=0, select bank0
   535  076A  009F               	movwf	(31)	;volatile
   536                           	line	64
   537                           ;ADC.c: 64: while(GO_nDONE==1);
   538  076B  2F6C               	goto	l716
   539                           	
   540  076C                     l717:	
   541                           	
   542  076C                     l716:	
   543  076C  191F               	btfsc	(250/8),(250)&7
   544  076D  2F6F               	goto	u2441
   545  076E  2F70               	goto	u2440
   546  076F                     u2441:
   547  076F  2F6C               	goto	l716
   548  0770                     u2440:
   549  0770  2F71               	goto	l2906
   550                           	
   551  0771                     l718:	
   552                           	line	65
   553                           	
   554  0771                     l2906:	
   555                           ;ADC.c: 65: adcval=((ADRESH<<8)+(ADRESL));
   556  0771  081E               	movf	(30),w	;volatile
   557  0772  00A0               	movwf	(??_adc+0)+0
   558  0773  01A1               	clrf	(??_adc+0)+0+1
   559  0774  0820               	movf	(??_adc+0)+0,w
   560  0775  00A1               	movwf	(??_adc+0)+1
   561  0776  01A0               	clrf	(??_adc+0)+0
   562  0777  1683               	bsf	status, 5	;RP0=1, select bank1
   563  0778  1303               	bcf	status, 6	;RP1=0, select bank1
   564  0779  081E               	movf	(158)^080h,w	;volatile
   565  077A  1283               	bcf	status, 5	;RP0=0, select bank0
   566  077B  1303               	bcf	status, 6	;RP1=0, select bank0
   567  077C  0720               	addwf	0+(??_adc+0)+0,w
   568  077D  00A2               	movwf	(adc@adcval)
   569  077E  3000               	movlw	0
   570  077F  1803               	skipnc
   571  0780  3001               	movlw	1
   572  0781  0721               	addwf	1+(??_adc+0)+0,w
   573  0782  00A3               	movwf	1+(adc@adcval)
   574                           	line	66
   575                           	
   576  0783                     l2908:	
   577                           ;ADC.c: 66: dat((adcval/1000)+48);
   578  0783  30E8               	movlw	low(03E8h)
   579  0784  00F0               	movwf	(?___lwdiv)
   580  0785  3003               	movlw	high(03E8h)
   581  0786  00F1               	movwf	((?___lwdiv))+1
   582  0787  0823               	movf	(adc@adcval+1),w
   583  0788  01F3               	clrf	1+(?___lwdiv)+02h
   584  0789  07F3               	addwf	1+(?___lwdiv)+02h
   585  078A  0822               	movf	(adc@adcval),w
   586  078B  01F2               	clrf	0+(?___lwdiv)+02h
   587  078C  07F2               	addwf	0+(?___lwdiv)+02h
   588                           
   589  078D  120A  118A  2715   	fcall	___lwdiv
              120A  118A         
   590  0792  0870               	movf	(0+(?___lwdiv)),w
   591  0793  3E30               	addlw	030h
   592  0794  120A  118A  2623   	fcall	_dat
              120A  118A         
   593                           	line	67
   594                           	
   595  0799                     l2910:	
   596                           ;ADC.c: 67: dat(((adcval/100)%10)+48);
   597  0799  300A               	movlw	low(0Ah)
   598  079A  00F8               	movwf	(?___lwmod)
   599  079B  3000               	movlw	high(0Ah)
   600  079C  00F9               	movwf	((?___lwmod))+1
   601  079D  3064               	movlw	low(064h)
   602  079E  00F0               	movwf	(?___lwdiv)
   603  079F  3000               	movlw	high(064h)
   604  07A0  00F1               	movwf	((?___lwdiv))+1
   605  07A1  1283               	bcf	status, 5	;RP0=0, select bank0
   606  07A2  1303               	bcf	status, 6	;RP1=0, select bank0
   607  07A3  0823               	movf	(adc@adcval+1),w
   608  07A4  01F3               	clrf	1+(?___lwdiv)+02h
   609  07A5  07F3               	addwf	1+(?___lwdiv)+02h
   610  07A6  0822               	movf	(adc@adcval),w
   611  07A7  01F2               	clrf	0+(?___lwdiv)+02h
   612  07A8  07F2               	addwf	0+(?___lwdiv)+02h
   613                           
   614  07A9  120A  118A  2715   	fcall	___lwdiv
              120A  118A         
   615  07AE  0871               	movf	(1+(?___lwdiv)),w
   616  07AF  01FB               	clrf	1+(?___lwmod)+02h
   617  07B0  07FB               	addwf	1+(?___lwmod)+02h
   618  07B1  0870               	movf	(0+(?___lwdiv)),w
   619  07B2  01FA               	clrf	0+(?___lwmod)+02h
   620  07B3  07FA               	addwf	0+(?___lwmod)+02h
   621                           
   622  07B4  120A  118A  26D1   	fcall	___lwmod
              120A  118A         
   623  07B9  0878               	movf	(0+(?___lwmod)),w
   624  07BA  3E30               	addlw	030h
   625  07BB  120A  118A  2623   	fcall	_dat
              120A  118A         
   626                           	line	68
   627                           	
   628  07C0                     l2912:	
   629                           ;ADC.c: 68: dat(((adcval/10)%10)+48);
   630  07C0  300A               	movlw	low(0Ah)
   631  07C1  00F8               	movwf	(?___lwmod)
   632  07C2  3000               	movlw	high(0Ah)
   633  07C3  00F9               	movwf	((?___lwmod))+1
   634  07C4  300A               	movlw	low(0Ah)
   635  07C5  00F0               	movwf	(?___lwdiv)
   636  07C6  3000               	movlw	high(0Ah)
   637  07C7  00F1               	movwf	((?___lwdiv))+1
   638  07C8  1283               	bcf	status, 5	;RP0=0, select bank0
   639  07C9  1303               	bcf	status, 6	;RP1=0, select bank0
   640  07CA  0823               	movf	(adc@adcval+1),w
   641  07CB  01F3               	clrf	1+(?___lwdiv)+02h
   642  07CC  07F3               	addwf	1+(?___lwdiv)+02h
   643  07CD  0822               	movf	(adc@adcval),w
   644  07CE  01F2               	clrf	0+(?___lwdiv)+02h
   645  07CF  07F2               	addwf	0+(?___lwdiv)+02h
   646                           
   647  07D0  120A  118A  2715   	fcall	___lwdiv
              120A  118A         
   648  07D5  0871               	movf	(1+(?___lwdiv)),w
   649  07D6  01FB               	clrf	1+(?___lwmod)+02h
   650  07D7  07FB               	addwf	1+(?___lwmod)+02h
   651  07D8  0870               	movf	(0+(?___lwdiv)),w
   652  07D9  01FA               	clrf	0+(?___lwmod)+02h
   653  07DA  07FA               	addwf	0+(?___lwmod)+02h
   654                           
   655  07DB  120A  118A  26D1   	fcall	___lwmod
              120A  118A         
   656  07E0  0878               	movf	(0+(?___lwmod)),w
   657  07E1  3E30               	addlw	030h
   658  07E2  120A  118A  2623   	fcall	_dat
              120A  118A         
   659                           	line	69
   660                           	
   661  07E7                     l2914:	
   662                           ;ADC.c: 69: dat((adcval%10)+48);
   663  07E7  300A               	movlw	low(0Ah)
   664  07E8  00F8               	movwf	(?___lwmod)
   665  07E9  3000               	movlw	high(0Ah)
   666  07EA  00F9               	movwf	((?___lwmod))+1
   667  07EB  1283               	bcf	status, 5	;RP0=0, select bank0
   668  07EC  1303               	bcf	status, 6	;RP1=0, select bank0
   669  07ED  0823               	movf	(adc@adcval+1),w
   670  07EE  01FB               	clrf	1+(?___lwmod)+02h
   671  07EF  07FB               	addwf	1+(?___lwmod)+02h
   672  07F0  0822               	movf	(adc@adcval),w
   673  07F1  01FA               	clrf	0+(?___lwmod)+02h
   674  07F2  07FA               	addwf	0+(?___lwmod)+02h
   675                           
   676  07F3  120A  118A  26D1   	fcall	___lwmod
              120A  118A         
   677  07F8  0878               	movf	(0+(?___lwmod)),w
   678  07F9  3E30               	addlw	030h
   679  07FA  120A  118A  2623   	fcall	_dat
              120A  118A         
   680                           	line	70
   681                           	
   682  07FF                     l719:	
   683  07FF  0008               	return
   684                           	opt stack 0
   685                           GLOBAL	__end_of_adc
   686  0800                     	__end_of_adc:
   687 ;; =============== function _adc ends ============
   688                           
   689                           	signat	_adc,88
   690                           	global	_show
   691                           psect	text208,local,class=CODE,delta=2
   692                           global __ptext208
   693  0651                     __ptext208:
   694                           
   695 ;; *************** function _show *****************
   696 ;; Defined at:
   697 ;;		line 53 in file "F:\Avinashi lingam\PIC\ADC\ADC.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  s               1    wreg     PTR unsigned char 
   700 ;;		 -> STR_1(12), 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  s               1    9[COMMON] PTR unsigned char 
   703 ;;		 -> STR_1(12), 
   704 ;; Return value:  Size  Location     Type
   705 ;;		None               void
   706 ;; Registers used:
   707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         1       0       0       0       0
   715 ;;      Temps:          1       0       0       0       0
   716 ;;      Totals:         2       0       0       0       0
   717 ;;Total ram usage:        2 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    2
   720 ;; This function calls:
   721 ;;		_dat
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           psect	text208
   727                           	file	"F:\Avinashi lingam\PIC\ADC\ADC.c"
   728                           	line	53
   729                           	global	__size_of_show
   730  0021                     	__size_of_show	equ	__end_of_show-_show
   731                           	
   732  0651                     _show:	
   733                           	opt	stack 5
   734                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   735                           ;show@s stored from wreg
   736  0651  00F9               	movwf	(show@s)
   737                           	line	54
   738                           	
   739  0652                     l2896:	
   740                           ;ADC.c: 54: while(*s) {
   741  0652  2E64               	goto	l2902
   742                           	
   743  0653                     l711:	
   744                           	line	55
   745                           	
   746  0653                     l2898:	
   747                           ;ADC.c: 55: dat(*s++);
   748  0653  0879               	movf	(show@s),w
   749  0654  0084               	movwf	fsr0
   750  0655  120A  118A  2003   	fcall	stringdir
              120A  118A         
   751  065A  120A  118A  2623   	fcall	_dat
              120A  118A         
   752                           	
   753  065F                     l2900:	
   754  065F  3001               	movlw	(01h)
   755  0660  00F8               	movwf	(??_show+0)+0
   756  0661  0878               	movf	(??_show+0)+0,w
   757  0662  07F9               	addwf	(show@s),f
   758  0663  2E64               	goto	l2902
   759                           	line	56
   760                           	
   761  0664                     l710:	
   762                           	line	54
   763                           	
   764  0664                     l2902:	
   765  0664  0879               	movf	(show@s),w
   766  0665  0084               	movwf	fsr0
   767  0666  120A  118A  2003   	fcall	stringdir
              120A  118A         
   768  066B  3800               	iorlw	0
   769  066C  1D03               	skipz
   770  066D  2E6F               	goto	u2431
   771  066E  2E70               	goto	u2430
   772  066F                     u2431:
   773  066F  2E53               	goto	l2898
   774  0670                     u2430:
   775  0670  2E71               	goto	l713
   776                           	
   777  0671                     l712:	
   778                           	line	57
   779                           	
   780  0671                     l713:	
   781  0671  0008               	return
   782                           	opt stack 0
   783                           GLOBAL	__end_of_show
   784  0672                     	__end_of_show:
   785 ;; =============== function _show ends ============
   786                           
   787                           	signat	_show,4216
   788                           	global	_lcd_int
   789                           psect	text209,local,class=CODE,delta=2
   790                           global __ptext209
   791  0638                     __ptext209:
   792                           
   793 ;; *************** function _lcd_int *****************
   794 ;; Defined at:
   795 ;;		line 25 in file "F:\Avinashi lingam\PIC\ADC\ADC.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;		None               void
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0
   812 ;;      Totals:         0       0       0       0       0
   813 ;;Total ram usage:        0 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    2
   816 ;; This function calls:
   817 ;;		_cmd
   818 ;; This function is called by:
   819 ;;		_main
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           psect	text209
   823                           	file	"F:\Avinashi lingam\PIC\ADC\ADC.c"
   824                           	line	25
   825                           	global	__size_of_lcd_int
   826  0019                     	__size_of_lcd_int	equ	__end_of_lcd_int-_lcd_int
   827                           	
   828  0638                     _lcd_int:	
   829                           	opt	stack 5
   830                           ; Regs used in _lcd_int: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   831                           	line	26
   832                           	
   833  0638                     l2894:	
   834                           ;ADC.c: 26: cmd(0x38);
   835  0638  3038               	movlw	(038h)
   836  0639  120A  118A  260E   	fcall	_cmd
              120A  118A         
   837                           	line	27
   838                           ;ADC.c: 27: cmd(0x0c);
   839  063E  300C               	movlw	(0Ch)
   840  063F  120A  118A  260E   	fcall	_cmd
              120A  118A         
   841                           	line	28
   842                           ;ADC.c: 28: cmd(0x06);
   843  0644  3006               	movlw	(06h)
   844  0645  120A  118A  260E   	fcall	_cmd
              120A  118A         
   845                           	line	29
   846                           ;ADC.c: 29: cmd(0x80);
   847  064A  3080               	movlw	(080h)
   848  064B  120A  118A  260E   	fcall	_cmd
              120A  118A         
   849                           	line	30
   850                           	
   851  0650                     l701:	
   852  0650  0008               	return
   853                           	opt stack 0
   854                           GLOBAL	__end_of_lcd_int
   855  0651                     	__end_of_lcd_int:
   856 ;; =============== function _lcd_int ends ============
   857                           
   858                           	signat	_lcd_int,88
   859                           	global	_dat
   860                           psect	text210,local,class=CODE,delta=2
   861                           global __ptext210
   862  0623                     __ptext210:
   863                           
   864 ;; *************** function _dat *****************
   865 ;; Defined at:
   866 ;;		line 43 in file "F:\Avinashi lingam\PIC\ADC\ADC.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  b               1    wreg     unsigned char 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  b               1    7[COMMON] unsigned char 
   871 ;; Return value:  Size  Location     Type
   872 ;;		None               void
   873 ;; Registers used:
   874 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   875 ;; Tracked objects:
   876 ;;		On entry : 0/0
   877 ;;		On exit  : 0/0
   878 ;;		Unchanged: 0/0
   879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   880 ;;      Params:         0       0       0       0       0
   881 ;;      Locals:         1       0       0       0       0
   882 ;;      Temps:          0       0       0       0       0
   883 ;;      Totals:         1       0       0       0       0
   884 ;;Total ram usage:        1 bytes
   885 ;; Hardware stack levels used:    1
   886 ;; Hardware stack levels required when called:    1
   887 ;; This function calls:
   888 ;;		_delay
   889 ;; This function is called by:
   890 ;;		_show
   891 ;;		_adc
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           psect	text210
   895                           	file	"F:\Avinashi lingam\PIC\ADC\ADC.c"
   896                           	line	43
   897                           	global	__size_of_dat
   898  0015                     	__size_of_dat	equ	__end_of_dat-_dat
   899                           	
   900  0623                     _dat:	
   901                           	opt	stack 5
   902                           ; Regs used in _dat: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   903                           ;dat@b stored from wreg
   904  0623  00F7               	movwf	(dat@b)
   905                           	line	44
   906                           	
   907  0624                     l2882:	
   908                           ;ADC.c: 44: PORTD=b;
   909  0624  0877               	movf	(dat@b),w
   910  0625  1283               	bcf	status, 5	;RP0=0, select bank0
   911  0626  1303               	bcf	status, 6	;RP1=0, select bank0
   912  0627  0088               	movwf	(8)	;volatile
   913                           	line	45
   914                           	
   915  0628                     l2884:	
   916                           ;ADC.c: 45: RC4=1;
   917  0628  1607               	bsf	(60/8),(60)&7
   918                           	line	46
   919                           	
   920  0629                     l2886:	
   921                           ;ADC.c: 46: RC5=0;
   922  0629  1287               	bcf	(61/8),(61)&7
   923                           	line	47
   924                           	
   925  062A                     l2888:	
   926                           ;ADC.c: 47: RC6=1;
   927  062A  1707               	bsf	(62/8),(62)&7
   928                           	line	48
   929                           	
   930  062B                     l2890:	
   931                           ;ADC.c: 48: delay(10);
   932  062B  300A               	movlw	low(0Ah)
   933  062C  00F0               	movwf	(?_delay)
   934  062D  3000               	movlw	high(0Ah)
   935  062E  00F1               	movwf	((?_delay))+1
   936  062F  120A  118A  2693   	fcall	_delay
              120A  118A         
   937                           	line	49
   938                           	
   939  0634                     l2892:	
   940                           ;ADC.c: 49: RC6=0;
   941  0634  1283               	bcf	status, 5	;RP0=0, select bank0
   942  0635  1303               	bcf	status, 6	;RP1=0, select bank0
   943  0636  1307               	bcf	(62/8),(62)&7
   944                           	line	50
   945                           	
   946  0637                     l707:	
   947  0637  0008               	return
   948                           	opt stack 0
   949                           GLOBAL	__end_of_dat
   950  0638                     	__end_of_dat:
   951 ;; =============== function _dat ends ============
   952                           
   953                           	signat	_dat,4216
   954                           	global	_cmd
   955                           psect	text211,local,class=CODE,delta=2
   956                           global __ptext211
   957  060E                     __ptext211:
   958                           
   959 ;; *************** function _cmd *****************
   960 ;; Defined at:
   961 ;;		line 33 in file "F:\Avinashi lingam\PIC\ADC\ADC.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  a               1    wreg     unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  a               1    7[COMMON] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;		None               void
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   975 ;;      Params:         0       0       0       0       0
   976 ;;      Locals:         1       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0
   978 ;;      Totals:         1       0       0       0       0
   979 ;;Total ram usage:        1 bytes
   980 ;; Hardware stack levels used:    1
   981 ;; Hardware stack levels required when called:    1
   982 ;; This function calls:
   983 ;;		_delay
   984 ;; This function is called by:
   985 ;;		_main
   986 ;;		_lcd_int
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           psect	text211
   990                           	file	"F:\Avinashi lingam\PIC\ADC\ADC.c"
   991                           	line	33
   992                           	global	__size_of_cmd
   993  0015                     	__size_of_cmd	equ	__end_of_cmd-_cmd
   994                           	
   995  060E                     _cmd:	
   996                           	opt	stack 6
   997                           ; Regs used in _cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   998                           ;cmd@a stored from wreg
   999  060E  00F7               	movwf	(cmd@a)
  1000                           	line	34
  1001                           	
  1002  060F                     l2870:	
  1003                           ;ADC.c: 34: PORTD=a;
  1004  060F  0877               	movf	(cmd@a),w
  1005  0610  1283               	bcf	status, 5	;RP0=0, select bank0
  1006  0611  1303               	bcf	status, 6	;RP1=0, select bank0
  1007  0612  0088               	movwf	(8)	;volatile
  1008                           	line	35
  1009                           	
  1010  0613                     l2872:	
  1011                           ;ADC.c: 35: RC4=0;
  1012  0613  1207               	bcf	(60/8),(60)&7
  1013                           	line	36
  1014                           	
  1015  0614                     l2874:	
  1016                           ;ADC.c: 36: RC5=0;
  1017  0614  1287               	bcf	(61/8),(61)&7
  1018                           	line	37
  1019                           	
  1020  0615                     l2876:	
  1021                           ;ADC.c: 37: RC6=1;
  1022  0615  1707               	bsf	(62/8),(62)&7
  1023                           	line	38
  1024                           	
  1025  0616                     l2878:	
  1026                           ;ADC.c: 38: delay(10);
  1027  0616  300A               	movlw	low(0Ah)
  1028  0617  00F0               	movwf	(?_delay)
  1029  0618  3000               	movlw	high(0Ah)
  1030  0619  00F1               	movwf	((?_delay))+1
  1031  061A  120A  118A  2693   	fcall	_delay
              120A  118A         
  1032                           	line	39
  1033                           	
  1034  061F                     l2880:	
  1035                           ;ADC.c: 39: RC6=0;
  1036  061F  1283               	bcf	status, 5	;RP0=0, select bank0
  1037  0620  1303               	bcf	status, 6	;RP1=0, select bank0
  1038  0621  1307               	bcf	(62/8),(62)&7
  1039                           	line	40
  1040                           	
  1041  0622                     l704:	
  1042  0622  0008               	return
  1043                           	opt stack 0
  1044                           GLOBAL	__end_of_cmd
  1045  0623                     	__end_of_cmd:
  1046 ;; =============== function _cmd ends ============
  1047                           
  1048                           	signat	_cmd,4216
  1049                           	global	___lwmod
  1050                           psect	text212,local,class=CODE,delta=2
  1051                           global __ptext212
  1052  06D1                     __ptext212:
  1053                           
  1054 ;; *************** function ___lwmod *****************
  1055 ;; Defined at:
  1056 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;  divisor         2    8[COMMON] unsigned int 
  1059 ;;  dividend        2   10[COMMON] unsigned int 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;  counter         1   13[COMMON] unsigned char 
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  2    8[COMMON] unsigned int 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         4       0       0       0       0
  1072 ;;      Locals:         1       0       0       0       0
  1073 ;;      Temps:          1       0       0       0       0
  1074 ;;      Totals:         6       0       0       0       0
  1075 ;;Total ram usage:        6 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_adc
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           psect	text212
  1084                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  1085                           	line	5
  1086                           	global	__size_of___lwmod
  1087  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1088                           	
  1089  06D1                     ___lwmod:	
  1090                           	opt	stack 6
  1091                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1092                           	line	8
  1093                           	
  1094  06D1                     l2848:	
  1095  06D1  0879               	movf	(___lwmod@divisor+1),w
  1096  06D2  0478               	iorwf	(___lwmod@divisor),w
  1097  06D3  1903               	skipnz
  1098  06D4  2ED6               	goto	u2371
  1099  06D5  2ED7               	goto	u2370
  1100  06D6                     u2371:
  1101  06D6  2F0D               	goto	l2866
  1102  06D7                     u2370:
  1103                           	line	9
  1104                           	
  1105  06D7                     l2850:	
  1106  06D7  01FD               	clrf	(___lwmod@counter)
  1107  06D8  1403               	bsf	status,0
  1108  06D9  0DFD               	rlf	(___lwmod@counter),f
  1109                           	line	10
  1110  06DA  2EE7               	goto	l2856
  1111                           	
  1112  06DB                     l1428:	
  1113                           	line	11
  1114                           	
  1115  06DB                     l2852:	
  1116  06DB  3001               	movlw	01h
  1117                           	
  1118  06DC                     u2385:
  1119  06DC  1003               	clrc
  1120  06DD  0DF8               	rlf	(___lwmod@divisor),f
  1121  06DE  0DF9               	rlf	(___lwmod@divisor+1),f
  1122  06DF  3EFF               	addlw	-1
  1123  06E0  1D03               	skipz
  1124  06E1  2EDC               	goto	u2385
  1125                           	line	12
  1126                           	
  1127  06E2                     l2854:	
  1128  06E2  3001               	movlw	(01h)
  1129  06E3  00FC               	movwf	(??___lwmod+0)+0
  1130  06E4  087C               	movf	(??___lwmod+0)+0,w
  1131  06E5  07FD               	addwf	(___lwmod@counter),f
  1132  06E6  2EE7               	goto	l2856
  1133                           	line	13
  1134                           	
  1135  06E7                     l1427:	
  1136                           	line	10
  1137                           	
  1138  06E7                     l2856:	
  1139  06E7  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
  1140  06E8  2EEA               	goto	u2391
  1141  06E9  2EEB               	goto	u2390
  1142  06EA                     u2391:
  1143  06EA  2EDB               	goto	l2852
  1144  06EB                     u2390:
  1145  06EB  2EED               	goto	l2858
  1146                           	
  1147  06EC                     l1429:	
  1148  06EC  2EED               	goto	l2858
  1149                           	line	14
  1150                           	
  1151  06ED                     l1430:	
  1152                           	line	15
  1153                           	
  1154  06ED                     l2858:	
  1155  06ED  0879               	movf	(___lwmod@divisor+1),w
  1156  06EE  027B               	subwf	(___lwmod@dividend+1),w
  1157  06EF  1D03               	skipz
  1158  06F0  2EF3               	goto	u2405
  1159  06F1  0878               	movf	(___lwmod@divisor),w
  1160  06F2  027A               	subwf	(___lwmod@dividend),w
  1161  06F3                     u2405:
  1162  06F3  1C03               	skipc
  1163  06F4  2EF6               	goto	u2401
  1164  06F5  2EF7               	goto	u2400
  1165  06F6                     u2401:
  1166  06F6  2EFE               	goto	l2862
  1167  06F7                     u2400:
  1168                           	line	16
  1169                           	
  1170  06F7                     l2860:	
  1171  06F7  0878               	movf	(___lwmod@divisor),w
  1172  06F8  02FA               	subwf	(___lwmod@dividend),f
  1173  06F9  0879               	movf	(___lwmod@divisor+1),w
  1174  06FA  1C03               	skipc
  1175  06FB  03FB               	decf	(___lwmod@dividend+1),f
  1176  06FC  02FB               	subwf	(___lwmod@dividend+1),f
  1177  06FD  2EFE               	goto	l2862
  1178                           	
  1179  06FE                     l1431:	
  1180                           	line	17
  1181                           	
  1182  06FE                     l2862:	
  1183  06FE  3001               	movlw	01h
  1184                           	
  1185  06FF                     u2415:
  1186  06FF  1003               	clrc
  1187  0700  0CF9               	rrf	(___lwmod@divisor+1),f
  1188  0701  0CF8               	rrf	(___lwmod@divisor),f
  1189  0702  3EFF               	addlw	-1
  1190  0703  1D03               	skipz
  1191  0704  2EFF               	goto	u2415
  1192                           	line	18
  1193                           	
  1194  0705                     l2864:	
  1195  0705  3001               	movlw	low(01h)
  1196  0706  02FD               	subwf	(___lwmod@counter),f
  1197  0707  1D03               	btfss	status,2
  1198  0708  2F0A               	goto	u2421
  1199  0709  2F0B               	goto	u2420
  1200  070A                     u2421:
  1201  070A  2EED               	goto	l2858
  1202  070B                     u2420:
  1203  070B  2F0D               	goto	l2866
  1204                           	
  1205  070C                     l1432:	
  1206  070C  2F0D               	goto	l2866
  1207                           	line	19
  1208                           	
  1209  070D                     l1426:	
  1210                           	line	20
  1211                           	
  1212  070D                     l2866:	
  1213  070D  087B               	movf	(___lwmod@dividend+1),w
  1214  070E  01F9               	clrf	(?___lwmod+1)
  1215  070F  07F9               	addwf	(?___lwmod+1)
  1216  0710  087A               	movf	(___lwmod@dividend),w
  1217  0711  01F8               	clrf	(?___lwmod)
  1218  0712  07F8               	addwf	(?___lwmod)
  1219                           
  1220  0713  2F14               	goto	l1433
  1221                           	
  1222  0714                     l2868:	
  1223                           	line	21
  1224                           	
  1225  0714                     l1433:	
  1226  0714  0008               	return
  1227                           	opt stack 0
  1228                           GLOBAL	__end_of___lwmod
  1229  0715                     	__end_of___lwmod:
  1230 ;; =============== function ___lwmod ends ============
  1231                           
  1232                           	signat	___lwmod,8314
  1233                           	global	___lwdiv
  1234                           psect	text213,local,class=CODE,delta=2
  1235                           global __ptext213
  1236  0715                     __ptext213:
  1237                           
  1238 ;; *************** function ___lwdiv *****************
  1239 ;; Defined at:
  1240 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  divisor         2    0[COMMON] unsigned int 
  1243 ;;  dividend        2    2[COMMON] unsigned int 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  quotient        2    5[COMMON] unsigned int 
  1246 ;;  counter         1    7[COMMON] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  2    0[COMMON] unsigned int 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         4       0       0       0       0
  1257 ;;      Locals:         3       0       0       0       0
  1258 ;;      Temps:          1       0       0       0       0
  1259 ;;      Totals:         8       0       0       0       0
  1260 ;;Total ram usage:        8 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_adc
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           psect	text213
  1269                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  1270                           	line	5
  1271                           	global	__size_of___lwdiv
  1272  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1273                           	
  1274  0715                     ___lwdiv:	
  1275                           	opt	stack 6
  1276                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1277                           	line	9
  1278                           	
  1279  0715                     l2822:	
  1280  0715  01F5               	clrf	(___lwdiv@quotient)
  1281  0716  01F6               	clrf	(___lwdiv@quotient+1)
  1282                           	line	10
  1283                           	
  1284  0717                     l2824:	
  1285  0717  0871               	movf	(___lwdiv@divisor+1),w
  1286  0718  0470               	iorwf	(___lwdiv@divisor),w
  1287  0719  1903               	skipnz
  1288  071A  2F1C               	goto	u2301
  1289  071B  2F1D               	goto	u2300
  1290  071C                     u2301:
  1291  071C  2F5B               	goto	l2844
  1292  071D                     u2300:
  1293                           	line	11
  1294                           	
  1295  071D                     l2826:	
  1296  071D  01F7               	clrf	(___lwdiv@counter)
  1297  071E  1403               	bsf	status,0
  1298  071F  0DF7               	rlf	(___lwdiv@counter),f
  1299                           	line	12
  1300  0720  2F2D               	goto	l2832
  1301                           	
  1302  0721                     l1418:	
  1303                           	line	13
  1304                           	
  1305  0721                     l2828:	
  1306  0721  3001               	movlw	01h
  1307                           	
  1308  0722                     u2315:
  1309  0722  1003               	clrc
  1310  0723  0DF0               	rlf	(___lwdiv@divisor),f
  1311  0724  0DF1               	rlf	(___lwdiv@divisor+1),f
  1312  0725  3EFF               	addlw	-1
  1313  0726  1D03               	skipz
  1314  0727  2F22               	goto	u2315
  1315                           	line	14
  1316                           	
  1317  0728                     l2830:	
  1318  0728  3001               	movlw	(01h)
  1319  0729  00F4               	movwf	(??___lwdiv+0)+0
  1320  072A  0874               	movf	(??___lwdiv+0)+0,w
  1321  072B  07F7               	addwf	(___lwdiv@counter),f
  1322  072C  2F2D               	goto	l2832
  1323                           	line	15
  1324                           	
  1325  072D                     l1417:	
  1326                           	line	12
  1327                           	
  1328  072D                     l2832:	
  1329  072D  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  1330  072E  2F30               	goto	u2321
  1331  072F  2F31               	goto	u2320
  1332  0730                     u2321:
  1333  0730  2F21               	goto	l2828
  1334  0731                     u2320:
  1335  0731  2F33               	goto	l2834
  1336                           	
  1337  0732                     l1419:	
  1338  0732  2F33               	goto	l2834
  1339                           	line	16
  1340                           	
  1341  0733                     l1420:	
  1342                           	line	17
  1343                           	
  1344  0733                     l2834:	
  1345  0733  3001               	movlw	01h
  1346                           	
  1347  0734                     u2335:
  1348  0734  1003               	clrc
  1349  0735  0DF5               	rlf	(___lwdiv@quotient),f
  1350  0736  0DF6               	rlf	(___lwdiv@quotient+1),f
  1351  0737  3EFF               	addlw	-1
  1352  0738  1D03               	skipz
  1353  0739  2F34               	goto	u2335
  1354                           	line	18
  1355  073A  0871               	movf	(___lwdiv@divisor+1),w
  1356  073B  0273               	subwf	(___lwdiv@dividend+1),w
  1357  073C  1D03               	skipz
  1358  073D  2F40               	goto	u2345
  1359  073E  0870               	movf	(___lwdiv@divisor),w
  1360  073F  0272               	subwf	(___lwdiv@dividend),w
  1361  0740                     u2345:
  1362  0740  1C03               	skipc
  1363  0741  2F43               	goto	u2341
  1364  0742  2F44               	goto	u2340
  1365  0743                     u2341:
  1366  0743  2F4C               	goto	l2840
  1367  0744                     u2340:
  1368                           	line	19
  1369                           	
  1370  0744                     l2836:	
  1371  0744  0870               	movf	(___lwdiv@divisor),w
  1372  0745  02F2               	subwf	(___lwdiv@dividend),f
  1373  0746  0871               	movf	(___lwdiv@divisor+1),w
  1374  0747  1C03               	skipc
  1375  0748  03F3               	decf	(___lwdiv@dividend+1),f
  1376  0749  02F3               	subwf	(___lwdiv@dividend+1),f
  1377                           	line	20
  1378                           	
  1379  074A                     l2838:	
  1380  074A  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  1381  074B  2F4C               	goto	l2840
  1382                           	line	21
  1383                           	
  1384  074C                     l1421:	
  1385                           	line	22
  1386                           	
  1387  074C                     l2840:	
  1388  074C  3001               	movlw	01h
  1389                           	
  1390  074D                     u2355:
  1391  074D  1003               	clrc
  1392  074E  0CF1               	rrf	(___lwdiv@divisor+1),f
  1393  074F  0CF0               	rrf	(___lwdiv@divisor),f
  1394  0750  3EFF               	addlw	-1
  1395  0751  1D03               	skipz
  1396  0752  2F4D               	goto	u2355
  1397                           	line	23
  1398                           	
  1399  0753                     l2842:	
  1400  0753  3001               	movlw	low(01h)
  1401  0754  02F7               	subwf	(___lwdiv@counter),f
  1402  0755  1D03               	btfss	status,2
  1403  0756  2F58               	goto	u2361
  1404  0757  2F59               	goto	u2360
  1405  0758                     u2361:
  1406  0758  2F33               	goto	l2834
  1407  0759                     u2360:
  1408  0759  2F5B               	goto	l2844
  1409                           	
  1410  075A                     l1422:	
  1411  075A  2F5B               	goto	l2844
  1412                           	line	24
  1413                           	
  1414  075B                     l1416:	
  1415                           	line	25
  1416                           	
  1417  075B                     l2844:	
  1418  075B  0876               	movf	(___lwdiv@quotient+1),w
  1419  075C  01F1               	clrf	(?___lwdiv+1)
  1420  075D  07F1               	addwf	(?___lwdiv+1)
  1421  075E  0875               	movf	(___lwdiv@quotient),w
  1422  075F  01F0               	clrf	(?___lwdiv)
  1423  0760  07F0               	addwf	(?___lwdiv)
  1424                           
  1425  0761  2F62               	goto	l1423
  1426                           	
  1427  0762                     l2846:	
  1428                           	line	26
  1429                           	
  1430  0762                     l1423:	
  1431  0762  0008               	return
  1432                           	opt stack 0
  1433                           GLOBAL	__end_of___lwdiv
  1434  0763                     	__end_of___lwdiv:
  1435 ;; =============== function ___lwdiv ends ============
  1436                           
  1437                           	signat	___lwdiv,8314
  1438                           	global	_delay
  1439                           psect	text214,local,class=CODE,delta=2
  1440                           global __ptext214
  1441  0693                     __ptext214:
  1442                           
  1443 ;; *************** function _delay *****************
  1444 ;; Defined at:
  1445 ;;		line 72 in file "F:\Avinashi lingam\PIC\ADC\ADC.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  L               2    0[COMMON] int 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  j               2    5[COMMON] int 
  1450 ;;  i               2    3[COMMON] int 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;		None               void
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, btemp+1
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         2       0       0       0       0
  1461 ;;      Locals:         4       0       0       0       0
  1462 ;;      Temps:          1       0       0       0       0
  1463 ;;      Totals:         7       0       0       0       0
  1464 ;;Total ram usage:        7 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_cmd
  1470 ;;		_dat
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           psect	text214
  1474                           	file	"F:\Avinashi lingam\PIC\ADC\ADC.c"
  1475                           	line	72
  1476                           	global	__size_of_delay
  1477  003E                     	__size_of_delay	equ	__end_of_delay-_delay
  1478                           	
  1479  0693                     _delay:	
  1480                           	opt	stack 5
  1481                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1482                           	line	74
  1483                           	
  1484  0693                     l2808:	
  1485                           ;ADC.c: 73: int i,j;
  1486                           ;ADC.c: 74: for(i=0;i<L;i++)
  1487  0693  01F3               	clrf	(delay@i)
  1488  0694  01F4               	clrf	(delay@i+1)
  1489  0695  2EC1               	goto	l722
  1490                           	line	75
  1491                           	
  1492  0696                     l723:	
  1493                           	line	76
  1494                           	
  1495  0696                     l2810:	
  1496                           ;ADC.c: 75: {
  1497                           ;ADC.c: 76: for(j=0;j<250;j++)
  1498  0696  01F5               	clrf	(delay@j)
  1499  0697  01F6               	clrf	(delay@j+1)
  1500                           	
  1501  0698                     l2812:	
  1502  0698  0876               	movf	(delay@j+1),w
  1503  0699  3A80               	xorlw	80h
  1504  069A  00FF               	movwf	btemp+1
  1505  069B  3080               	movlw	(high(0FAh))^80h
  1506  069C  027F               	subwf	btemp+1,w
  1507  069D  1D03               	skipz
  1508  069E  2EA1               	goto	u2275
  1509  069F  30FA               	movlw	low(0FAh)
  1510  06A0  0275               	subwf	(delay@j),w
  1511  06A1                     u2275:
  1512                           
  1513  06A1  1C03               	skipc
  1514  06A2  2EA4               	goto	u2271
  1515  06A3  2EA5               	goto	u2270
  1516  06A4                     u2271:
  1517  06A4  2EA7               	goto	l2816
  1518  06A5                     u2270:
  1519  06A5  2EBB               	goto	l2820
  1520                           	
  1521  06A6                     l2814:	
  1522  06A6  2EBB               	goto	l2820
  1523                           	line	77
  1524                           	
  1525  06A7                     l724:	
  1526                           	line	76
  1527                           	
  1528  06A7                     l2816:	
  1529                           ;ADC.c: 77: {
  1530  06A7  3001               	movlw	low(01h)
  1531  06A8  07F5               	addwf	(delay@j),f
  1532  06A9  1803               	skipnc
  1533  06AA  0AF6               	incf	(delay@j+1),f
  1534  06AB  3000               	movlw	high(01h)
  1535  06AC  07F6               	addwf	(delay@j+1),f
  1536                           	
  1537  06AD                     l2818:	
  1538  06AD  0876               	movf	(delay@j+1),w
  1539  06AE  3A80               	xorlw	80h
  1540  06AF  00FF               	movwf	btemp+1
  1541  06B0  3080               	movlw	(high(0FAh))^80h
  1542  06B1  027F               	subwf	btemp+1,w
  1543  06B2  1D03               	skipz
  1544  06B3  2EB6               	goto	u2285
  1545  06B4  30FA               	movlw	low(0FAh)
  1546  06B5  0275               	subwf	(delay@j),w
  1547  06B6                     u2285:
  1548                           
  1549  06B6  1C03               	skipc
  1550  06B7  2EB9               	goto	u2281
  1551  06B8  2EBA               	goto	u2280
  1552  06B9                     u2281:
  1553  06B9  2EA7               	goto	l2816
  1554  06BA                     u2280:
  1555  06BA  2EBB               	goto	l2820
  1556                           	
  1557  06BB                     l725:	
  1558                           	line	74
  1559                           	
  1560  06BB                     l2820:	
  1561  06BB  3001               	movlw	low(01h)
  1562  06BC  07F3               	addwf	(delay@i),f
  1563  06BD  1803               	skipnc
  1564  06BE  0AF4               	incf	(delay@i+1),f
  1565  06BF  3000               	movlw	high(01h)
  1566  06C0  07F4               	addwf	(delay@i+1),f
  1567                           	
  1568  06C1                     l722:	
  1569  06C1  0874               	movf	(delay@i+1),w
  1570  06C2  3A80               	xorlw	80h
  1571  06C3  00F2               	movwf	(??_delay+0)+0
  1572  06C4  0871               	movf	(delay@L+1),w
  1573  06C5  3A80               	xorlw	80h
  1574  06C6  0272               	subwf	(??_delay+0)+0,w
  1575  06C7  1D03               	skipz
  1576  06C8  2ECB               	goto	u2295
  1577  06C9  0870               	movf	(delay@L),w
  1578  06CA  0273               	subwf	(delay@i),w
  1579  06CB                     u2295:
  1580                           
  1581  06CB  1C03               	skipc
  1582  06CC  2ECE               	goto	u2291
  1583  06CD  2ECF               	goto	u2290
  1584  06CE                     u2291:
  1585  06CE  2E96               	goto	l2810
  1586  06CF                     u2290:
  1587  06CF  2ED0               	goto	l727
  1588                           	
  1589  06D0                     l726:	
  1590                           	line	80
  1591                           	
  1592  06D0                     l727:	
  1593  06D0  0008               	return
  1594                           	opt stack 0
  1595                           GLOBAL	__end_of_delay
  1596  06D1                     	__end_of_delay:
  1597 ;; =============== function _delay ends ============
  1598                           
  1599                           	signat	_delay,4216
  1600                           psect	text215,local,class=CODE,delta=2
  1601                           global __ptext215
  1602  0000                     __ptext215:
  1603                           	global	btemp
  1604  007E                     	btemp set 07Eh
  1605                           
  1606                           	DABS	1,126,2	;btemp
  1607                           	global	wtemp0
  1608  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon Dec 09 19:00:17 2019

                   pc 0002                    _RD 0C60                    _WR 0C61                    fsr 0004  
                 l701 0650                   l710 0664                   l711 0653                   l704 0622  
                 l712 0671                   l713 0671                   l722 06C1                   l723 0696  
                 l707 0637                   l724 06A7                   l716 076C                   l725 06BB  
                 l717 076C                   l726 06D0                   l718 0771                   l727 06D0  
                 l719 07FF                   l695 0683                   l696 068F                   l697 0690  
                 l698 0690                   _GIE 005F                   _RC4 003C                   _RC5 003D  
                 _RC6 003E                   _adc 0763                   _dat 0623                   _cmd 060E  
                 fsr0 0004                  ?_adc 0070                  l1420 0733                  l1421 074C  
                l1422 075A                  l1430 06ED                  ?_dat 0070                  l1423 0762  
                l1431 06FE                  l1416 075B                  l1432 070C                  l1417 072D  
                l1433 0714                  l1418 0721                  l1426 070D                  ?_cmd 0070  
                l1419 0732                  l1427 06E7                  l1428 06DB                  l1429 06EC  
                l2810 0696                  l2820 06BB                  l2812 0698                  l2900 065F  
                l2814 06A6                  l2830 0728                  l2822 0715                  l2902 0664  
                l2910 0799                  l2816 06A7                  l2808 0693                  l2840 074C  
                l2832 072D                  l2824 0717                  l2912 07C0                  l2904 0763  
                l2920 0677                  l2818 06AD                  l2842 0753                  l2834 0733  
                l2826 071D                  l2850 06D7                  l2914 07E7                  l2906 0771  
                l2922 067C                  l2836 0744                  l2828 0721                  l2844 075B  
                l2860 06F7                  l2852 06DB                  l2908 0783                  l2924 0683  
                l2916 0672                  l2846 0762                  l2838 074A                  l2862 06FE  
                l2854 06E2                  l2870 060F                  l2926 0689                  l2918 0676  
                l2864 0705                  l2856 06E7                  l2848 06D1                  l2880 061F  
                l2872 0613                  l2858 06ED                  l2866 070D                  l2874 0614  
                l2890 062B                  l2882 0624                  l2868 0714                  l2876 0615  
                l2892 0634                  l2884 0628                  l2878 0616                  l2886 0629  
                l2894 0638                  l2888 062A                  l2896 0652                  l2898 0653  
                STR_1 0009                  u2300 071D                  u2301 071C                  u2320 0731  
                u2400 06F7                  u2321 0730                  u2401 06F6                  u2315 0722  
                u2340 0744                  u2420 070B                  u2341 0743                  u2421 070A  
                u2405 06F3                  u2270 06A5                  u2430 0670                  u2271 06A4  
                u2335 0734                  u2415 06FF                  u2431 066F                  u2280 06BA  
                u2360 0759                  u2440 0770                  u2281 06B9                  u2361 0758  
                u2345 0740                  u2441 076F                  u2290 06CF                  u2370 06D7  
                u2291 06CE                  u2275 06A1                  u2355 074D                  u2371 06D6  
                u2285 06B6                  u2390 06EB                  u2295 06CB                  u2391 06EA  
                u2385 06DC                  _WREN 0C62                  dat@b 0077                  cmd@a 0077  
                _main 0672                  _show 0651                  btemp 007E                  start 0000  
               ??_adc 0020                 ??_dat 0077                 ??_cmd 0077                 ?_main 0070  
               _EEADR 010D                 ?_show 0070                 _CARRY 0018       __end_of___lwdiv 0763  
     __end_of___lwmod 0715                 _PORTD 0008                 _TRISC 0087                 _TRISD 0088  
     __end_of_lcd_int 0651                 _delay 0693                 pclath 000A                 show@s 0079  
               status 0003                 wtemp0 007E          __end_of_main 0693          __end_of_show 0672  
              ??_main 007E                ??_show 0078                ?_delay 0070                _ADCON0 001F  
              _ADCON1 009F                _ADRESH 001E                _ADRESL 009E                _EEDATA 010C  
              _EECON1 018C                _EECON2 018D                _TRISA0 0428             ??___lwdiv 0074  
           ??___lwmod 007C                delay@L 0070                delay@i 0073                delay@j 0075  
           ??_lcd_int 0078        __pcstackCOMMON 0070         __end_of_delay 06D1               ??_delay 0072  
          __pmaintext 0672               ___lwdiv 0715               ___lwmod 06D1               _lcd_int 0638  
        __size_of_adc 009D          __size_of_dat 0015          __size_of_cmd 0015  end_of_initialization 060A  
 start_initialization 060A           __end_of_adc 0800           __end_of_dat 0638           __end_of_cmd 0623  
           adc@adcval 0022         __pcstackBANK0 0020      ___lwdiv@dividend 0072             __ptext210 0623  
           __ptext211 060E             __ptext212 06D1             __ptext213 0715             __ptext214 0693  
           __ptext206 0000             __ptext215 0000             __ptext207 0763             __ptext208 0651  
           __ptext209 0638              ?___lwdiv 0070              ?___lwmod 0078             __pstrings 0003  
            ?_lcd_int 0070      ___lwdiv@quotient 0075        __size_of_delay 003E              _GO_nDONE 00FA  
         __stringbase 0008      __size_of___lwdiv 004E      __size_of___lwmod 0044      __size_of_lcd_int 0019  
     ___lwdiv@divisor 0070       ___lwdiv@counter 0077         __size_of_main 0021         __size_of_show 0021  
    ___lwmod@dividend 007A             stringcode 0003       ___lwmod@divisor 0078       ___lwmod@counter 007D  
            stringdir 0003              stringtab 0003  
