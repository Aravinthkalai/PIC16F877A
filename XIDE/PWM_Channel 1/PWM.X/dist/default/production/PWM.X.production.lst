

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Nov 26 23:20:00 2022

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.45
    23                           ; Generated 16/11/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116                           
   117                           	psect	idataBANK0
   118  0241                     __pidataBANK0:	
   119                           
   120                           ;initializer for _PWM_freq
   121  0241  3488               	retlw	136
   122  0242  3413               	retlw	19
   123  0243  3400               	retlw	0
   124  0244  3400               	retlw	0
   125  0015                     _CCPR1L	set	21
   126  00BC                     _CCP1Y	set	188
   127  00BD                     _CCP1X	set	189
   128  0092                     _TMR2ON	set	146
   129  0091                     _T2CKPS1	set	145
   130  0090                     _T2CKPS0	set	144
   131  00BA                     _CCP1M2	set	186
   132  00BB                     _CCP1M3	set	187
   133  0087                     _TRISC	set	135
   134  0092                     _PR2	set	146
   135  043A                     _TRISC2	set	1082
   136                           
   137                           	psect	cinit
   138  07E6                     start_initialization:	
   139                           ; #config settings
   140                           
   141  07E6                     __initialization:	
   142                           
   143                           ; Initialize objects allocated to BANK0
   144  07E6  120A  118A  2241  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   145  07EB  00E1               	movwf	__pdataBANK0& (0+127)
   146  07EC  120A  118A  2242  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   147  07F1  00E2               	movwf	(__pdataBANK0+1)& (0+127)
   148  07F2  120A  118A  2243  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   149  07F7  00E3               	movwf	(__pdataBANK0+2)& (0+127)
   150  07F8  120A  118A  2244   	fcall	__pidataBANK0+3	;fetch initializer
   151  07FB  00E4               	movwf	(__pdataBANK0+3)& (0+127)
   152  07FC                     end_of_initialization:	
   153                           ;End of C runtime variable initialization code
   154                           
   155  07FC                     __end_of__initialization:	
   156  07FC  0183               	clrf	3
   157  07FD  120A  118A  2A59   	ljmp	_main	;jump to C main() function
   158                           
   159                           	psect	dataBANK0
   160  0061                     __pdataBANK0:	
   161  0061                     _PWM_freq:	
   162  0061                     	ds	4
   163                           
   164                           	psect	cstackCOMMON
   165  0070                     __pcstackCOMMON:	
   166  0070                     ?_PWM_Initialize:	
   167  0070                     ?_main:	
   168                           ; 1 bytes @ 0x0
   169                           
   170  0070                     ?___ftpack:	
   171                           ; 1 bytes @ 0x0
   172                           
   173  0070                     ?___aldiv:	
   174                           ; 3 bytes @ 0x0
   175                           
   176  0070                     ___ftpack@arg:	
   177                           ; 4 bytes @ 0x0
   178                           
   179  0070                     ___aldiv@divisor:	
   180                           ; 3 bytes @ 0x0
   181                           
   182                           
   183                           ; 4 bytes @ 0x0
   184  0070                     	ds	3
   185  0073                     ___ftpack@exp:	
   186                           
   187                           ; 1 bytes @ 0x3
   188  0073                     	ds	1
   189  0074                     ___ftpack@sign:	
   190  0074                     ___aldiv@dividend:	
   191                           ; 1 bytes @ 0x4
   192                           
   193                           
   194                           ; 4 bytes @ 0x4
   195  0074                     	ds	1
   196  0075                     ??___ftpack:	
   197                           
   198                           ; 1 bytes @ 0x5
   199  0075                     	ds	3
   200  0078                     ??___aldiv:	
   201  0078                     ?___lwtoft:	
   202                           ; 1 bytes @ 0x8
   203                           
   204  0078                     ___lwtoft@c:	
   205                           ; 3 bytes @ 0x8
   206                           
   207                           
   208                           ; 2 bytes @ 0x8
   209  0078                     	ds	1
   210  0079                     ??_PWM_Initialize:	
   211  0079                     ??___altoft:	
   212                           ; 1 bytes @ 0x9
   213                           
   214                           
   215                           ; 1 bytes @ 0x9
   216  0079                     	ds	2
   217  007B                     ??___lwtoft:	
   218  007B                     ___altoft@exp:	
   219                           ; 1 bytes @ 0xB
   220                           
   221                           
   222                           ; 1 bytes @ 0xB
   223  007B                     	ds	1
   224  007C                     ___altoft@sign:	
   225                           
   226                           ; 1 bytes @ 0xC
   227  007C                     	ds	1
   228  007D                     ??_main:	
   229                           
   230                           	psect	cstackBANK0
   231  0020                     __pcstackBANK0:	
   232                           ; 1 bytes @ 0xD
   233                           
   234  0020                     ?___ftdiv:	
   235  0020                     ___aldiv@counter:	
   236                           ; 3 bytes @ 0x0
   237                           
   238  0020                     ___ftdiv@f2:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 3 bytes @ 0x0
   243  0020                     	ds	1
   244  0021                     ___aldiv@sign:	
   245                           
   246                           ; 1 bytes @ 0x1
   247  0021                     	ds	1
   248  0022                     ___aldiv@quotient:	
   249                           
   250                           ; 4 bytes @ 0x2
   251  0022                     	ds	1
   252  0023                     ___ftdiv@f1:	
   253                           
   254                           ; 3 bytes @ 0x3
   255  0023                     	ds	3
   256  0026                     ??___ftdiv:	
   257  0026                     ?___altoft:	
   258                           ; 1 bytes @ 0x6
   259                           
   260  0026                     ___altoft@c:	
   261                           ; 3 bytes @ 0x6
   262                           
   263                           
   264                           ; 4 bytes @ 0x6
   265  0026                     	ds	4
   266  002A                     ___ftdiv@cntr:	
   267                           
   268                           ; 1 bytes @ 0xA
   269  002A                     	ds	1
   270  002B                     ___ftdiv@f3:	
   271                           
   272                           ; 3 bytes @ 0xB
   273  002B                     	ds	3
   274  002E                     ___ftdiv@exp:	
   275                           
   276                           ; 1 bytes @ 0xE
   277  002E                     	ds	1
   278  002F                     ___ftdiv@sign:	
   279                           
   280                           ; 1 bytes @ 0xF
   281  002F                     	ds	1
   282  0030                     ?___ftmul:	
   283  0030                     ___ftmul@f1:	
   284                           ; 3 bytes @ 0x10
   285                           
   286                           
   287                           ; 3 bytes @ 0x10
   288  0030                     	ds	3
   289  0033                     ___ftmul@f2:	
   290                           
   291                           ; 3 bytes @ 0x13
   292  0033                     	ds	3
   293  0036                     ??___ftmul:	
   294                           
   295                           ; 1 bytes @ 0x16
   296  0036                     	ds	4
   297  003A                     ___ftmul@exp:	
   298                           
   299                           ; 1 bytes @ 0x1A
   300  003A                     	ds	1
   301  003B                     ___ftmul@f3_as_product:	
   302                           
   303                           ; 3 bytes @ 0x1B
   304  003B                     	ds	3
   305  003E                     ___ftmul@cntr:	
   306                           
   307                           ; 1 bytes @ 0x1E
   308  003E                     	ds	1
   309  003F                     ___ftmul@sign:	
   310                           
   311                           ; 1 bytes @ 0x1F
   312  003F                     	ds	1
   313  0040                     ?___ftadd:	
   314  0040                     ___ftadd@f1:	
   315                           ; 3 bytes @ 0x20
   316                           
   317                           
   318                           ; 3 bytes @ 0x20
   319  0040                     	ds	3
   320  0043                     ___ftadd@f2:	
   321                           
   322                           ; 3 bytes @ 0x23
   323  0043                     	ds	3
   324  0046                     ??___ftadd:	
   325                           
   326                           ; 1 bytes @ 0x26
   327  0046                     	ds	4
   328  004A                     ___ftadd@sign:	
   329                           
   330                           ; 1 bytes @ 0x2A
   331  004A                     	ds	1
   332  004B                     ___ftadd@exp2:	
   333                           
   334                           ; 1 bytes @ 0x2B
   335  004B                     	ds	1
   336  004C                     ___ftadd@exp1:	
   337                           
   338                           ; 1 bytes @ 0x2C
   339  004C                     	ds	1
   340  004D                     ?___fttol:	
   341  004D                     ___fttol@f1:	
   342                           ; 4 bytes @ 0x2D
   343                           
   344                           
   345                           ; 3 bytes @ 0x2D
   346  004D                     	ds	4
   347  0051                     ??___fttol:	
   348                           
   349                           ; 1 bytes @ 0x31
   350  0051                     	ds	4
   351  0055                     ___fttol@sign1:	
   352                           
   353                           ; 1 bytes @ 0x35
   354  0055                     	ds	1
   355  0056                     ___fttol@lval:	
   356                           
   357                           ; 4 bytes @ 0x36
   358  0056                     	ds	4
   359  005A                     ___fttol@exp1:	
   360                           
   361                           ; 1 bytes @ 0x3A
   362  005A                     	ds	1
   363  005B                     ?_PWM_Duty:	
   364  005B                     PWM_Duty@duty:	
   365                           ; 1 bytes @ 0x3B
   366                           
   367                           
   368                           ; 2 bytes @ 0x3B
   369  005B                     	ds	2
   370  005D                     ??_PWM_Duty:	
   371                           
   372                           ; 1 bytes @ 0x3D
   373  005D                     	ds	4
   374                           
   375                           	psect	maintext
   376  0259                     __pmaintext:	
   377 ;;
   378 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   379 ;;
   380 ;; *************** function _main *****************
   381 ;; Defined at:
   382 ;;		line 37 in file "pwm.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;		None
   385 ;; Auto vars:     Size  Location     Type
   386 ;;		None
   387 ;; Return value:  Size  Location     Type
   388 ;;                  1    wreg      void 
   389 ;; Registers used:
   390 ;;		wreg, status,2, status,0, pclath, cstack
   391 ;; Tracked objects:
   392 ;;		On entry : B00/0
   393 ;;		On exit  : 0/0
   394 ;;		Unchanged: 0/0
   395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   396 ;;      Params:         0       0       0       0       0
   397 ;;      Locals:         0       0       0       0       0
   398 ;;      Temps:          0       0       0       0       0
   399 ;;      Totals:         0       0       0       0       0
   400 ;;Total ram usage:        0 bytes
   401 ;; Hardware stack levels required when called:    3
   402 ;; This function calls:
   403 ;;		_PWM_Duty
   404 ;;		_PWM_Initialize
   405 ;; This function is called by:
   406 ;;		Startup code after reset
   407 ;; This function uses a non-reentrant model
   408 ;;
   409                           
   410                           
   411                           ;psect for function _main
   412  0259                     _main:	
   413                           
   414                           ;pwm.c: 40: TRISC = 0x00;
   415                           
   416                           ;incstack = 0
   417                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   418  0259  1683               	bsf	3,5	;RP0=1, select bank1
   419  025A  1303               	bcf	3,6	;RP1=0, select bank1
   420  025B  0187               	clrf	7	;volatile
   421                           
   422                           ;pwm.c: 41: PWM_Initialize();
   423  025C  120A  118A  226D  120A  118A  	fcall	_PWM_Initialize
   424                           
   425                           ;pwm.c: 42: PWM_Duty(50);
   426  0261  3032               	movlw	50
   427  0262  1283               	bcf	3,5	;RP0=0, select bank0
   428  0263  1303               	bcf	3,6	;RP1=0, select bank0
   429  0264  00DB               	movwf	PWM_Duty@duty
   430  0265  3000               	movlw	0
   431  0266  00DC               	movwf	PWM_Duty@duty+1
   432  0267  120A  118A  2602  120A  118A  	fcall	_PWM_Duty
   433  026C                     l36:	
   434                           ;pwm.c: 43: while(1);
   435                           
   436  026C  2A6C               	goto	l36
   437  026D                     __end_of_main:	
   438                           
   439                           	psect	text1
   440  026D                     __ptext1:	
   441 ;; *************** function _PWM_Initialize *****************
   442 ;; Defined at:
   443 ;;		line 16 in file "pwm.c"
   444 ;; Parameters:    Size  Location     Type
   445 ;;		None
   446 ;; Auto vars:     Size  Location     Type
   447 ;;		None
   448 ;; Return value:  Size  Location     Type
   449 ;;                  1    wreg      void 
   450 ;; Registers used:
   451 ;;		wreg, status,2, status,0, pclath, cstack
   452 ;; Tracked objects:
   453 ;;		On entry : 0/0
   454 ;;		On exit  : 0/0
   455 ;;		Unchanged: 0/0
   456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   457 ;;      Params:         0       0       0       0       0
   458 ;;      Locals:         0       0       0       0       0
   459 ;;      Temps:          4       0       0       0       0
   460 ;;      Totals:         4       0       0       0       0
   461 ;;Total ram usage:        4 bytes
   462 ;; Hardware stack levels used:    1
   463 ;; Hardware stack levels required when called:    1
   464 ;; This function calls:
   465 ;;		___aldiv
   466 ;; This function is called by:
   467 ;;		_main
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           
   472                           ;psect for function _PWM_Initialize
   473  026D                     _PWM_Initialize:	
   474                           
   475                           ;pwm.c: 18: PR2 = (20000000/(PWM_freq*4*4)) - 1;
   476                           
   477                           ;incstack = 0
   478                           ; Regs used in _PWM_Initialize: [wreg+status,2+status,0+pclath+cstack]
   479  026D  1283               	bcf	3,5	;RP0=0, select bank0
   480  026E  1303               	bcf	3,6	;RP1=0, select bank0
   481  026F  0861               	movf	_PWM_freq,w
   482  0270  00F9               	movwf	??_PWM_Initialize
   483  0271  0862               	movf	_PWM_freq+1,w
   484  0272  00FA               	movwf	??_PWM_Initialize+1
   485  0273  0863               	movf	_PWM_freq+2,w
   486  0274  00FB               	movwf	??_PWM_Initialize+2
   487  0275  0864               	movf	_PWM_freq+3,w
   488  0276  00FC               	movwf	??_PWM_Initialize+3
   489  0277  3002               	movlw	2
   490  0278                     u1695:	
   491  0278  1003               	clrc
   492  0279  0DF9               	rlf	??_PWM_Initialize,f
   493  027A  0DFA               	rlf	??_PWM_Initialize+1,f
   494  027B  0DFB               	rlf	??_PWM_Initialize+2,f
   495  027C  0DFC               	rlf	??_PWM_Initialize+3,f
   496  027D  3EFF               	addlw	-1
   497  027E  1D03               	skipz
   498  027F  2A78               	goto	u1695
   499  0280  3002               	movlw	2
   500  0281                     u1705:	
   501  0281  1003               	clrc
   502  0282  0DF9               	rlf	??_PWM_Initialize,f
   503  0283  0DFA               	rlf	??_PWM_Initialize+1,f
   504  0284  0DFB               	rlf	??_PWM_Initialize+2,f
   505  0285  0DFC               	rlf	??_PWM_Initialize+3,f
   506  0286  3EFF               	addlw	-1
   507  0287  1D03               	skipz
   508  0288  2A81               	goto	u1705
   509  0289  087C               	movf	??_PWM_Initialize+3,w
   510  028A  00F3               	movwf	___aldiv@divisor+3
   511  028B  087B               	movf	??_PWM_Initialize+2,w
   512  028C  00F2               	movwf	___aldiv@divisor+2
   513  028D  087A               	movf	??_PWM_Initialize+1,w
   514  028E  00F1               	movwf	___aldiv@divisor+1
   515  028F  0879               	movf	??_PWM_Initialize,w
   516  0290  00F0               	movwf	___aldiv@divisor
   517  0291  3001               	movlw	1
   518  0292  00F7               	movwf	___aldiv@dividend+3
   519  0293  3031               	movlw	49
   520  0294  00F6               	movwf	___aldiv@dividend+2
   521  0295  302D               	movlw	45
   522  0296  00F5               	movwf	___aldiv@dividend+1
   523  0297  3000               	movlw	0
   524  0298  00F4               	movwf	___aldiv@dividend
   525  0299  120A  118A  23E8   	fcall	___aldiv
   526  029C  0870               	movf	?___aldiv,w
   527  029D  3EFF               	addlw	255
   528  029E  1683               	bsf	3,5	;RP0=1, select bank1
   529  029F  1303               	bcf	3,6	;RP1=0, select bank1
   530  02A0  0092               	movwf	18	;volatile
   531                           
   532                           ;pwm.c: 19: CCP1M3 = 1; CCP1M2 = 1;
   533  02A1  1283               	bcf	3,5	;RP0=0, select bank0
   534  02A2  1303               	bcf	3,6	;RP1=0, select bank0
   535  02A3  1597               	bsf	23,3	;volatile
   536  02A4  1517               	bsf	23,2	;volatile
   537                           
   538                           ;pwm.c: 20: T2CKPS0 = 1;T2CKPS1 = 0; TMR2ON = 1;
   539  02A5  1412               	bsf	18,0	;volatile
   540  02A6  1092               	bcf	18,1	;volatile
   541  02A7  1512               	bsf	18,2	;volatile
   542                           
   543                           ;pwm.c: 21: TRISC2 = 0;
   544  02A8  1683               	bsf	3,5	;RP0=1, select bank1
   545  02A9  1303               	bcf	3,6	;RP1=0, select bank1
   546  02AA  1107               	bcf	7,2	;volatile
   547  02AB  0008               	return
   548  02AC                     __end_of_PWM_Initialize:	
   549                           
   550                           	psect	text2
   551  0602                     __ptext2:	
   552 ;; *************** function _PWM_Duty *****************
   553 ;; Defined at:
   554 ;;		line 25 in file "pwm.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  duty            2   59[BANK0 ] unsigned int 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, pclath, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   568 ;;      Params:         0       2       0       0       0
   569 ;;      Locals:         0       0       0       0       0
   570 ;;      Temps:          0       4       0       0       0
   571 ;;      Totals:         0       6       0       0       0
   572 ;;Total ram usage:        6 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    2
   575 ;; This function calls:
   576 ;;		___aldiv
   577 ;;		___altoft
   578 ;;		___ftadd
   579 ;;		___ftdiv
   580 ;;		___ftmul
   581 ;;		___fttol
   582 ;;		___lwtoft
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _PWM_Duty
   590  0602                     _PWM_Duty:	
   591                           
   592                           ;pwm.c: 27: if(duty<100)
   593                           
   594                           ;incstack = 0
   595                           ; Regs used in _PWM_Duty: [wreg+status,2+status,0+pclath+cstack]
   596  0602  3000               	movlw	0
   597  0603  1283               	bcf	3,5	;RP0=0, select bank0
   598  0604  1303               	bcf	3,6	;RP1=0, select bank0
   599  0605  025C               	subwf	PWM_Duty@duty+1,w
   600  0606  3064               	movlw	100
   601  0607  1903               	skipnz
   602  0608  025B               	subwf	PWM_Duty@duty,w
   603  0609  1803               	skipnc
   604  060A  0008               	return
   605                           
   606                           ;pwm.c: 28: {
   607                           ;pwm.c: 29: duty=(float)duty*10.23;
   608  060B  085C               	movf	PWM_Duty@duty+1,w
   609  060C  00F9               	movwf	___lwtoft@c+1
   610  060D  085B               	movf	PWM_Duty@duty,w
   611  060E  00F8               	movwf	___lwtoft@c
   612  060F  120A  118A  2245  120A  118A  	fcall	___lwtoft
   613  0614  0878               	movf	?___lwtoft,w
   614  0615  1283               	bcf	3,5	;RP0=0, select bank0
   615  0616  1303               	bcf	3,6	;RP1=0, select bank0
   616  0617  00B3               	movwf	___ftmul@f2
   617  0618  0879               	movf	?___lwtoft+1,w
   618  0619  00B4               	movwf	___ftmul@f2+1
   619  061A  087A               	movf	?___lwtoft+2,w
   620  061B  00B5               	movwf	___ftmul@f2+2
   621  061C  30AE               	movlw	174
   622  061D  00B0               	movwf	___ftmul@f1
   623  061E  3023               	movlw	35
   624  061F  00B1               	movwf	___ftmul@f1+1
   625  0620  3041               	movlw	65
   626  0621  00B2               	movwf	___ftmul@f1+2
   627  0622  120A  118A  252F  120A  118A  	fcall	___ftmul
   628  0627  1283               	bcf	3,5	;RP0=0, select bank0
   629  0628  1303               	bcf	3,6	;RP1=0, select bank0
   630  0629  0830               	movf	?___ftmul,w
   631  062A  00CD               	movwf	___fttol@f1
   632  062B  0831               	movf	?___ftmul+1,w
   633  062C  00CE               	movwf	___fttol@f1+1
   634  062D  0832               	movf	?___ftmul+2,w
   635  062E  00CF               	movwf	___fttol@f1+2
   636  062F  120A  118A  235A  120A  118A  	fcall	___fttol
   637  0634  1283               	bcf	3,5	;RP0=0, select bank0
   638  0635  1303               	bcf	3,6	;RP1=0, select bank0
   639  0636  084E               	movf	?___fttol+1,w
   640  0637  00DC               	movwf	PWM_Duty@duty+1
   641  0638  084D               	movf	?___fttol,w
   642  0639  00DB               	movwf	PWM_Duty@duty
   643                           
   644                           ;pwm.c: 30: duty = ((float)duty/1023)*(20000000/(PWM_freq*4))+23;
   645  063A  085C               	movf	PWM_Duty@duty+1,w
   646  063B  00F9               	movwf	___lwtoft@c+1
   647  063C  085B               	movf	PWM_Duty@duty,w
   648  063D  00F8               	movwf	___lwtoft@c
   649  063E  120A  118A  2245  120A  118A  	fcall	___lwtoft
   650  0643  0878               	movf	?___lwtoft,w
   651  0644  1283               	bcf	3,5	;RP0=0, select bank0
   652  0645  1303               	bcf	3,6	;RP1=0, select bank0
   653  0646  00A3               	movwf	___ftdiv@f1
   654  0647  0879               	movf	?___lwtoft+1,w
   655  0648  00A4               	movwf	___ftdiv@f1+1
   656  0649  087A               	movf	?___lwtoft+2,w
   657  064A  00A5               	movwf	___ftdiv@f1+2
   658  064B  30C0               	movlw	192
   659  064C  00A0               	movwf	___ftdiv@f2
   660  064D  307F               	movlw	127
   661  064E  00A1               	movwf	___ftdiv@f2+1
   662  064F  3044               	movlw	68
   663  0650  00A2               	movwf	___ftdiv@f2+2
   664  0651  120A  118A  2477  120A  118A  	fcall	___ftdiv
   665  0656  1283               	bcf	3,5	;RP0=0, select bank0
   666  0657  1303               	bcf	3,6	;RP1=0, select bank0
   667  0658  0820               	movf	?___ftdiv,w
   668  0659  00B3               	movwf	___ftmul@f2
   669  065A  0821               	movf	?___ftdiv+1,w
   670  065B  00B4               	movwf	___ftmul@f2+1
   671  065C  0822               	movf	?___ftdiv+2,w
   672  065D  00B5               	movwf	___ftmul@f2+2
   673  065E  3001               	movlw	1
   674  065F  00F7               	movwf	___aldiv@dividend+3
   675  0660  3031               	movlw	49
   676  0661  00F6               	movwf	___aldiv@dividend+2
   677  0662  302D               	movlw	45
   678  0663  00F5               	movwf	___aldiv@dividend+1
   679  0664  3000               	movlw	0
   680  0665  00F4               	movwf	___aldiv@dividend
   681  0666  0861               	movf	_PWM_freq,w
   682  0667  00DD               	movwf	??_PWM_Duty
   683  0668  0862               	movf	_PWM_freq+1,w
   684  0669  00DE               	movwf	??_PWM_Duty+1
   685  066A  0863               	movf	_PWM_freq+2,w
   686  066B  00DF               	movwf	??_PWM_Duty+2
   687  066C  0864               	movf	_PWM_freq+3,w
   688  066D  00E0               	movwf	??_PWM_Duty+3
   689  066E  3002               	movlw	2
   690  066F                     u1725:	
   691  066F  1003               	clrc
   692  0670  0DDD               	rlf	??_PWM_Duty,f
   693  0671  0DDE               	rlf	??_PWM_Duty+1,f
   694  0672  0DDF               	rlf	??_PWM_Duty+2,f
   695  0673  0DE0               	rlf	??_PWM_Duty+3,f
   696  0674  3EFF               	addlw	-1
   697  0675  1D03               	skipz
   698  0676  2E6F               	goto	u1725
   699  0677  0860               	movf	??_PWM_Duty+3,w
   700  0678  00F3               	movwf	___aldiv@divisor+3
   701  0679  085F               	movf	??_PWM_Duty+2,w
   702  067A  00F2               	movwf	___aldiv@divisor+2
   703  067B  085E               	movf	??_PWM_Duty+1,w
   704  067C  00F1               	movwf	___aldiv@divisor+1
   705  067D  085D               	movf	??_PWM_Duty,w
   706  067E  00F0               	movwf	___aldiv@divisor
   707  067F  120A  118A  23E8  120A  118A  	fcall	___aldiv
   708  0684  0873               	movf	?___aldiv+3,w
   709  0685  1283               	bcf	3,5	;RP0=0, select bank0
   710  0686  1303               	bcf	3,6	;RP1=0, select bank0
   711  0687  00A9               	movwf	___altoft@c+3
   712  0688  0872               	movf	?___aldiv+2,w
   713  0689  00A8               	movwf	___altoft@c+2
   714  068A  0871               	movf	?___aldiv+1,w
   715  068B  00A7               	movwf	___altoft@c+1
   716  068C  0870               	movf	?___aldiv,w
   717  068D  00A6               	movwf	___altoft@c
   718  068E  120A  118A  22AC  120A  118A  	fcall	___altoft
   719  0693  1283               	bcf	3,5	;RP0=0, select bank0
   720  0694  1303               	bcf	3,6	;RP1=0, select bank0
   721  0695  0826               	movf	?___altoft,w
   722  0696  00B0               	movwf	___ftmul@f1
   723  0697  0827               	movf	?___altoft+1,w
   724  0698  00B1               	movwf	___ftmul@f1+1
   725  0699  0828               	movf	?___altoft+2,w
   726  069A  00B2               	movwf	___ftmul@f1+2
   727  069B  120A  118A  252F  120A  118A  	fcall	___ftmul
   728  06A0  1283               	bcf	3,5	;RP0=0, select bank0
   729  06A1  1303               	bcf	3,6	;RP1=0, select bank0
   730  06A2  0830               	movf	?___ftmul,w
   731  06A3  00C3               	movwf	___ftadd@f2
   732  06A4  0831               	movf	?___ftmul+1,w
   733  06A5  00C4               	movwf	___ftadd@f2+1
   734  06A6  0832               	movf	?___ftmul+2,w
   735  06A7  00C5               	movwf	___ftadd@f2+2
   736  06A8  3000               	movlw	0
   737  06A9  00C0               	movwf	___ftadd@f1
   738  06AA  30B8               	movlw	184
   739  06AB  00C1               	movwf	___ftadd@f1+1
   740  06AC  3041               	movlw	65
   741  06AD  00C2               	movwf	___ftadd@f1+2
   742  06AE  120A  118A  26DD  120A  118A  	fcall	___ftadd
   743  06B3  1283               	bcf	3,5	;RP0=0, select bank0
   744  06B4  1303               	bcf	3,6	;RP1=0, select bank0
   745  06B5  0840               	movf	?___ftadd,w
   746  06B6  00CD               	movwf	___fttol@f1
   747  06B7  0841               	movf	?___ftadd+1,w
   748  06B8  00CE               	movwf	___fttol@f1+1
   749  06B9  0842               	movf	?___ftadd+2,w
   750  06BA  00CF               	movwf	___fttol@f1+2
   751  06BB  120A  118A  235A  120A  118A  	fcall	___fttol
   752  06C0  1283               	bcf	3,5	;RP0=0, select bank0
   753  06C1  1303               	bcf	3,6	;RP1=0, select bank0
   754  06C2  084E               	movf	?___fttol+1,w
   755  06C3  00DC               	movwf	PWM_Duty@duty+1
   756  06C4  084D               	movf	?___fttol,w
   757  06C5  00DB               	movwf	PWM_Duty@duty
   758                           
   759                           ;pwm.c: 31: CCP1X = duty & 1;
   760  06C6  1C5B               	btfss	PWM_Duty@duty,0
   761  06C7  2ECC               	goto	u1730
   762  06C8  1283               	bcf	3,5	;RP0=0, select bank0
   763  06C9  1303               	bcf	3,6	;RP1=0, select bank0
   764  06CA  1697               	bsf	23,5	;volatile
   765  06CB  2ECF               	goto	l1141
   766  06CC                     u1730:	
   767  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   768  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   769  06CE  1297               	bcf	23,5	;volatile
   770  06CF                     l1141:	
   771                           
   772                           ;pwm.c: 32: CCP1Y = duty & 2;
   773  06CF  1217               	bcf	23,4	;volatile
   774                           
   775                           ;pwm.c: 33: CCPR1L = duty>>2;
   776  06D0  085C               	movf	PWM_Duty@duty+1,w
   777  06D1  00DE               	movwf	??_PWM_Duty+1
   778  06D2  085B               	movf	PWM_Duty@duty,w
   779  06D3  00DD               	movwf	??_PWM_Duty
   780  06D4  1003               	clrc
   781  06D5  0CDE               	rrf	??_PWM_Duty+1,f
   782  06D6  0CDD               	rrf	??_PWM_Duty,f
   783  06D7  1003               	clrc
   784  06D8  0CDE               	rrf	??_PWM_Duty+1,f
   785  06D9  0CDD               	rrf	??_PWM_Duty,f
   786  06DA  085D               	movf	??_PWM_Duty,w
   787  06DB  0095               	movwf	21	;volatile
   788  06DC  0008               	return
   789  06DD                     __end_of_PWM_Duty:	
   790                           
   791                           	psect	text3
   792  0245                     __ptext3:	
   793 ;; *************** function ___lwtoft *****************
   794 ;; Defined at:
   795 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  c               2    8[COMMON] unsigned int 
   798 ;; Auto vars:     Size  Location     Type
   799 ;;		None
   800 ;; Return value:  Size  Location     Type
   801 ;;                  3    8[COMMON] float 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         3       0       0       0       0
   810 ;;      Locals:         0       0       0       0       0
   811 ;;      Temps:          1       0       0       0       0
   812 ;;      Totals:         4       0       0       0       0
   813 ;;Total ram usage:        4 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    1
   816 ;; This function calls:
   817 ;;		___ftpack
   818 ;; This function is called by:
   819 ;;		_PWM_Duty
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           
   824                           ;psect for function ___lwtoft
   825  0245                     ___lwtoft:	
   826                           
   827                           ;incstack = 0
   828                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
   829  0245  0878               	movf	___lwtoft@c,w
   830  0246  00F0               	movwf	___ftpack@arg
   831  0247  0879               	movf	___lwtoft@c+1,w
   832  0248  00F1               	movwf	___ftpack@arg+1
   833  0249  01F2               	clrf	___ftpack@arg+2
   834  024A  308E               	movlw	142
   835  024B  00FB               	movwf	??___lwtoft
   836  024C  087B               	movf	??___lwtoft,w
   837  024D  00F3               	movwf	___ftpack@exp
   838  024E  01F4               	clrf	___ftpack@sign
   839  024F  120A  118A  22EE   	fcall	___ftpack
   840  0252  0870               	movf	?___ftpack,w
   841  0253  00F8               	movwf	?___lwtoft
   842  0254  0871               	movf	?___ftpack+1,w
   843  0255  00F9               	movwf	?___lwtoft+1
   844  0256  0872               	movf	?___ftpack+2,w
   845  0257  00FA               	movwf	?___lwtoft+2
   846  0258  0008               	return
   847  0259                     __end_of___lwtoft:	
   848                           
   849                           	psect	text4
   850  035A                     __ptext4:	
   851 ;; *************** function ___fttol *****************
   852 ;; Defined at:
   853 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  f1              3   45[BANK0 ] float 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  lval            4   54[BANK0 ] unsigned long 
   858 ;;  exp1            1   58[BANK0 ] unsigned char 
   859 ;;  sign1           1   53[BANK0 ] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  4   45[BANK0 ] long 
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       4       0       0       0
   870 ;;      Locals:         0       6       0       0       0
   871 ;;      Temps:          0       4       0       0       0
   872 ;;      Totals:         0      14       0       0       0
   873 ;;Total ram usage:       14 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; This function calls:
   876 ;;		Nothing
   877 ;; This function is called by:
   878 ;;		_PWM_Duty
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           
   883                           ;psect for function ___fttol
   884  035A                     ___fttol:	
   885                           
   886                           ;incstack = 0
   887                           ; Regs used in ___fttol: [wreg+status,2+status,0]
   888  035A  1283               	bcf	3,5	;RP0=0, select bank0
   889  035B  1303               	bcf	3,6	;RP1=0, select bank0
   890  035C  084D               	movf	___fttol@f1,w
   891  035D  00D1               	movwf	??___fttol
   892  035E  084E               	movf	___fttol@f1+1,w
   893  035F  00D2               	movwf	??___fttol+1
   894  0360  084F               	movf	___fttol@f1+2,w
   895  0361  00D3               	movwf	??___fttol+2
   896  0362  1003               	clrc
   897  0363  0D52               	rlf	??___fttol+1,w
   898  0364  0D53               	rlf	??___fttol+2,w
   899  0365  00D4               	movwf	??___fttol+3
   900  0366  0854               	movf	??___fttol+3,w
   901  0367  00DA               	movwf	___fttol@exp1
   902  0368  085A               	movf	___fttol@exp1,w
   903  0369  1D03               	btfss	3,2
   904  036A  2B74               	goto	l1081
   905  036B  3000               	movlw	0
   906  036C  00D0               	movwf	?___fttol+3
   907  036D  3000               	movlw	0
   908  036E  00CF               	movwf	?___fttol+2
   909  036F  3000               	movlw	0
   910  0370  00CE               	movwf	?___fttol+1
   911  0371  3000               	movlw	0
   912  0372  00CD               	movwf	?___fttol
   913  0373  0008               	return
   914  0374                     l1081:	
   915  0374  084D               	movf	___fttol@f1,w
   916  0375  00D1               	movwf	??___fttol
   917  0376  084E               	movf	___fttol@f1+1,w
   918  0377  00D2               	movwf	??___fttol+1
   919  0378  084F               	movf	___fttol@f1+2,w
   920  0379  00D3               	movwf	??___fttol+2
   921  037A  3017               	movlw	23
   922  037B                     u1605:	
   923  037B  1003               	clrc
   924  037C  0CD3               	rrf	??___fttol+2,f
   925  037D  0CD2               	rrf	??___fttol+1,f
   926  037E  0CD1               	rrf	??___fttol,f
   927  037F  3EFF               	addlw	-1
   928  0380  1D03               	skipz
   929  0381  2B7B               	goto	u1605
   930  0382  0851               	movf	??___fttol,w
   931  0383  00D4               	movwf	??___fttol+3
   932  0384  0854               	movf	??___fttol+3,w
   933  0385  00D5               	movwf	___fttol@sign1
   934  0386  17CE               	bsf	___fttol@f1+1,7
   935  0387  30FF               	movlw	255
   936  0388  05CD               	andwf	___fttol@f1,f
   937  0389  30FF               	movlw	255
   938  038A  05CE               	andwf	___fttol@f1+1,f
   939  038B  3000               	movlw	0
   940  038C  05CF               	andwf	___fttol@f1+2,f
   941  038D  084D               	movf	___fttol@f1,w
   942  038E  00D6               	movwf	___fttol@lval
   943  038F  084E               	movf	___fttol@f1+1,w
   944  0390  00D7               	movwf	___fttol@lval+1
   945  0391  084F               	movf	___fttol@f1+2,w
   946  0392  00D8               	movwf	___fttol@lval+2
   947  0393  01D9               	clrf	___fttol@lval+3
   948  0394  308E               	movlw	142
   949  0395  02DA               	subwf	___fttol@exp1,f
   950  0396  1FDA               	btfss	___fttol@exp1,7
   951  0397  2BB6               	goto	l1101
   952  0398  085A               	movf	___fttol@exp1,w
   953  0399  3A80               	xorlw	128
   954  039A  3E8F               	addlw	143
   955  039B  1803               	skipnc
   956  039C  2BA6               	goto	l1099
   957  039D  3000               	movlw	0
   958  039E  00D0               	movwf	?___fttol+3
   959  039F  3000               	movlw	0
   960  03A0  00CF               	movwf	?___fttol+2
   961  03A1  3000               	movlw	0
   962  03A2  00CE               	movwf	?___fttol+1
   963  03A3  3000               	movlw	0
   964  03A4  00CD               	movwf	?___fttol
   965  03A5  0008               	return
   966  03A6                     l1099:	
   967  03A6  3001               	movlw	1
   968  03A7                     u1635:	
   969  03A7  1003               	clrc
   970  03A8  0CD9               	rrf	___fttol@lval+3,f
   971  03A9  0CD8               	rrf	___fttol@lval+2,f
   972  03AA  0CD7               	rrf	___fttol@lval+1,f
   973  03AB  0CD6               	rrf	___fttol@lval,f
   974  03AC  3EFF               	addlw	-1
   975  03AD  1D03               	skipz
   976  03AE  2BA7               	goto	u1635
   977  03AF  3001               	movlw	1
   978  03B0  00D1               	movwf	??___fttol
   979  03B1  0851               	movf	??___fttol,w
   980  03B2  07DA               	addwf	___fttol@exp1,f
   981  03B3  1903               	btfsc	3,2
   982  03B4  2BD1               	goto	l1109
   983  03B5  2BA6               	goto	l1099
   984  03B6                     l1101:	
   985  03B6  3018               	movlw	24
   986  03B7  025A               	subwf	___fttol@exp1,w
   987  03B8  1C03               	skipc
   988  03B9  2BCE               	goto	l375
   989  03BA  3000               	movlw	0
   990  03BB  00D0               	movwf	?___fttol+3
   991  03BC  3000               	movlw	0
   992  03BD  00CF               	movwf	?___fttol+2
   993  03BE  3000               	movlw	0
   994  03BF  00CE               	movwf	?___fttol+1
   995  03C0  3000               	movlw	0
   996  03C1  00CD               	movwf	?___fttol
   997  03C2  0008               	return
   998  03C3                     l1107:	
   999  03C3  3001               	movlw	1
  1000  03C4  00D1               	movwf	??___fttol
  1001  03C5                     u1665:	
  1002  03C5  1003               	clrc
  1003  03C6  0DD6               	rlf	___fttol@lval,f
  1004  03C7  0DD7               	rlf	___fttol@lval+1,f
  1005  03C8  0DD8               	rlf	___fttol@lval+2,f
  1006  03C9  0DD9               	rlf	___fttol@lval+3,f
  1007  03CA  0BD1               	decfsz	??___fttol,f
  1008  03CB  2BC5               	goto	u1665
  1009  03CC  3001               	movlw	1
  1010  03CD  02DA               	subwf	___fttol@exp1,f
  1011  03CE                     l375:	
  1012  03CE  085A               	movf	___fttol@exp1,w
  1013  03CF  1D03               	btfss	3,2
  1014  03D0  2BC3               	goto	l1107
  1015  03D1                     l1109:	
  1016  03D1  0855               	movf	___fttol@sign1,w
  1017  03D2  1903               	btfsc	3,2
  1018  03D3  2BDF               	goto	l1113
  1019  03D4  09D6               	comf	___fttol@lval,f
  1020  03D5  09D7               	comf	___fttol@lval+1,f
  1021  03D6  09D8               	comf	___fttol@lval+2,f
  1022  03D7  09D9               	comf	___fttol@lval+3,f
  1023  03D8  0AD6               	incf	___fttol@lval,f
  1024  03D9  1903               	skipnz
  1025  03DA  0AD7               	incf	___fttol@lval+1,f
  1026  03DB  1903               	skipnz
  1027  03DC  0AD8               	incf	___fttol@lval+2,f
  1028  03DD  1903               	skipnz
  1029  03DE  0AD9               	incf	___fttol@lval+3,f
  1030  03DF                     l1113:	
  1031  03DF  0859               	movf	___fttol@lval+3,w
  1032  03E0  00D0               	movwf	?___fttol+3
  1033  03E1  0858               	movf	___fttol@lval+2,w
  1034  03E2  00CF               	movwf	?___fttol+2
  1035  03E3  0857               	movf	___fttol@lval+1,w
  1036  03E4  00CE               	movwf	?___fttol+1
  1037  03E5  0856               	movf	___fttol@lval,w
  1038  03E6  00CD               	movwf	?___fttol
  1039  03E7  0008               	return
  1040  03E8                     __end_of___fttol:	
  1041                           
  1042                           	psect	text5
  1043  052F                     __ptext5:	
  1044 ;; *************** function ___ftmul *****************
  1045 ;; Defined at:
  1046 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  f1              3   16[BANK0 ] float 
  1049 ;;  f2              3   19[BANK0 ] float 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  1052 ;;  sign            1   31[BANK0 ] unsigned char 
  1053 ;;  cntr            1   30[BANK0 ] unsigned char 
  1054 ;;  exp             1   26[BANK0 ] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  3   16[BANK0 ] float 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0, pclath, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         0       6       0       0       0
  1065 ;;      Locals:         0       6       0       0       0
  1066 ;;      Temps:          0       4       0       0       0
  1067 ;;      Totals:         0      16       0       0       0
  1068 ;;Total ram usage:       16 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    1
  1071 ;; This function calls:
  1072 ;;		___ftpack
  1073 ;; This function is called by:
  1074 ;;		_PWM_Duty
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           
  1079                           ;psect for function ___ftmul
  1080  052F                     ___ftmul:	
  1081                           
  1082                           ;incstack = 0
  1083                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  1084  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0531  0830               	movf	___ftmul@f1,w
  1087  0532  00B6               	movwf	??___ftmul
  1088  0533  0831               	movf	___ftmul@f1+1,w
  1089  0534  00B7               	movwf	??___ftmul+1
  1090  0535  0832               	movf	___ftmul@f1+2,w
  1091  0536  00B8               	movwf	??___ftmul+2
  1092  0537  1003               	clrc
  1093  0538  0D37               	rlf	??___ftmul+1,w
  1094  0539  0D38               	rlf	??___ftmul+2,w
  1095  053A  00B9               	movwf	??___ftmul+3
  1096  053B  0839               	movf	??___ftmul+3,w
  1097  053C  00BA               	movwf	___ftmul@exp
  1098  053D  083A               	movf	___ftmul@exp,w
  1099  053E  1D03               	btfss	3,2
  1100  053F  2D47               	goto	l1031
  1101  0540  3000               	movlw	0
  1102  0541  00B0               	movwf	?___ftmul
  1103  0542  3000               	movlw	0
  1104  0543  00B1               	movwf	?___ftmul+1
  1105  0544  3000               	movlw	0
  1106  0545  00B2               	movwf	?___ftmul+2
  1107  0546  0008               	return
  1108  0547                     l1031:	
  1109  0547  0833               	movf	___ftmul@f2,w
  1110  0548  00B6               	movwf	??___ftmul
  1111  0549  0834               	movf	___ftmul@f2+1,w
  1112  054A  00B7               	movwf	??___ftmul+1
  1113  054B  0835               	movf	___ftmul@f2+2,w
  1114  054C  00B8               	movwf	??___ftmul+2
  1115  054D  1003               	clrc
  1116  054E  0D37               	rlf	??___ftmul+1,w
  1117  054F  0D38               	rlf	??___ftmul+2,w
  1118  0550  00B9               	movwf	??___ftmul+3
  1119  0551  0839               	movf	??___ftmul+3,w
  1120  0552  00BF               	movwf	___ftmul@sign
  1121  0553  083F               	movf	___ftmul@sign,w
  1122  0554  1D03               	btfss	3,2
  1123  0555  2D5D               	goto	l1037
  1124  0556  3000               	movlw	0
  1125  0557  00B0               	movwf	?___ftmul
  1126  0558  3000               	movlw	0
  1127  0559  00B1               	movwf	?___ftmul+1
  1128  055A  3000               	movlw	0
  1129  055B  00B2               	movwf	?___ftmul+2
  1130  055C  0008               	return
  1131  055D                     l1037:	
  1132  055D  083F               	movf	___ftmul@sign,w
  1133  055E  3E7B               	addlw	123
  1134  055F  00B6               	movwf	??___ftmul
  1135  0560  0836               	movf	??___ftmul,w
  1136  0561  07BA               	addwf	___ftmul@exp,f
  1137  0562  0830               	movf	___ftmul@f1,w
  1138  0563  00B6               	movwf	??___ftmul
  1139  0564  0831               	movf	___ftmul@f1+1,w
  1140  0565  00B7               	movwf	??___ftmul+1
  1141  0566  0832               	movf	___ftmul@f1+2,w
  1142  0567  00B8               	movwf	??___ftmul+2
  1143  0568  3010               	movlw	16
  1144  0569                     u1475:	
  1145  0569  1003               	clrc
  1146  056A  0CB8               	rrf	??___ftmul+2,f
  1147  056B  0CB7               	rrf	??___ftmul+1,f
  1148  056C  0CB6               	rrf	??___ftmul,f
  1149  056D  3EFF               	addlw	-1
  1150  056E  1D03               	skipz
  1151  056F  2D69               	goto	u1475
  1152  0570  0836               	movf	??___ftmul,w
  1153  0571  00B9               	movwf	??___ftmul+3
  1154  0572  0839               	movf	??___ftmul+3,w
  1155  0573  00BF               	movwf	___ftmul@sign
  1156  0574  0833               	movf	___ftmul@f2,w
  1157  0575  00B6               	movwf	??___ftmul
  1158  0576  0834               	movf	___ftmul@f2+1,w
  1159  0577  00B7               	movwf	??___ftmul+1
  1160  0578  0835               	movf	___ftmul@f2+2,w
  1161  0579  00B8               	movwf	??___ftmul+2
  1162  057A  3010               	movlw	16
  1163  057B                     u1485:	
  1164  057B  1003               	clrc
  1165  057C  0CB8               	rrf	??___ftmul+2,f
  1166  057D  0CB7               	rrf	??___ftmul+1,f
  1167  057E  0CB6               	rrf	??___ftmul,f
  1168  057F  3EFF               	addlw	-1
  1169  0580  1D03               	skipz
  1170  0581  2D7B               	goto	u1485
  1171  0582  0836               	movf	??___ftmul,w
  1172  0583  00B9               	movwf	??___ftmul+3
  1173  0584  0839               	movf	??___ftmul+3,w
  1174  0585  06BF               	xorwf	___ftmul@sign,f
  1175  0586  3080               	movlw	128
  1176  0587  00B6               	movwf	??___ftmul
  1177  0588  0836               	movf	??___ftmul,w
  1178  0589  05BF               	andwf	___ftmul@sign,f
  1179  058A  17B1               	bsf	___ftmul@f1+1,7
  1180  058B  17B4               	bsf	___ftmul@f2+1,7
  1181  058C  30FF               	movlw	255
  1182  058D  05B3               	andwf	___ftmul@f2,f
  1183  058E  30FF               	movlw	255
  1184  058F  05B4               	andwf	___ftmul@f2+1,f
  1185  0590  3000               	movlw	0
  1186  0591  05B5               	andwf	___ftmul@f2+2,f
  1187  0592  3000               	movlw	0
  1188  0593  00BB               	movwf	___ftmul@f3_as_product
  1189  0594  3000               	movlw	0
  1190  0595  00BC               	movwf	___ftmul@f3_as_product+1
  1191  0596  3000               	movlw	0
  1192  0597  00BD               	movwf	___ftmul@f3_as_product+2
  1193  0598  3007               	movlw	7
  1194  0599  00B6               	movwf	??___ftmul
  1195  059A  0836               	movf	??___ftmul,w
  1196  059B  00BE               	movwf	___ftmul@cntr
  1197  059C                     l1049:	
  1198  059C  1C30               	btfss	___ftmul@f1,0
  1199  059D  2DAC               	goto	l1053
  1200  059E  0833               	movf	___ftmul@f2,w
  1201  059F  07BB               	addwf	___ftmul@f3_as_product,f
  1202  05A0  0834               	movf	___ftmul@f2+1,w
  1203  05A1  1103               	clrz
  1204  05A2  1803               	skipnc
  1205  05A3  0A34               	incf	___ftmul@f2+1,w
  1206  05A4  1D03               	btfss	3,2
  1207  05A5  07BC               	addwf	___ftmul@f3_as_product+1,f
  1208  05A6  0835               	movf	___ftmul@f2+2,w
  1209  05A7  1103               	clrz
  1210  05A8  1803               	skipnc
  1211  05A9  0A35               	incf	___ftmul@f2+2,w
  1212  05AA  1D03               	btfss	3,2
  1213  05AB  07BD               	addwf	___ftmul@f3_as_product+2,f
  1214  05AC                     l1053:	
  1215  05AC  3001               	movlw	1
  1216  05AD                     u1515:	
  1217  05AD  1003               	clrc
  1218  05AE  0CB2               	rrf	___ftmul@f1+2,f
  1219  05AF  0CB1               	rrf	___ftmul@f1+1,f
  1220  05B0  0CB0               	rrf	___ftmul@f1,f
  1221  05B1  3EFF               	addlw	-1
  1222  05B2  1D03               	skipz
  1223  05B3  2DAD               	goto	u1515
  1224  05B4  3001               	movlw	1
  1225  05B5                     u1525:	
  1226  05B5  1003               	clrc
  1227  05B6  0DB3               	rlf	___ftmul@f2,f
  1228  05B7  0DB4               	rlf	___ftmul@f2+1,f
  1229  05B8  0DB5               	rlf	___ftmul@f2+2,f
  1230  05B9  3EFF               	addlw	-1
  1231  05BA  1D03               	skipz
  1232  05BB  2DB5               	goto	u1525
  1233  05BC  3001               	movlw	1
  1234  05BD  02BE               	subwf	___ftmul@cntr,f
  1235  05BE  1D03               	btfss	3,2
  1236  05BF  2D9C               	goto	l1049
  1237  05C0  3009               	movlw	9
  1238  05C1  00B6               	movwf	??___ftmul
  1239  05C2  0836               	movf	??___ftmul,w
  1240  05C3  00BE               	movwf	___ftmul@cntr
  1241  05C4                     l1061:	
  1242  05C4  1C30               	btfss	___ftmul@f1,0
  1243  05C5  2DD4               	goto	l1065
  1244  05C6  0833               	movf	___ftmul@f2,w
  1245  05C7  07BB               	addwf	___ftmul@f3_as_product,f
  1246  05C8  0834               	movf	___ftmul@f2+1,w
  1247  05C9  1103               	clrz
  1248  05CA  1803               	skipnc
  1249  05CB  0A34               	incf	___ftmul@f2+1,w
  1250  05CC  1D03               	btfss	3,2
  1251  05CD  07BC               	addwf	___ftmul@f3_as_product+1,f
  1252  05CE  0835               	movf	___ftmul@f2+2,w
  1253  05CF  1103               	clrz
  1254  05D0  1803               	skipnc
  1255  05D1  0A35               	incf	___ftmul@f2+2,w
  1256  05D2  1D03               	btfss	3,2
  1257  05D3  07BD               	addwf	___ftmul@f3_as_product+2,f
  1258  05D4                     l1065:	
  1259  05D4  3001               	movlw	1
  1260  05D5                     u1565:	
  1261  05D5  1003               	clrc
  1262  05D6  0CB2               	rrf	___ftmul@f1+2,f
  1263  05D7  0CB1               	rrf	___ftmul@f1+1,f
  1264  05D8  0CB0               	rrf	___ftmul@f1,f
  1265  05D9  3EFF               	addlw	-1
  1266  05DA  1D03               	skipz
  1267  05DB  2DD5               	goto	u1565
  1268  05DC  3001               	movlw	1
  1269  05DD                     u1575:	
  1270  05DD  1003               	clrc
  1271  05DE  0CBD               	rrf	___ftmul@f3_as_product+2,f
  1272  05DF  0CBC               	rrf	___ftmul@f3_as_product+1,f
  1273  05E0  0CBB               	rrf	___ftmul@f3_as_product,f
  1274  05E1  3EFF               	addlw	-1
  1275  05E2  1D03               	skipz
  1276  05E3  2DDD               	goto	u1575
  1277  05E4  3001               	movlw	1
  1278  05E5  02BE               	subwf	___ftmul@cntr,f
  1279  05E6  1D03               	btfss	3,2
  1280  05E7  2DC4               	goto	l1061
  1281  05E8  083B               	movf	___ftmul@f3_as_product,w
  1282  05E9  00F0               	movwf	___ftpack@arg
  1283  05EA  083C               	movf	___ftmul@f3_as_product+1,w
  1284  05EB  00F1               	movwf	___ftpack@arg+1
  1285  05EC  083D               	movf	___ftmul@f3_as_product+2,w
  1286  05ED  00F2               	movwf	___ftpack@arg+2
  1287  05EE  083A               	movf	___ftmul@exp,w
  1288  05EF  00B6               	movwf	??___ftmul
  1289  05F0  0836               	movf	??___ftmul,w
  1290  05F1  00F3               	movwf	___ftpack@exp
  1291  05F2  083F               	movf	___ftmul@sign,w
  1292  05F3  00B7               	movwf	??___ftmul+1
  1293  05F4  0837               	movf	??___ftmul+1,w
  1294  05F5  00F4               	movwf	___ftpack@sign
  1295  05F6  120A  118A  22EE   	fcall	___ftpack
  1296  05F9  0870               	movf	?___ftpack,w
  1297  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  1298  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  1299  05FC  00B0               	movwf	?___ftmul
  1300  05FD  0871               	movf	?___ftpack+1,w
  1301  05FE  00B1               	movwf	?___ftmul+1
  1302  05FF  0872               	movf	?___ftpack+2,w
  1303  0600  00B2               	movwf	?___ftmul+2
  1304  0601  0008               	return
  1305  0602                     __end_of___ftmul:	
  1306                           
  1307                           	psect	text6
  1308  0477                     __ptext6:	
  1309 ;; *************** function ___ftdiv *****************
  1310 ;; Defined at:
  1311 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  f2              3    0[BANK0 ] float 
  1314 ;;  f1              3    3[BANK0 ] float 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  f3              3   11[BANK0 ] float 
  1317 ;;  sign            1   15[BANK0 ] unsigned char 
  1318 ;;  exp             1   14[BANK0 ] unsigned char 
  1319 ;;  cntr            1   10[BANK0 ] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  3    0[BANK0 ] float 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         0       6       0       0       0
  1330 ;;      Locals:         0       6       0       0       0
  1331 ;;      Temps:          0       4       0       0       0
  1332 ;;      Totals:         0      16       0       0       0
  1333 ;;Total ram usage:       16 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    1
  1336 ;; This function calls:
  1337 ;;		___ftpack
  1338 ;; This function is called by:
  1339 ;;		_PWM_Duty
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           
  1344                           ;psect for function ___ftdiv
  1345  0477                     ___ftdiv:	
  1346                           
  1347                           ;incstack = 0
  1348                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  1349  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0479  0823               	movf	___ftdiv@f1,w
  1352  047A  00A6               	movwf	??___ftdiv
  1353  047B  0824               	movf	___ftdiv@f1+1,w
  1354  047C  00A7               	movwf	??___ftdiv+1
  1355  047D  0825               	movf	___ftdiv@f1+2,w
  1356  047E  00A8               	movwf	??___ftdiv+2
  1357  047F  1003               	clrc
  1358  0480  0D27               	rlf	??___ftdiv+1,w
  1359  0481  0D28               	rlf	??___ftdiv+2,w
  1360  0482  00A9               	movwf	??___ftdiv+3
  1361  0483  0829               	movf	??___ftdiv+3,w
  1362  0484  00AE               	movwf	___ftdiv@exp
  1363  0485  082E               	movf	___ftdiv@exp,w
  1364  0486  1D03               	btfss	3,2
  1365  0487  2C8F               	goto	l989
  1366  0488  3000               	movlw	0
  1367  0489  00A0               	movwf	?___ftdiv
  1368  048A  3000               	movlw	0
  1369  048B  00A1               	movwf	?___ftdiv+1
  1370  048C  3000               	movlw	0
  1371  048D  00A2               	movwf	?___ftdiv+2
  1372  048E  0008               	return
  1373  048F                     l989:	
  1374  048F  0820               	movf	___ftdiv@f2,w
  1375  0490  00A6               	movwf	??___ftdiv
  1376  0491  0821               	movf	___ftdiv@f2+1,w
  1377  0492  00A7               	movwf	??___ftdiv+1
  1378  0493  0822               	movf	___ftdiv@f2+2,w
  1379  0494  00A8               	movwf	??___ftdiv+2
  1380  0495  1003               	clrc
  1381  0496  0D27               	rlf	??___ftdiv+1,w
  1382  0497  0D28               	rlf	??___ftdiv+2,w
  1383  0498  00A9               	movwf	??___ftdiv+3
  1384  0499  0829               	movf	??___ftdiv+3,w
  1385  049A  00AF               	movwf	___ftdiv@sign
  1386  049B  082F               	movf	___ftdiv@sign,w
  1387  049C  1D03               	btfss	3,2
  1388  049D  2CA5               	goto	l995
  1389  049E  3000               	movlw	0
  1390  049F  00A0               	movwf	?___ftdiv
  1391  04A0  3000               	movlw	0
  1392  04A1  00A1               	movwf	?___ftdiv+1
  1393  04A2  3000               	movlw	0
  1394  04A3  00A2               	movwf	?___ftdiv+2
  1395  04A4  0008               	return
  1396  04A5                     l995:	
  1397  04A5  3000               	movlw	0
  1398  04A6  00AB               	movwf	___ftdiv@f3
  1399  04A7  3000               	movlw	0
  1400  04A8  00AC               	movwf	___ftdiv@f3+1
  1401  04A9  3000               	movlw	0
  1402  04AA  00AD               	movwf	___ftdiv@f3+2
  1403  04AB  3089               	movlw	137
  1404  04AC  072F               	addwf	___ftdiv@sign,w
  1405  04AD  00A6               	movwf	??___ftdiv
  1406  04AE  0826               	movf	??___ftdiv,w
  1407  04AF  02AE               	subwf	___ftdiv@exp,f
  1408  04B0  0823               	movf	___ftdiv@f1,w
  1409  04B1  00A6               	movwf	??___ftdiv
  1410  04B2  0824               	movf	___ftdiv@f1+1,w
  1411  04B3  00A7               	movwf	??___ftdiv+1
  1412  04B4  0825               	movf	___ftdiv@f1+2,w
  1413  04B5  00A8               	movwf	??___ftdiv+2
  1414  04B6  3010               	movlw	16
  1415  04B7                     u1395:	
  1416  04B7  1003               	clrc
  1417  04B8  0CA8               	rrf	??___ftdiv+2,f
  1418  04B9  0CA7               	rrf	??___ftdiv+1,f
  1419  04BA  0CA6               	rrf	??___ftdiv,f
  1420  04BB  3EFF               	addlw	-1
  1421  04BC  1D03               	skipz
  1422  04BD  2CB7               	goto	u1395
  1423  04BE  0826               	movf	??___ftdiv,w
  1424  04BF  00A9               	movwf	??___ftdiv+3
  1425  04C0  0829               	movf	??___ftdiv+3,w
  1426  04C1  00AF               	movwf	___ftdiv@sign
  1427  04C2  0820               	movf	___ftdiv@f2,w
  1428  04C3  00A6               	movwf	??___ftdiv
  1429  04C4  0821               	movf	___ftdiv@f2+1,w
  1430  04C5  00A7               	movwf	??___ftdiv+1
  1431  04C6  0822               	movf	___ftdiv@f2+2,w
  1432  04C7  00A8               	movwf	??___ftdiv+2
  1433  04C8  3010               	movlw	16
  1434  04C9                     u1405:	
  1435  04C9  1003               	clrc
  1436  04CA  0CA8               	rrf	??___ftdiv+2,f
  1437  04CB  0CA7               	rrf	??___ftdiv+1,f
  1438  04CC  0CA6               	rrf	??___ftdiv,f
  1439  04CD  3EFF               	addlw	-1
  1440  04CE  1D03               	skipz
  1441  04CF  2CC9               	goto	u1405
  1442  04D0  0826               	movf	??___ftdiv,w
  1443  04D1  00A9               	movwf	??___ftdiv+3
  1444  04D2  0829               	movf	??___ftdiv+3,w
  1445  04D3  06AF               	xorwf	___ftdiv@sign,f
  1446  04D4  3080               	movlw	128
  1447  04D5  00A6               	movwf	??___ftdiv
  1448  04D6  0826               	movf	??___ftdiv,w
  1449  04D7  05AF               	andwf	___ftdiv@sign,f
  1450  04D8  17A4               	bsf	___ftdiv@f1+1,7
  1451  04D9  30FF               	movlw	255
  1452  04DA  05A3               	andwf	___ftdiv@f1,f
  1453  04DB  30FF               	movlw	255
  1454  04DC  05A4               	andwf	___ftdiv@f1+1,f
  1455  04DD  3000               	movlw	0
  1456  04DE  05A5               	andwf	___ftdiv@f1+2,f
  1457  04DF  17A1               	bsf	___ftdiv@f2+1,7
  1458  04E0  30FF               	movlw	255
  1459  04E1  05A0               	andwf	___ftdiv@f2,f
  1460  04E2  30FF               	movlw	255
  1461  04E3  05A1               	andwf	___ftdiv@f2+1,f
  1462  04E4  3000               	movlw	0
  1463  04E5  05A2               	andwf	___ftdiv@f2+2,f
  1464  04E6  3018               	movlw	24
  1465  04E7  00A6               	movwf	??___ftdiv
  1466  04E8  0826               	movf	??___ftdiv,w
  1467  04E9  00AA               	movwf	___ftdiv@cntr
  1468  04EA                     l1009:	
  1469  04EA  3001               	movlw	1
  1470  04EB                     u1415:	
  1471  04EB  1003               	clrc
  1472  04EC  0DAB               	rlf	___ftdiv@f3,f
  1473  04ED  0DAC               	rlf	___ftdiv@f3+1,f
  1474  04EE  0DAD               	rlf	___ftdiv@f3+2,f
  1475  04EF  3EFF               	addlw	-1
  1476  04F0  1D03               	skipz
  1477  04F1  2CEB               	goto	u1415
  1478  04F2  0822               	movf	___ftdiv@f2+2,w
  1479  04F3  0225               	subwf	___ftdiv@f1+2,w
  1480  04F4  1D03               	skipz
  1481  04F5  2CFC               	goto	u1425
  1482  04F6  0821               	movf	___ftdiv@f2+1,w
  1483  04F7  0224               	subwf	___ftdiv@f1+1,w
  1484  04F8  1D03               	skipz
  1485  04F9  2CFC               	goto	u1425
  1486  04FA  0820               	movf	___ftdiv@f2,w
  1487  04FB  0223               	subwf	___ftdiv@f1,w
  1488  04FC                     u1425:	
  1489  04FC  1C03               	skipc
  1490  04FD  2D09               	goto	l1017
  1491  04FE  0820               	movf	___ftdiv@f2,w
  1492  04FF  02A3               	subwf	___ftdiv@f1,f
  1493  0500  0821               	movf	___ftdiv@f2+1,w
  1494  0501  1C03               	skipc
  1495  0502  0F21               	incfsz	___ftdiv@f2+1,w
  1496  0503  02A4               	subwf	___ftdiv@f1+1,f
  1497  0504  0822               	movf	___ftdiv@f2+2,w
  1498  0505  1C03               	skipc
  1499  0506  0A22               	incf	___ftdiv@f2+2,w
  1500  0507  02A5               	subwf	___ftdiv@f1+2,f
  1501  0508  142B               	bsf	___ftdiv@f3,0
  1502  0509                     l1017:	
  1503  0509  3001               	movlw	1
  1504  050A                     u1435:	
  1505  050A  1003               	clrc
  1506  050B  0DA3               	rlf	___ftdiv@f1,f
  1507  050C  0DA4               	rlf	___ftdiv@f1+1,f
  1508  050D  0DA5               	rlf	___ftdiv@f1+2,f
  1509  050E  3EFF               	addlw	-1
  1510  050F  1D03               	skipz
  1511  0510  2D0A               	goto	u1435
  1512  0511  3001               	movlw	1
  1513  0512  02AA               	subwf	___ftdiv@cntr,f
  1514  0513  1D03               	btfss	3,2
  1515  0514  2CEA               	goto	l1009
  1516  0515  082B               	movf	___ftdiv@f3,w
  1517  0516  00F0               	movwf	___ftpack@arg
  1518  0517  082C               	movf	___ftdiv@f3+1,w
  1519  0518  00F1               	movwf	___ftpack@arg+1
  1520  0519  082D               	movf	___ftdiv@f3+2,w
  1521  051A  00F2               	movwf	___ftpack@arg+2
  1522  051B  082E               	movf	___ftdiv@exp,w
  1523  051C  00A6               	movwf	??___ftdiv
  1524  051D  0826               	movf	??___ftdiv,w
  1525  051E  00F3               	movwf	___ftpack@exp
  1526  051F  082F               	movf	___ftdiv@sign,w
  1527  0520  00A7               	movwf	??___ftdiv+1
  1528  0521  0827               	movf	??___ftdiv+1,w
  1529  0522  00F4               	movwf	___ftpack@sign
  1530  0523  120A  118A  22EE   	fcall	___ftpack
  1531  0526  0870               	movf	?___ftpack,w
  1532  0527  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0528  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0529  00A0               	movwf	?___ftdiv
  1535  052A  0871               	movf	?___ftpack+1,w
  1536  052B  00A1               	movwf	?___ftdiv+1
  1537  052C  0872               	movf	?___ftpack+2,w
  1538  052D  00A2               	movwf	?___ftdiv+2
  1539  052E  0008               	return
  1540  052F                     __end_of___ftdiv:	
  1541                           
  1542                           	psect	text7
  1543  06DD                     __ptext7:	
  1544 ;; *************** function ___ftadd *****************
  1545 ;; Defined at:
  1546 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  f1              3   32[BANK0 ] float 
  1549 ;;  f2              3   35[BANK0 ] float 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  exp1            1   44[BANK0 ] unsigned char 
  1552 ;;  exp2            1   43[BANK0 ] unsigned char 
  1553 ;;  sign            1   42[BANK0 ] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  3   32[BANK0 ] float 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0, pclath, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         0       6       0       0       0
  1564 ;;      Locals:         0       3       0       0       0
  1565 ;;      Temps:          0       4       0       0       0
  1566 ;;      Totals:         0      13       0       0       0
  1567 ;;Total ram usage:       13 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    1
  1570 ;; This function calls:
  1571 ;;		___ftpack
  1572 ;; This function is called by:
  1573 ;;		_PWM_Duty
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function ___ftadd
  1579  06DD                     ___ftadd:	
  1580                           
  1581                           ;incstack = 0
  1582                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1583  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1584  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1585  06DF  0840               	movf	___ftadd@f1,w
  1586  06E0  00C6               	movwf	??___ftadd
  1587  06E1  0841               	movf	___ftadd@f1+1,w
  1588  06E2  00C7               	movwf	??___ftadd+1
  1589  06E3  0842               	movf	___ftadd@f1+2,w
  1590  06E4  00C8               	movwf	??___ftadd+2
  1591  06E5  1003               	clrc
  1592  06E6  0D47               	rlf	??___ftadd+1,w
  1593  06E7  0D48               	rlf	??___ftadd+2,w
  1594  06E8  00C9               	movwf	??___ftadd+3
  1595  06E9  0849               	movf	??___ftadd+3,w
  1596  06EA  00CC               	movwf	___ftadd@exp1
  1597  06EB  0843               	movf	___ftadd@f2,w
  1598  06EC  00C6               	movwf	??___ftadd
  1599  06ED  0844               	movf	___ftadd@f2+1,w
  1600  06EE  00C7               	movwf	??___ftadd+1
  1601  06EF  0845               	movf	___ftadd@f2+2,w
  1602  06F0  00C8               	movwf	??___ftadd+2
  1603  06F1  1003               	clrc
  1604  06F2  0D47               	rlf	??___ftadd+1,w
  1605  06F3  0D48               	rlf	??___ftadd+2,w
  1606  06F4  00C9               	movwf	??___ftadd+3
  1607  06F5  0849               	movf	??___ftadd+3,w
  1608  06F6  00CB               	movwf	___ftadd@exp2
  1609  06F7  084C               	movf	___ftadd@exp1,w
  1610  06F8  1903               	btfsc	3,2
  1611  06F9  2F06               	goto	l919
  1612  06FA  084B               	movf	___ftadd@exp2,w
  1613  06FB  024C               	subwf	___ftadd@exp1,w
  1614  06FC  1803               	skipnc
  1615  06FD  2F0D               	goto	l923
  1616  06FE  034C               	decf	___ftadd@exp1,w
  1617  06FF  3AFF               	xorlw	255
  1618  0700  074B               	addwf	___ftadd@exp2,w
  1619  0701  00C6               	movwf	??___ftadd
  1620  0702  3019               	movlw	25
  1621  0703  0246               	subwf	??___ftadd,w
  1622  0704  1C03               	skipc
  1623  0705  2F0D               	goto	l923
  1624  0706                     l919:	
  1625  0706  0843               	movf	___ftadd@f2,w
  1626  0707  00C0               	movwf	?___ftadd
  1627  0708  0844               	movf	___ftadd@f2+1,w
  1628  0709  00C1               	movwf	?___ftadd+1
  1629  070A  0845               	movf	___ftadd@f2+2,w
  1630  070B  00C2               	movwf	?___ftadd+2
  1631  070C  0008               	return
  1632  070D                     l923:	
  1633  070D  084B               	movf	___ftadd@exp2,w
  1634  070E  1903               	btfsc	3,2
  1635  070F  0008               	return
  1636  0710  084C               	movf	___ftadd@exp1,w
  1637  0711  024B               	subwf	___ftadd@exp2,w
  1638  0712  1803               	skipnc
  1639  0713  2F1C               	goto	l929
  1640  0714  034B               	decf	___ftadd@exp2,w
  1641  0715  3AFF               	xorlw	255
  1642  0716  074C               	addwf	___ftadd@exp1,w
  1643  0717  00C6               	movwf	??___ftadd
  1644  0718  3019               	movlw	25
  1645  0719  0246               	subwf	??___ftadd,w
  1646  071A  1803               	btfsc	3,0
  1647  071B  0008               	return
  1648  071C                     l929:	
  1649  071C  3006               	movlw	6
  1650  071D  00C6               	movwf	??___ftadd
  1651  071E  0846               	movf	??___ftadd,w
  1652  071F  00CA               	movwf	___ftadd@sign
  1653  0720  1BC2               	btfsc	___ftadd@f1+2,7
  1654  0721  17CA               	bsf	___ftadd@sign,7
  1655  0722  1BC5               	btfsc	___ftadd@f2+2,7
  1656  0723  174A               	bsf	___ftadd@sign,6
  1657  0724  17C1               	bsf	___ftadd@f1+1,7
  1658  0725  30FF               	movlw	255
  1659  0726  05C0               	andwf	___ftadd@f1,f
  1660  0727  30FF               	movlw	255
  1661  0728  05C1               	andwf	___ftadd@f1+1,f
  1662  0729  3000               	movlw	0
  1663  072A  05C2               	andwf	___ftadd@f1+2,f
  1664  072B  17C4               	bsf	___ftadd@f2+1,7
  1665  072C  30FF               	movlw	255
  1666  072D  05C3               	andwf	___ftadd@f2,f
  1667  072E  30FF               	movlw	255
  1668  072F  05C4               	andwf	___ftadd@f2+1,f
  1669  0730  3000               	movlw	0
  1670  0731  05C5               	andwf	___ftadd@f2+2,f
  1671  0732  084B               	movf	___ftadd@exp2,w
  1672  0733  024C               	subwf	___ftadd@exp1,w
  1673  0734  1803               	skipnc
  1674  0735  2F5C               	goto	l951
  1675  0736                     l941:	
  1676  0736  3001               	movlw	1
  1677  0737                     u1225:	
  1678  0737  1003               	clrc
  1679  0738  0DC3               	rlf	___ftadd@f2,f
  1680  0739  0DC4               	rlf	___ftadd@f2+1,f
  1681  073A  0DC5               	rlf	___ftadd@f2+2,f
  1682  073B  3EFF               	addlw	-1
  1683  073C  1D03               	skipz
  1684  073D  2F37               	goto	u1225
  1685  073E  3001               	movlw	1
  1686  073F  02CB               	subwf	___ftadd@exp2,f
  1687  0740  084B               	movf	___ftadd@exp2,w
  1688  0741  064C               	xorwf	___ftadd@exp1,w
  1689  0742  1903               	skipnz
  1690  0743  2F57               	goto	l949
  1691  0744  3001               	movlw	1
  1692  0745  02CA               	subwf	___ftadd@sign,f
  1693  0746  084A               	movf	___ftadd@sign,w
  1694  0747  3907               	andlw	7
  1695  0748  1903               	btfsc	3,2
  1696  0749  2F57               	goto	l949
  1697  074A  2F36               	goto	l941
  1698  074B                     l947:	
  1699  074B  3001               	movlw	1
  1700  074C                     u1255:	
  1701  074C  1003               	clrc
  1702  074D  0CC2               	rrf	___ftadd@f1+2,f
  1703  074E  0CC1               	rrf	___ftadd@f1+1,f
  1704  074F  0CC0               	rrf	___ftadd@f1,f
  1705  0750  3EFF               	addlw	-1
  1706  0751  1D03               	skipz
  1707  0752  2F4C               	goto	u1255
  1708  0753  3001               	movlw	1
  1709  0754  00C6               	movwf	??___ftadd
  1710  0755  0846               	movf	??___ftadd,w
  1711  0756  07CC               	addwf	___ftadd@exp1,f
  1712  0757                     l949:	
  1713  0757  084C               	movf	___ftadd@exp1,w
  1714  0758  064B               	xorwf	___ftadd@exp2,w
  1715  0759  1903               	btfsc	3,2
  1716  075A  2F85               	goto	l315
  1717  075B  2F4B               	goto	l947
  1718  075C                     l951:	
  1719  075C  084C               	movf	___ftadd@exp1,w
  1720  075D  024B               	subwf	___ftadd@exp2,w
  1721  075E  1803               	skipnc
  1722  075F  2F85               	goto	l315
  1723  0760                     l953:	
  1724  0760  3001               	movlw	1
  1725  0761                     u1285:	
  1726  0761  1003               	clrc
  1727  0762  0DC0               	rlf	___ftadd@f1,f
  1728  0763  0DC1               	rlf	___ftadd@f1+1,f
  1729  0764  0DC2               	rlf	___ftadd@f1+2,f
  1730  0765  3EFF               	addlw	-1
  1731  0766  1D03               	skipz
  1732  0767  2F61               	goto	u1285
  1733  0768  3001               	movlw	1
  1734  0769  02CC               	subwf	___ftadd@exp1,f
  1735  076A  084B               	movf	___ftadd@exp2,w
  1736  076B  064C               	xorwf	___ftadd@exp1,w
  1737  076C  1903               	skipnz
  1738  076D  2F81               	goto	l961
  1739  076E  3001               	movlw	1
  1740  076F  02CA               	subwf	___ftadd@sign,f
  1741  0770  084A               	movf	___ftadd@sign,w
  1742  0771  3907               	andlw	7
  1743  0772  1903               	btfsc	3,2
  1744  0773  2F81               	goto	l961
  1745  0774  2F60               	goto	l953
  1746  0775                     l959:	
  1747  0775  3001               	movlw	1
  1748  0776                     u1315:	
  1749  0776  1003               	clrc
  1750  0777  0CC5               	rrf	___ftadd@f2+2,f
  1751  0778  0CC4               	rrf	___ftadd@f2+1,f
  1752  0779  0CC3               	rrf	___ftadd@f2,f
  1753  077A  3EFF               	addlw	-1
  1754  077B  1D03               	skipz
  1755  077C  2F76               	goto	u1315
  1756  077D  3001               	movlw	1
  1757  077E  00C6               	movwf	??___ftadd
  1758  077F  0846               	movf	??___ftadd,w
  1759  0780  07CB               	addwf	___ftadd@exp2,f
  1760  0781                     l961:	
  1761  0781  084C               	movf	___ftadd@exp1,w
  1762  0782  064B               	xorwf	___ftadd@exp2,w
  1763  0783  1D03               	skipz
  1764  0784  2F75               	goto	l959
  1765  0785                     l315:	
  1766  0785  1FCA               	btfss	___ftadd@sign,7
  1767  0786  2F97               	goto	l965
  1768  0787  30FF               	movlw	255
  1769  0788  06C0               	xorwf	___ftadd@f1,f
  1770  0789  30FF               	movlw	255
  1771  078A  06C1               	xorwf	___ftadd@f1+1,f
  1772  078B  30FF               	movlw	255
  1773  078C  06C2               	xorwf	___ftadd@f1+2,f
  1774  078D  3001               	movlw	1
  1775  078E  07C0               	addwf	___ftadd@f1,f
  1776  078F  3000               	movlw	0
  1777  0790  1803               	skipnc
  1778  0791  3001               	movlw	1
  1779  0792  07C1               	addwf	___ftadd@f1+1,f
  1780  0793  3000               	movlw	0
  1781  0794  1803               	skipnc
  1782  0795  3001               	movlw	1
  1783  0796  07C2               	addwf	___ftadd@f1+2,f
  1784  0797                     l965:	
  1785  0797  1F4A               	btfss	___ftadd@sign,6
  1786  0798  2FA9               	goto	l969
  1787  0799  30FF               	movlw	255
  1788  079A  06C3               	xorwf	___ftadd@f2,f
  1789  079B  30FF               	movlw	255
  1790  079C  06C4               	xorwf	___ftadd@f2+1,f
  1791  079D  30FF               	movlw	255
  1792  079E  06C5               	xorwf	___ftadd@f2+2,f
  1793  079F  3001               	movlw	1
  1794  07A0  07C3               	addwf	___ftadd@f2,f
  1795  07A1  3000               	movlw	0
  1796  07A2  1803               	skipnc
  1797  07A3  3001               	movlw	1
  1798  07A4  07C4               	addwf	___ftadd@f2+1,f
  1799  07A5  3000               	movlw	0
  1800  07A6  1803               	skipnc
  1801  07A7  3001               	movlw	1
  1802  07A8  07C5               	addwf	___ftadd@f2+2,f
  1803  07A9                     l969:	
  1804  07A9  01CA               	clrf	___ftadd@sign
  1805  07AA  0840               	movf	___ftadd@f1,w
  1806  07AB  07C3               	addwf	___ftadd@f2,f
  1807  07AC  0841               	movf	___ftadd@f1+1,w
  1808  07AD  1103               	clrz
  1809  07AE  1803               	skipnc
  1810  07AF  0A41               	incf	___ftadd@f1+1,w
  1811  07B0  1D03               	btfss	3,2
  1812  07B1  07C4               	addwf	___ftadd@f2+1,f
  1813  07B2  0842               	movf	___ftadd@f1+2,w
  1814  07B3  1103               	clrz
  1815  07B4  1803               	skipnc
  1816  07B5  0A42               	incf	___ftadd@f1+2,w
  1817  07B6  1D03               	btfss	3,2
  1818  07B7  07C5               	addwf	___ftadd@f2+2,f
  1819  07B8  1FC5               	btfss	___ftadd@f2+2,7
  1820  07B9  2FCC               	goto	l979
  1821  07BA  30FF               	movlw	255
  1822  07BB  06C3               	xorwf	___ftadd@f2,f
  1823  07BC  30FF               	movlw	255
  1824  07BD  06C4               	xorwf	___ftadd@f2+1,f
  1825  07BE  30FF               	movlw	255
  1826  07BF  06C5               	xorwf	___ftadd@f2+2,f
  1827  07C0  3001               	movlw	1
  1828  07C1  07C3               	addwf	___ftadd@f2,f
  1829  07C2  3000               	movlw	0
  1830  07C3  1803               	skipnc
  1831  07C4  3001               	movlw	1
  1832  07C5  07C4               	addwf	___ftadd@f2+1,f
  1833  07C6  3000               	movlw	0
  1834  07C7  1803               	skipnc
  1835  07C8  3001               	movlw	1
  1836  07C9  07C5               	addwf	___ftadd@f2+2,f
  1837  07CA  01CA               	clrf	___ftadd@sign
  1838  07CB  0ACA               	incf	___ftadd@sign,f
  1839  07CC                     l979:	
  1840  07CC  0843               	movf	___ftadd@f2,w
  1841  07CD  00F0               	movwf	___ftpack@arg
  1842  07CE  0844               	movf	___ftadd@f2+1,w
  1843  07CF  00F1               	movwf	___ftpack@arg+1
  1844  07D0  0845               	movf	___ftadd@f2+2,w
  1845  07D1  00F2               	movwf	___ftpack@arg+2
  1846  07D2  084C               	movf	___ftadd@exp1,w
  1847  07D3  00C6               	movwf	??___ftadd
  1848  07D4  0846               	movf	??___ftadd,w
  1849  07D5  00F3               	movwf	___ftpack@exp
  1850  07D6  084A               	movf	___ftadd@sign,w
  1851  07D7  00C7               	movwf	??___ftadd+1
  1852  07D8  0847               	movf	??___ftadd+1,w
  1853  07D9  00F4               	movwf	___ftpack@sign
  1854  07DA  120A  118A  22EE   	fcall	___ftpack
  1855  07DD  0870               	movf	?___ftpack,w
  1856  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1857  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1858  07E0  00C0               	movwf	?___ftadd
  1859  07E1  0871               	movf	?___ftpack+1,w
  1860  07E2  00C1               	movwf	?___ftadd+1
  1861  07E3  0872               	movf	?___ftpack+2,w
  1862  07E4  00C2               	movwf	?___ftadd+2
  1863  07E5  0008               	return
  1864  07E6                     __end_of___ftadd:	
  1865                           
  1866                           	psect	text8
  1867  02AC                     __ptext8:	
  1868 ;; *************** function ___altoft *****************
  1869 ;; Defined at:
  1870 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  c               4    6[BANK0 ] long 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  sign            1   12[COMMON] unsigned char 
  1875 ;;  exp             1   11[COMMON] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  3    6[BANK0 ] float 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, pclath, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       4       0       0       0
  1886 ;;      Locals:         2       0       0       0       0
  1887 ;;      Temps:          2       0       0       0       0
  1888 ;;      Totals:         4       4       0       0       0
  1889 ;;Total ram usage:        8 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    1
  1892 ;; This function calls:
  1893 ;;		___ftpack
  1894 ;; This function is called by:
  1895 ;;		_PWM_Duty
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           
  1900                           ;psect for function ___altoft
  1901  02AC                     ___altoft:	
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  1905  02AC  01FC               	clrf	___altoft@sign
  1906  02AD  308E               	movlw	142
  1907  02AE  00F9               	movwf	??___altoft
  1908  02AF  0879               	movf	??___altoft,w
  1909  02B0  00FB               	movwf	___altoft@exp
  1910  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1911  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1912  02B3  1FA9               	btfss	___altoft@c+3,7
  1913  02B4  2AC2               	goto	l907
  1914  02B5  09A6               	comf	___altoft@c,f
  1915  02B6  09A7               	comf	___altoft@c+1,f
  1916  02B7  09A8               	comf	___altoft@c+2,f
  1917  02B8  09A9               	comf	___altoft@c+3,f
  1918  02B9  0AA6               	incf	___altoft@c,f
  1919  02BA  1903               	skipnz
  1920  02BB  0AA7               	incf	___altoft@c+1,f
  1921  02BC  1903               	skipnz
  1922  02BD  0AA8               	incf	___altoft@c+2,f
  1923  02BE  1903               	skipnz
  1924  02BF  0AA9               	incf	___altoft@c+3,f
  1925  02C0  01FC               	clrf	___altoft@sign
  1926  02C1  0AFC               	incf	___altoft@sign,f
  1927  02C2                     l907:	
  1928  02C2  30FF               	movlw	255
  1929  02C3  0529               	andwf	___altoft@c+3,w
  1930  02C4  1903               	btfsc	3,2
  1931  02C5  2AD4               	goto	l909
  1932  02C6  3001               	movlw	1
  1933  02C7                     u1115:	
  1934  02C7  1003               	clrc
  1935  02C8  0CA9               	rrf	___altoft@c+3,f
  1936  02C9  0CA8               	rrf	___altoft@c+2,f
  1937  02CA  0CA7               	rrf	___altoft@c+1,f
  1938  02CB  0CA6               	rrf	___altoft@c,f
  1939  02CC  3EFF               	addlw	-1
  1940  02CD  1D03               	skipz
  1941  02CE  2AC7               	goto	u1115
  1942  02CF  3001               	movlw	1
  1943  02D0  00F9               	movwf	??___altoft
  1944  02D1  0879               	movf	??___altoft,w
  1945  02D2  07FB               	addwf	___altoft@exp,f
  1946  02D3  2AC2               	goto	l907
  1947  02D4                     l909:	
  1948  02D4  0826               	movf	___altoft@c,w
  1949  02D5  00F0               	movwf	___ftpack@arg
  1950  02D6  0827               	movf	___altoft@c+1,w
  1951  02D7  00F1               	movwf	___ftpack@arg+1
  1952  02D8  0828               	movf	___altoft@c+2,w
  1953  02D9  00F2               	movwf	___ftpack@arg+2
  1954  02DA  087B               	movf	___altoft@exp,w
  1955  02DB  00F9               	movwf	??___altoft
  1956  02DC  0879               	movf	??___altoft,w
  1957  02DD  00F3               	movwf	___ftpack@exp
  1958  02DE  087C               	movf	___altoft@sign,w
  1959  02DF  00FA               	movwf	??___altoft+1
  1960  02E0  087A               	movf	??___altoft+1,w
  1961  02E1  00F4               	movwf	___ftpack@sign
  1962  02E2  120A  118A  22EE   	fcall	___ftpack
  1963  02E5  0870               	movf	?___ftpack,w
  1964  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1965  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1966  02E8  00A6               	movwf	?___altoft
  1967  02E9  0871               	movf	?___ftpack+1,w
  1968  02EA  00A7               	movwf	?___altoft+1
  1969  02EB  0872               	movf	?___ftpack+2,w
  1970  02EC  00A8               	movwf	?___altoft+2
  1971  02ED  0008               	return
  1972  02EE                     __end_of___altoft:	
  1973                           
  1974                           	psect	text9
  1975  02EE                     __ptext9:	
  1976 ;; *************** function ___ftpack *****************
  1977 ;; Defined at:
  1978 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  1979 ;; Parameters:    Size  Location     Type
  1980 ;;  arg             3    0[COMMON] unsigned um
  1981 ;;  exp             1    3[COMMON] unsigned char 
  1982 ;;  sign            1    4[COMMON] unsigned char 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;		None
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  3    0[COMMON] float 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         5       0       0       0       0
  1995 ;;      Locals:         0       0       0       0       0
  1996 ;;      Temps:          3       0       0       0       0
  1997 ;;      Totals:         8       0       0       0       0
  1998 ;;Total ram usage:        8 bytes
  1999 ;; Hardware stack levels used:    1
  2000 ;; This function calls:
  2001 ;;		Nothing
  2002 ;; This function is called by:
  2003 ;;		___altoft
  2004 ;;		___ftadd
  2005 ;;		___ftdiv
  2006 ;;		___ftmul
  2007 ;;		___lwtoft
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           
  2012                           ;psect for function ___ftpack
  2013  02EE                     ___ftpack:	
  2014                           
  2015                           ;incstack = 0
  2016                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2017  02EE  0873               	movf	___ftpack@exp,w
  2018  02EF  1903               	btfsc	3,2
  2019  02F0  2AF6               	goto	l829
  2020  02F1  0872               	movf	___ftpack@arg+2,w
  2021  02F2  0471               	iorwf	___ftpack@arg+1,w
  2022  02F3  0470               	iorwf	___ftpack@arg,w
  2023  02F4  1D03               	skipz
  2024  02F5  2B09               	goto	l835
  2025  02F6                     l829:	
  2026  02F6  3000               	movlw	0
  2027  02F7  00F0               	movwf	?___ftpack
  2028  02F8  3000               	movlw	0
  2029  02F9  00F1               	movwf	?___ftpack+1
  2030  02FA  3000               	movlw	0
  2031  02FB  00F2               	movwf	?___ftpack+2
  2032  02FC  0008               	return
  2033  02FD                     l833:	
  2034  02FD  3001               	movlw	1
  2035  02FE  00F5               	movwf	??___ftpack
  2036  02FF  0875               	movf	??___ftpack,w
  2037  0300  07F3               	addwf	___ftpack@exp,f
  2038  0301  3001               	movlw	1
  2039  0302                     u905:	
  2040  0302  1003               	clrc
  2041  0303  0CF2               	rrf	___ftpack@arg+2,f
  2042  0304  0CF1               	rrf	___ftpack@arg+1,f
  2043  0305  0CF0               	rrf	___ftpack@arg,f
  2044  0306  3EFF               	addlw	-1
  2045  0307  1D03               	skipz
  2046  0308  2B02               	goto	u905
  2047  0309                     l835:	
  2048  0309  30FE               	movlw	254
  2049  030A  0572               	andwf	___ftpack@arg+2,w
  2050  030B  1903               	btfsc	3,2
  2051  030C  2B24               	goto	l284
  2052  030D  2AFD               	goto	l833
  2053  030E                     l837:	
  2054  030E  3001               	movlw	1
  2055  030F  00F5               	movwf	??___ftpack
  2056  0310  0875               	movf	??___ftpack,w
  2057  0311  07F3               	addwf	___ftpack@exp,f
  2058  0312  3001               	movlw	1
  2059  0313  07F0               	addwf	___ftpack@arg,f
  2060  0314  3000               	movlw	0
  2061  0315  1803               	skipnc
  2062  0316  3001               	movlw	1
  2063  0317  07F1               	addwf	___ftpack@arg+1,f
  2064  0318  3000               	movlw	0
  2065  0319  1803               	skipnc
  2066  031A  3001               	movlw	1
  2067  031B  07F2               	addwf	___ftpack@arg+2,f
  2068  031C  3001               	movlw	1
  2069  031D                     u925:	
  2070  031D  1003               	clrc
  2071  031E  0CF2               	rrf	___ftpack@arg+2,f
  2072  031F  0CF1               	rrf	___ftpack@arg+1,f
  2073  0320  0CF0               	rrf	___ftpack@arg,f
  2074  0321  3EFF               	addlw	-1
  2075  0322  1D03               	skipz
  2076  0323  2B1D               	goto	u925
  2077  0324                     l284:	
  2078  0324  30FF               	movlw	255
  2079  0325  0572               	andwf	___ftpack@arg+2,w
  2080  0326  1903               	btfsc	3,2
  2081  0327  2B33               	goto	l845
  2082  0328  2B0E               	goto	l837
  2083  0329                     l843:	
  2084  0329  3001               	movlw	1
  2085  032A  02F3               	subwf	___ftpack@exp,f
  2086  032B  3001               	movlw	1
  2087  032C                     u945:	
  2088  032C  1003               	clrc
  2089  032D  0DF0               	rlf	___ftpack@arg,f
  2090  032E  0DF1               	rlf	___ftpack@arg+1,f
  2091  032F  0DF2               	rlf	___ftpack@arg+2,f
  2092  0330  3EFF               	addlw	-1
  2093  0331  1D03               	skipz
  2094  0332  2B2C               	goto	u945
  2095  0333                     l845:	
  2096  0333  1BF1               	btfsc	___ftpack@arg+1,7
  2097  0334  2B39               	goto	l291
  2098  0335  3002               	movlw	2
  2099  0336  0273               	subwf	___ftpack@exp,w
  2100  0337  1803               	skipnc
  2101  0338  2B29               	goto	l843
  2102  0339                     l291:	
  2103  0339  1873               	btfsc	___ftpack@exp,0
  2104  033A  2B41               	goto	l292
  2105  033B  30FF               	movlw	255
  2106  033C  05F0               	andwf	___ftpack@arg,f
  2107  033D  307F               	movlw	127
  2108  033E  05F1               	andwf	___ftpack@arg+1,f
  2109  033F  30FF               	movlw	255
  2110  0340  05F2               	andwf	___ftpack@arg+2,f
  2111  0341                     l292:	
  2112  0341  1003               	clrc
  2113  0342  0CF3               	rrf	___ftpack@exp,f
  2114  0343  0873               	movf	___ftpack@exp,w
  2115  0344  00F5               	movwf	??___ftpack
  2116  0345  01F6               	clrf	??___ftpack+1
  2117  0346  01F7               	clrf	??___ftpack+2
  2118  0347  3010               	movlw	16
  2119  0348                     u985:	
  2120  0348  1003               	clrc
  2121  0349  0DF5               	rlf	??___ftpack,f
  2122  034A  0DF6               	rlf	??___ftpack+1,f
  2123  034B  0DF7               	rlf	??___ftpack+2,f
  2124  034C  3EFF               	addlw	-1
  2125  034D  1D03               	skipz
  2126  034E  2B48               	goto	u985
  2127  034F  0875               	movf	??___ftpack,w
  2128  0350  04F0               	iorwf	___ftpack@arg,f
  2129  0351  0876               	movf	??___ftpack+1,w
  2130  0352  04F1               	iorwf	___ftpack@arg+1,f
  2131  0353  0877               	movf	??___ftpack+2,w
  2132  0354  04F2               	iorwf	___ftpack@arg+2,f
  2133  0355  0874               	movf	___ftpack@sign,w
  2134  0356  1903               	btfsc	3,2
  2135  0357  0008               	return
  2136  0358  17F2               	bsf	___ftpack@arg+2,7
  2137  0359  0008               	return
  2138  035A                     __end_of___ftpack:	
  2139                           
  2140                           	psect	text10
  2141  03E8                     __ptext10:	
  2142 ;; *************** function ___aldiv *****************
  2143 ;; Defined at:
  2144 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  divisor         4    0[COMMON] long 
  2147 ;;  dividend        4    4[COMMON] long 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  quotient        4    2[BANK0 ] long 
  2150 ;;  sign            1    1[BANK0 ] unsigned char 
  2151 ;;  counter         1    0[BANK0 ] unsigned char 
  2152 ;; Return value:  Size  Location     Type
  2153 ;;                  4    0[COMMON] long 
  2154 ;; Registers used:
  2155 ;;		wreg, status,2, status,0
  2156 ;; Tracked objects:
  2157 ;;		On entry : 0/0
  2158 ;;		On exit  : 0/0
  2159 ;;		Unchanged: 0/0
  2160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2161 ;;      Params:         8       0       0       0       0
  2162 ;;      Locals:         0       6       0       0       0
  2163 ;;      Temps:          1       0       0       0       0
  2164 ;;      Totals:         9       6       0       0       0
  2165 ;;Total ram usage:       15 bytes
  2166 ;; Hardware stack levels used:    1
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_PWM_Initialize
  2171 ;;		_PWM_Duty
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           
  2176                           ;psect for function ___aldiv
  2177  03E8                     ___aldiv:	
  2178                           
  2179                           ;incstack = 0
  2180                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2181  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2182  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2183  03EA  01A1               	clrf	___aldiv@sign
  2184  03EB  1FF3               	btfss	___aldiv@divisor+3,7
  2185  03EC  2BFA               	goto	l178
  2186  03ED  09F0               	comf	___aldiv@divisor,f
  2187  03EE  09F1               	comf	___aldiv@divisor+1,f
  2188  03EF  09F2               	comf	___aldiv@divisor+2,f
  2189  03F0  09F3               	comf	___aldiv@divisor+3,f
  2190  03F1  0AF0               	incf	___aldiv@divisor,f
  2191  03F2  1903               	skipnz
  2192  03F3  0AF1               	incf	___aldiv@divisor+1,f
  2193  03F4  1903               	skipnz
  2194  03F5  0AF2               	incf	___aldiv@divisor+2,f
  2195  03F6  1903               	skipnz
  2196  03F7  0AF3               	incf	___aldiv@divisor+3,f
  2197  03F8  01A1               	clrf	___aldiv@sign
  2198  03F9  0AA1               	incf	___aldiv@sign,f
  2199  03FA                     l178:	
  2200  03FA  1FF7               	btfss	___aldiv@dividend+3,7
  2201  03FB  2C0B               	goto	l867
  2202  03FC  09F4               	comf	___aldiv@dividend,f
  2203  03FD  09F5               	comf	___aldiv@dividend+1,f
  2204  03FE  09F6               	comf	___aldiv@dividend+2,f
  2205  03FF  09F7               	comf	___aldiv@dividend+3,f
  2206  0400  0AF4               	incf	___aldiv@dividend,f
  2207  0401  1903               	skipnz
  2208  0402  0AF5               	incf	___aldiv@dividend+1,f
  2209  0403  1903               	skipnz
  2210  0404  0AF6               	incf	___aldiv@dividend+2,f
  2211  0405  1903               	skipnz
  2212  0406  0AF7               	incf	___aldiv@dividend+3,f
  2213  0407  3001               	movlw	1
  2214  0408  00F8               	movwf	??___aldiv
  2215  0409  0878               	movf	??___aldiv,w
  2216  040A  06A1               	xorwf	___aldiv@sign,f
  2217  040B                     l867:	
  2218  040B  3000               	movlw	0
  2219  040C  00A5               	movwf	___aldiv@quotient+3
  2220  040D  3000               	movlw	0
  2221  040E  00A4               	movwf	___aldiv@quotient+2
  2222  040F  3000               	movlw	0
  2223  0410  00A3               	movwf	___aldiv@quotient+1
  2224  0411  3000               	movlw	0
  2225  0412  00A2               	movwf	___aldiv@quotient
  2226  0413  0873               	movf	___aldiv@divisor+3,w
  2227  0414  0472               	iorwf	___aldiv@divisor+2,w
  2228  0415  0471               	iorwf	___aldiv@divisor+1,w
  2229  0416  0470               	iorwf	___aldiv@divisor,w
  2230  0417  1903               	skipnz
  2231  0418  2C60               	goto	l889
  2232  0419  01A0               	clrf	___aldiv@counter
  2233  041A  0AA0               	incf	___aldiv@counter,f
  2234  041B                     l875:	
  2235  041B  1BF3               	btfsc	___aldiv@divisor+3,7
  2236  041C  2C2B               	goto	l877
  2237  041D  3001               	movlw	1
  2238  041E  00F8               	movwf	??___aldiv
  2239  041F                     u1035:	
  2240  041F  1003               	clrc
  2241  0420  0DF0               	rlf	___aldiv@divisor,f
  2242  0421  0DF1               	rlf	___aldiv@divisor+1,f
  2243  0422  0DF2               	rlf	___aldiv@divisor+2,f
  2244  0423  0DF3               	rlf	___aldiv@divisor+3,f
  2245  0424  0BF8               	decfsz	??___aldiv,f
  2246  0425  2C1F               	goto	u1035
  2247  0426  3001               	movlw	1
  2248  0427  00F8               	movwf	??___aldiv
  2249  0428  0878               	movf	??___aldiv,w
  2250  0429  07A0               	addwf	___aldiv@counter,f
  2251  042A  2C1B               	goto	l875
  2252  042B                     l877:	
  2253  042B  3001               	movlw	1
  2254  042C  00F8               	movwf	??___aldiv
  2255  042D                     u1055:	
  2256  042D  1003               	clrc
  2257  042E  0DA2               	rlf	___aldiv@quotient,f
  2258  042F  0DA3               	rlf	___aldiv@quotient+1,f
  2259  0430  0DA4               	rlf	___aldiv@quotient+2,f
  2260  0431  0DA5               	rlf	___aldiv@quotient+3,f
  2261  0432  0BF8               	decfsz	??___aldiv,f
  2262  0433  2C2D               	goto	u1055
  2263  0434  0873               	movf	___aldiv@divisor+3,w
  2264  0435  0277               	subwf	___aldiv@dividend+3,w
  2265  0436  1D03               	skipz
  2266  0437  2C42               	goto	u1065
  2267  0438  0872               	movf	___aldiv@divisor+2,w
  2268  0439  0276               	subwf	___aldiv@dividend+2,w
  2269  043A  1D03               	skipz
  2270  043B  2C42               	goto	u1065
  2271  043C  0871               	movf	___aldiv@divisor+1,w
  2272  043D  0275               	subwf	___aldiv@dividend+1,w
  2273  043E  1D03               	skipz
  2274  043F  2C42               	goto	u1065
  2275  0440  0870               	movf	___aldiv@divisor,w
  2276  0441  0274               	subwf	___aldiv@dividend,w
  2277  0442                     u1065:	
  2278  0442  1C03               	skipc
  2279  0443  2C53               	goto	l885
  2280  0444  0870               	movf	___aldiv@divisor,w
  2281  0445  02F4               	subwf	___aldiv@dividend,f
  2282  0446  0871               	movf	___aldiv@divisor+1,w
  2283  0447  1C03               	skipc
  2284  0448  0F71               	incfsz	___aldiv@divisor+1,w
  2285  0449  02F5               	subwf	___aldiv@dividend+1,f
  2286  044A  0872               	movf	___aldiv@divisor+2,w
  2287  044B  1C03               	skipc
  2288  044C  0F72               	incfsz	___aldiv@divisor+2,w
  2289  044D  02F6               	subwf	___aldiv@dividend+2,f
  2290  044E  0873               	movf	___aldiv@divisor+3,w
  2291  044F  1C03               	skipc
  2292  0450  0F73               	incfsz	___aldiv@divisor+3,w
  2293  0451  02F7               	subwf	___aldiv@dividend+3,f
  2294  0452  1422               	bsf	___aldiv@quotient,0
  2295  0453                     l885:	
  2296  0453  3001               	movlw	1
  2297  0454                     u1075:	
  2298  0454  1003               	clrc
  2299  0455  0CF3               	rrf	___aldiv@divisor+3,f
  2300  0456  0CF2               	rrf	___aldiv@divisor+2,f
  2301  0457  0CF1               	rrf	___aldiv@divisor+1,f
  2302  0458  0CF0               	rrf	___aldiv@divisor,f
  2303  0459  3EFF               	addlw	-1
  2304  045A  1D03               	skipz
  2305  045B  2C54               	goto	u1075
  2306  045C  3001               	movlw	1
  2307  045D  02A0               	subwf	___aldiv@counter,f
  2308  045E  1D03               	btfss	3,2
  2309  045F  2C2B               	goto	l877
  2310  0460                     l889:	
  2311  0460  0821               	movf	___aldiv@sign,w
  2312  0461  1903               	btfsc	3,2
  2313  0462  2C6E               	goto	l893
  2314  0463  09A2               	comf	___aldiv@quotient,f
  2315  0464  09A3               	comf	___aldiv@quotient+1,f
  2316  0465  09A4               	comf	___aldiv@quotient+2,f
  2317  0466  09A5               	comf	___aldiv@quotient+3,f
  2318  0467  0AA2               	incf	___aldiv@quotient,f
  2319  0468  1903               	skipnz
  2320  0469  0AA3               	incf	___aldiv@quotient+1,f
  2321  046A  1903               	skipnz
  2322  046B  0AA4               	incf	___aldiv@quotient+2,f
  2323  046C  1903               	skipnz
  2324  046D  0AA5               	incf	___aldiv@quotient+3,f
  2325  046E                     l893:	
  2326  046E  0825               	movf	___aldiv@quotient+3,w
  2327  046F  00F3               	movwf	?___aldiv+3
  2328  0470  0824               	movf	___aldiv@quotient+2,w
  2329  0471  00F2               	movwf	?___aldiv+2
  2330  0472  0823               	movf	___aldiv@quotient+1,w
  2331  0473  00F1               	movwf	?___aldiv+1
  2332  0474  0822               	movf	___aldiv@quotient,w
  2333  0475  00F0               	movwf	?___aldiv
  2334  0476  0008               	return
  2335  0477                     __end_of___aldiv:	
  2336  007E                     btemp	set	126	;btemp
  2337  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     65      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_PWM_Initialize
    _PWM_Initialize->___aldiv
    _PWM_Duty->___altoft
    ___lwtoft->___ftpack
    ___fttol->___altoft
    ___ftmul->___altoft
    ___ftdiv->___lwtoft
    ___ftadd->___altoft
    ___altoft->___aldiv

Critical Paths under _main in BANK0

    _main->_PWM_Duty
    _PWM_Initialize->___aldiv
    _PWM_Duty->___fttol
    ___fttol->___ftadd
    ___ftmul->___ftdiv
    ___ftadd->___ftmul
    ___altoft->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12546
                           _PWM_Duty
                     _PWM_Initialize
 ---------------------------------------------------------------------------------
 (1) _PWM_Initialize                                       4     4      0     512
                                              9 COMMON     4     4      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _PWM_Duty                                             6     4      2   12034
                                             59 BANK0      6     4      2
                            ___aldiv
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1874
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                             45 BANK0     14    10      4
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2284
                                             16 BANK0     16    10      6
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2132
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    2772
                                             32 BANK0     13     7      6
                            ___aldiv (ARG)
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___altoft                                             8     4      4    1937
                                              9 COMMON     4     4      0
                                              6 BANK0      4     0      4
                            ___aldiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1746
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM_Duty
     ___aldiv
     ___altoft
       ___aldiv (ARG)
       ___ftpack (ARG)
     ___ftadd
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftdiv
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___aldiv (ARG)
       ___altoft (ARG)
         ___aldiv (ARG)
         ___ftpack (ARG)
       ___ftadd (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___aldiv (ARG)
           ___altoft (ARG)
             ___aldiv (ARG)
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___aldiv (ARG)
         ___altoft (ARG)
           ___aldiv (ARG)
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _PWM_Initialize
     ___aldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     41      45       5       86.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      52      12        0.0%
ABS                  0      0      52       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Nov 26 23:20:00 2022

           ___altoft@exp 007B  __size_of_PWM_Initialize 003F            ___altoft@sign 007C  
                     l36 026C             ___ftadd@exp1 004C             ___ftadd@exp2 004B  
           ___ftadd@sign 004A                      l315 0785                      l178 03FA  
                    l291 0339                      l292 0341                      l284 0324  
                    l375 03CE                      l833 02FD                      l843 0329  
                    l835 0309                      l907 02C2                      l923 070D  
                    l845 0333                      l837 030E                      l829 02F6  
                    l909 02D4                      l941 0736                      l951 075C  
                    l919 0706                      l961 0781                      l953 0760  
                    l929 071C                      l875 041B                      l867 040B  
                    l947 074B                      l893 046E                      l885 0453  
                    l877 042B                      l965 0797                      l949 0757  
                    l959 0775                      l889 0460                      l969 07A9  
                    l979 07CC                      l995 04A5                      l989 048F  
                    _PR2 0092                      u905 0302                      u925 031D  
                    u945 032C                      u985 0348             ___ftdiv@cntr 002A  
           ___ftdiv@sign 002F                     l1101 03B6                     l1031 0547  
                   l1017 0509                     l1009 04EA                     l1113 03DF  
                   l1107 03C3                     l1061 05C4                     l1053 05AC  
                   l1037 055D                     l1109 03D1                     l1141 06CF  
                   l1065 05D4                     l1049 059C                     l1081 0374  
                   l1099 03A6                     u1035 041F                     u1115 02C7  
                   u1055 042D                     u1065 0442                     u1225 0737  
                   u1075 0454                     u1315 0776                     u1405 04C9  
                   u1255 074C                     u1415 04EB                     u1425 04FC  
                   u1435 050A                     u1515 05AD                     u1285 0761  
                   u1525 05B5                     u1605 037B                     u1705 0281  
                   u1730 06CC                     u1395 04B7                     u1475 0569  
                   u1635 03A7                     u1565 05D5                     u1485 057B  
                   u1725 066F                     u1575 05DD                     u1665 03C5  
                   u1695 0278                     _main 0259             ___ftpack@arg 0070  
           ___ftpack@exp 0073                     btemp 007E                     start 0000  
           ___ftmul@cntr 003E             ___ftmul@sign 003F             ___fttol@exp1 005A  
           ___fttol@lval 0056          __end_of___aldiv 0477                    ?_main 0070  
                  _CCP1X 00BD                    _CCP1Y 00BC          __end_of___ftadd 07E6  
        __end_of___ftdiv 052F          __end_of___ftmul 0602          __end_of___fttol 03E8  
                  _TRISC 0087            ___ftpack@sign 0074         __end_of_PWM_Duty 06DD  
                  status 0003                    wtemp0 007E          __initialization 07E6  
           __end_of_main 026D                   ??_main 007D            ___fttol@sign1 0055  
                 _CCP1M2 00BA                   _CCP1M3 00BB         __end_of___altoft 02EE  
                 _CCPR1L 0015         __end_of___ftpack 035A         __end_of___lwtoft 0259  
                 _TMR2ON 0092                   _TRISC2 043A                ??___aldiv 0078  
              ??___ftadd 0046           _PWM_Initialize 026D                ??___ftdiv 0026  
              ??___ftmul 0036                ??___fttol 0051    ___ftmul@f3_as_product 003B  
           PWM_Duty@duty 005B  __end_of__initialization 07FC               ___altoft@c 0026  
             ___ftadd@f1 0040               ___ftadd@f2 0043               ___ftdiv@f1 0023  
             ___ftdiv@f2 0020               ___ftdiv@f3 002B               ___ftmul@f1 0030  
             ___ftmul@f2 0033   __end_of_PWM_Initialize 02AC               ___fttol@f1 004D  
         __pcstackCOMMON 0070             __pidataBANK0 0241               ___lwtoft@c 0078  
              ?_PWM_Duty 005B          ?_PWM_Initialize 0070               __pmaintext 0259  
              ?___altoft 0026                ?___ftpack 0070               ??_PWM_Duty 005D  
                _T2CKPS0 0090                  _T2CKPS1 0091                ?___lwtoft 0078  
                ___aldiv 03E8                  ___ftadd 06DD                  ___ftdiv 0477  
                ___ftmul 052F                  ___fttol 035A               ??___altoft 0079  
             ??___ftpack 0075                  __ptext1 026D                  __ptext2 0602  
                __ptext3 0245                  __ptext4 035A                  __ptext5 052F  
                __ptext6 0477                  __ptext7 06DD                  __ptext8 02AC  
                __ptext9 02EE               ??___lwtoft 007B         ___aldiv@dividend 0074  
   end_of_initialization 07FC         ___aldiv@quotient 0022              ___ftdiv@exp 002E  
            ___ftmul@exp 003A      start_initialization 07E6        __size_of_PWM_Duty 00DB  
       ??_PWM_Initialize 0079              __pdataBANK0 0061        __size_of___altoft 0042  
      __size_of___ftpack 006C                ___latbits 0002        __size_of___lwtoft 0014  
          __pcstackBANK0 0020                 ?___aldiv 0070                 ?___ftadd 0040  
               ?___ftdiv 0020                 ?___ftmul 0030                 ?___fttol 004D  
        ___aldiv@divisor 0070          ___aldiv@counter 0020                 _PWM_Duty 0602  
               _PWM_freq 0061         __size_of___aldiv 008F         __size_of___ftadd 0109  
       __size_of___ftdiv 00B8                 ___altoft 02AC         __size_of___ftmul 00D3  
       __size_of___fttol 008E                 ___ftpack 02EE                 ___lwtoft 0245  
               __ptext10 03E8            __size_of_main 0014             ___aldiv@sign 0021  
