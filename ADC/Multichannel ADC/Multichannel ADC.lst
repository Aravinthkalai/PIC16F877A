

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Thu Jan 30 15:47:01 2020

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_lcd_int
    43                           	FNCALL	_main,_show
    44                           	FNCALL	_main,_cmd
    45                           	FNCALL	_main,_adc
    46                           	FNCALL	_main,_delay
    47                           	FNCALL	_adc,_cmd
    48                           	FNCALL	_adc,_adc_con
    49                           	FNCALL	_adc_con,___lwdiv
    50                           	FNCALL	_adc_con,_dat
    51                           	FNCALL	_adc_con,___lwmod
    52                           	FNCALL	_show,_dat
    53                           	FNCALL	_lcd_int,_cmd
    54                           	FNCALL	_dat,_delay
    55                           	FNCALL	_cmd,_delay
    56                           	FNROOT	_main
    57                           	global	_ADCON0
    58                           psect	text230,local,class=CODE,delta=2
    59                           global __ptext230
    60  0000                     __ptext230:
    61  001F                     _ADCON0	set	31
    62                           	global	_ADRESH
    63  001E                     _ADRESH	set	30
    64                           	global	_PORTD
    65  0008                     _PORTD	set	8
    66                           	global	_CARRY
    67  0018                     _CARRY	set	24
    68                           	global	_GIE
    69  005F                     _GIE	set	95
    70                           	global	_GO_nDONE
    71  00FA                     _GO_nDONE	set	250
    72                           	global	_RC4
    73  003C                     _RC4	set	60
    74                           	global	_RC5
    75  003D                     _RC5	set	61
    76                           	global	_RC6
    77  003E                     _RC6	set	62
    78                           	global	_ADCON1
    79  009F                     _ADCON1	set	159
    80                           	global	_ADRESL
    81  009E                     _ADRESL	set	158
    82                           	global	_TRISC
    83  0087                     _TRISC	set	135
    84                           	global	_TRISD
    85  0088                     _TRISD	set	136
    86                           	global	_TRISA0
    87  0428                     _TRISA0	set	1064
    88                           	global	_EEADR
    89  010D                     _EEADR	set	269
    90                           	global	_EEDATA
    91  010C                     _EEDATA	set	268
    92                           	global	_EECON1
    93  018C                     _EECON1	set	396
    94                           	global	_EECON2
    95  018D                     _EECON2	set	397
    96                           	global	_RD
    97  0C60                     _RD	set	3168
    98                           	global	_WR
    99  0C61                     _WR	set	3169
   100                           	global	_WREN
   101  0C62                     _WREN	set	3170
   102                           psect	strings,class=STRING,delta=2
   103                           global __pstrings
   104  0003                     __pstrings:
   105                           ;	global	stringdir,stringtab,__stringbase
   106  0003                     stringtab:
   107                           ;	String table - string pointers are 1 byte each
   108  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   109  0003  3000               movlw high(stringdir)
   110  0004  008A               movwf pclath
   111  0005  0804               movf fsr,w
   112  0006  0A84               incf fsr
   113  0007  0782               	addwf pc
   114  0008                     __stringbase:
   115  0008  3400               	retlw	0
   116                           psect	strings
   117                           	
   118  0009                     STR_1:	
   119  0009  3441               	retlw	65	;'A'
   120  000A  3444               	retlw	68	;'D'
   121  000B  3443               	retlw	67	;'C'
   122  000C  3420               	retlw	32	;' '
   123  000D  3456               	retlw	86	;'V'
   124  000E  3461               	retlw	97	;'a'
   125  000F  346C               	retlw	108	;'l'
   126  0010  3475               	retlw	117	;'u'
   127  0011  3465               	retlw	101	;'e'
   128  0012  3420               	retlw	32	;' '
   129  0013  343A               	retlw	58	;':'
   130  0014  3400               	retlw	0
   131                           psect	strings
   132                           	file	"Multichannel ADC.as"
   133                           	line	#
   134                           psect cinit,class=CODE,delta=2
   135                           global start_initialization
   136  058E                     start_initialization:
   137                           
   138                           psect cinit,class=CODE,delta=2
   139                           global end_of_initialization
   140                           
   141                           ;End of C runtime variable initialization code
   142                           
   143  058E                     end_of_initialization:
   144  058E  0183               clrf status
   145  058F  120A  118A  2F0B   ljmp _main	;jump to C main() function
   146                           psect	cstackCOMMON,class=COMMON,space=1
   147                           global __pcstackCOMMON
   148  0070                     __pcstackCOMMON:
   149                           	global	?_lcd_int
   150  0070                     ?_lcd_int:	; 0 bytes @ 0x0
   151                           	global	?_show
   152  0070                     ?_show:	; 0 bytes @ 0x0
   153                           	global	?_cmd
   154  0070                     ?_cmd:	; 0 bytes @ 0x0
   155                           	global	?_delay
   156  0070                     ?_delay:	; 0 bytes @ 0x0
   157                           	global	?_adc_con
   158  0070                     ?_adc_con:	; 0 bytes @ 0x0
   159                           	global	?_main
   160  0070                     ?_main:	; 0 bytes @ 0x0
   161                           	global	?_dat
   162  0070                     ?_dat:	; 0 bytes @ 0x0
   163                           	global	?___lwdiv
   164  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   165                           	global	delay@L
   166  0070                     delay@L:	; 2 bytes @ 0x0
   167                           	global	___lwdiv@divisor
   168  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   169  0070                     	ds	2
   170                           	global	??_delay
   171  0072                     ??_delay:	; 0 bytes @ 0x2
   172                           	global	___lwdiv@dividend
   173  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   174  0072                     	ds	1
   175                           	global	delay@i
   176  0073                     delay@i:	; 2 bytes @ 0x3
   177  0073                     	ds	1
   178                           	global	??___lwdiv
   179  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   180  0074                     	ds	1
   181                           	global	delay@j
   182  0075                     delay@j:	; 2 bytes @ 0x5
   183                           	global	___lwdiv@quotient
   184  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   185  0075                     	ds	2
   186                           	global	??_cmd
   187  0077                     ??_cmd:	; 0 bytes @ 0x7
   188                           	global	??_dat
   189  0077                     ??_dat:	; 0 bytes @ 0x7
   190                           	global	cmd@a
   191  0077                     cmd@a:	; 1 bytes @ 0x7
   192                           	global	dat@b
   193  0077                     dat@b:	; 1 bytes @ 0x7
   194                           	global	___lwdiv@counter
   195  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   196  0077                     	ds	1
   197                           	global	??_lcd_int
   198  0078                     ??_lcd_int:	; 0 bytes @ 0x8
   199                           	global	??_show
   200  0078                     ??_show:	; 0 bytes @ 0x8
   201                           	global	?___lwmod
   202  0078                     ?___lwmod:	; 2 bytes @ 0x8
   203                           	global	___lwmod@divisor
   204  0078                     ___lwmod@divisor:	; 2 bytes @ 0x8
   205  0078                     	ds	1
   206                           	global	show@s
   207  0079                     show@s:	; 1 bytes @ 0x9
   208  0079                     	ds	1
   209                           	global	___lwmod@dividend
   210  007A                     ___lwmod@dividend:	; 2 bytes @ 0xA
   211  007A                     	ds	2
   212                           	global	??___lwmod
   213  007C                     ??___lwmod:	; 0 bytes @ 0xC
   214  007C                     	ds	1
   215                           	global	___lwmod@counter
   216  007D                     ___lwmod@counter:	; 1 bytes @ 0xD
   217  007D                     	ds	1
   218                           	global	??_adc
   219  007E                     ??_adc:	; 0 bytes @ 0xE
   220                           	global	??_main
   221  007E                     ??_main:	; 0 bytes @ 0xE
   222                           psect	cstackBANK0,class=BANK0,space=1
   223                           global __pcstackBANK0
   224  0020                     __pcstackBANK0:
   225                           	global	??_adc_con
   226  0020                     ??_adc_con:	; 0 bytes @ 0x0
   227  0020                     	ds	2
   228                           	global	adc_con@adcval
   229  0022                     adc_con@adcval:	; 2 bytes @ 0x2
   230  0022                     	ds	2
   231                           	global	?_adc
   232  0024                     ?_adc:	; 0 bytes @ 0x4
   233                           	global	adc@i
   234  0024                     adc@i:	; 2 bytes @ 0x4
   235  0024                     	ds	2
   236                           	global	main@i
   237  0026                     main@i:	; 2 bytes @ 0x6
   238  0026                     	ds	2
   239 ;;Data sizes: Strings 12, constant 0, data 0, bss 0, persistent 0 stack 0
   240 ;;Auto spaces:   Size  Autos    Used
   241 ;; COMMON          14     14      14
   242 ;; BANK0           80      8       8
   243 ;; BANK1           80      0       0
   244 ;; BANK3           96      0       0
   245 ;; BANK2           96      0       0
   246                           
   247 ;;
   248 ;; Pointer list with targets:
   249                           
   250 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   251 ;;
   252 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   253 ;;
   254 ;; show@s	PTR unsigned char  size(1) Largest target is 12
   255 ;;		 -> STR_1(CODE[12]), 
   256 ;;
   257                           
   258                           
   259 ;;
   260 ;; Critical Paths under _main in COMMON
   261 ;;
   262 ;;   _adc_con->___lwmod
   263 ;;   _show->_dat
   264 ;;   _lcd_int->_cmd
   265 ;;   _dat->_delay
   266 ;;   _cmd->_delay
   267 ;;   ___lwmod->___lwdiv
   268 ;;
   269 ;; Critical Paths under _main in BANK0
   270 ;;
   271 ;;   _main->_adc
   272 ;;   _adc->_adc_con
   273 ;;
   274 ;; Critical Paths under _main in BANK1
   275 ;;
   276 ;;   None.
   277 ;;
   278 ;; Critical Paths under _main in BANK3
   279 ;;
   280 ;;   None.
   281 ;;
   282 ;; Critical Paths under _main in BANK2
   283 ;;
   284 ;;   None.
   285                           
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   288 ;;
   289                           
   290 ;;
   291 ;;Call Graph Tables:
   292 ;;
   293 ;; ---------------------------------------------------------------------------------
   294 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   295 ;; ---------------------------------------------------------------------------------
   296 ;; (0) _main                                                 2     2      0    1207
   297 ;;                                              6 BANK0      2     2      0
   298 ;;                            _lcd_int
   299 ;;                               _show
   300 ;;                                _cmd
   301 ;;                                _adc
   302 ;;                              _delay
   303 ;; ---------------------------------------------------------------------------------
   304 ;; (1) _adc                                                  2     0      2     660
   305 ;;                                              4 BANK0      2     0      2
   306 ;;                                _cmd
   307 ;;                            _adc_con
   308 ;; ---------------------------------------------------------------------------------
   309 ;; (2) _adc_con                                              4     4      0     524
   310 ;;                                              0 BANK0      4     4      0
   311 ;;                            ___lwdiv
   312 ;;                                _dat
   313 ;;                            ___lwmod
   314 ;; ---------------------------------------------------------------------------------
   315 ;; (1) _show                                                 2     2      0     159
   316 ;;                                              8 COMMON     2     2      0
   317 ;;                                _dat
   318 ;; ---------------------------------------------------------------------------------
   319 ;; (1) _lcd_int                                              0     0      0     114
   320 ;;                                _cmd
   321 ;; ---------------------------------------------------------------------------------
   322 ;; (3) _dat                                                  1     1      0     114
   323 ;;                                              7 COMMON     1     1      0
   324 ;;                              _delay
   325 ;; ---------------------------------------------------------------------------------
   326 ;; (2) _cmd                                                  1     1      0     114
   327 ;;                                              7 COMMON     1     1      0
   328 ;;                              _delay
   329 ;; ---------------------------------------------------------------------------------
   330 ;; (3) ___lwmod                                              6     2      4     159
   331 ;;                                              8 COMMON     6     2      4
   332 ;;                            ___lwdiv (ARG)
   333 ;; ---------------------------------------------------------------------------------
   334 ;; (3) ___lwdiv                                              8     4      4     162
   335 ;;                                              0 COMMON     8     4      4
   336 ;; ---------------------------------------------------------------------------------
   337 ;; (1) _delay                                                7     5      2      92
   338 ;;                                              0 COMMON     7     5      2
   339 ;; ---------------------------------------------------------------------------------
   340 ;; Estimated maximum stack depth 3
   341 ;; ---------------------------------------------------------------------------------
   342                           
   343 ;; Call Graph Graphs:
   344                           
   345 ;; _main (ROOT)
   346 ;;   _lcd_int
   347 ;;     _cmd
   348 ;;       _delay
   349 ;;   _show
   350 ;;     _dat
   351 ;;       _delay
   352 ;;   _cmd
   353 ;;     _delay
   354 ;;   _adc
   355 ;;     _cmd
   356 ;;       _delay
   357 ;;     _adc_con
   358 ;;       ___lwdiv
   359 ;;       _dat
   360 ;;         _delay
   361 ;;       ___lwmod
   362 ;;         ___lwdiv (ARG)
   363 ;;   _delay
   364 ;;
   365                           
   366 ;; Address spaces:
   367                           
   368 ;;Name               Size   Autos  Total    Cost      Usage
   369 ;;BITCOMMON            E      0       0       0        0.0%
   370 ;;EEDATA             100      0       0       0        0.0%
   371 ;;NULL                 0      0       0       0        0.0%
   372 ;;CODE                 0      0       0       0        0.0%
   373 ;;COMMON               E      E       E       1      100.0%
   374 ;;BITSFR0              0      0       0       1        0.0%
   375 ;;SFR0                 0      0       0       1        0.0%
   376 ;;BITSFR1              0      0       0       2        0.0%
   377 ;;SFR1                 0      0       0       2        0.0%
   378 ;;STACK                0      0       4       2        0.0%
   379 ;;ABS                  0      0       0       3        0.0%
   380 ;;BITBANK0            50      0       0       4        0.0%
   381 ;;BITSFR3              0      0       0       4        0.0%
   382 ;;SFR3                 0      0       0       4        0.0%
   383 ;;BANK0               50      8       8       5       10.0%
   384 ;;BITSFR2              0      0       0       5        0.0%
   385 ;;SFR2                 0      0       0       5        0.0%
   386 ;;BITBANK1            50      0       0       6        0.0%
   387 ;;BANK1               50      0       0       7        0.0%
   388 ;;BITBANK3            60      0       0       8        0.0%
   389 ;;BANK3               60      0       0       9        0.0%
   390 ;;BITBANK2            60      0       0      10        0.0%
   391 ;;BANK2               60      0       0      11        0.0%
   392 ;;DATA                 0      0       0      12        0.0%
   393                           
   394                           	global	_main
   395                           psect	maintext,global,class=CODE,delta=2
   396                           global __pmaintext
   397  070B                     __pmaintext:
   398                           
   399 ;; *************** function _main *****************
   400 ;; Defined at:
   401 ;;		line 14 in file "F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  i               2    6[BANK0 ] int 
   406 ;; Return value:  Size  Location     Type
   407 ;;		None               void
   408 ;; Registers used:
   409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 17F/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   415 ;;      Params:         0       0       0       0       0
   416 ;;      Locals:         0       2       0       0       0
   417 ;;      Temps:          0       0       0       0       0
   418 ;;      Totals:         0       2       0       0       0
   419 ;;Total ram usage:        2 bytes
   420 ;; Hardware stack levels required when called:    4
   421 ;; This function calls:
   422 ;;		_lcd_int
   423 ;;		_show
   424 ;;		_cmd
   425 ;;		_adc
   426 ;;		_delay
   427 ;; This function is called by:
   428 ;;		Startup code after reset
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           psect	maintext
   432                           	file	"F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
   433                           	line	14
   434                           	global	__size_of_main
   435  005B                     	__size_of_main	equ	__end_of_main-_main
   436                           	
   437  070B                     _main:	
   438                           	opt	stack 4
   439                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   440                           	line	16
   441                           	
   442  070B                     l3016:	
   443                           ;multi channel ADC .c: 15: int i;
   444                           ;multi channel ADC .c: 16: TRISD=0;
   445  070B  1683               	bsf	status, 5	;RP0=1, select bank1
   446  070C  1303               	bcf	status, 6	;RP1=0, select bank1
   447  070D  0188               	clrf	(136)^080h	;volatile
   448                           	line	17
   449                           ;multi channel ADC .c: 17: TRISC=0;
   450  070E  0187               	clrf	(135)^080h	;volatile
   451                           	line	18
   452                           	
   453  070F                     l3018:	
   454                           ;multi channel ADC .c: 18: TRISA0=1;
   455  070F  1405               	bsf	(1064/8)^080h,(1064)&7
   456                           	line	19
   457                           	
   458  0710                     l3020:	
   459                           ;multi channel ADC .c: 19: lcd_int();
   460  0710  120A  118A  25BC   	fcall	_lcd_int
              120A  118A         
   461                           	line	20
   462                           	
   463  0715                     l3022:	
   464                           ;multi channel ADC .c: 20: show("ADC Value :");
   465  0715  3001               	movlw	((STR_1-__stringbase))&0ffh
   466  0716  120A  118A  25D5   	fcall	_show
              120A  118A         
   467  071B  2F1C               	goto	l3024
   468                           	line	21
   469                           ;multi channel ADC .c: 21: while(1)
   470                           	
   471  071C                     l697:	
   472                           	line	23
   473                           	
   474  071C                     l3024:	
   475                           ;multi channel ADC .c: 22: {
   476                           ;multi channel ADC .c: 23: for(i=0;i<2;i++)
   477  071C  1283               	bcf	status, 5	;RP0=0, select bank0
   478  071D  1303               	bcf	status, 6	;RP1=0, select bank0
   479  071E  01A6               	clrf	(main@i)
   480  071F  01A7               	clrf	(main@i+1)
   481                           	
   482  0720                     l3026:	
   483  0720  0827               	movf	(main@i+1),w
   484  0721  3A80               	xorlw	80h
   485  0722  00FF               	movwf	btemp+1
   486  0723  3080               	movlw	(high(02h))^80h
   487  0724  027F               	subwf	btemp+1,w
   488  0725  1D03               	skipz
   489  0726  2F29               	goto	u2475
   490  0727  3002               	movlw	low(02h)
   491  0728  0226               	subwf	(main@i),w
   492  0729                     u2475:
   493                           
   494  0729  1C03               	skipc
   495  072A  2F2C               	goto	u2471
   496  072B  2F2D               	goto	u2470
   497  072C                     u2471:
   498  072C  2F2F               	goto	l3030
   499  072D                     u2470:
   500  072D  2F1C               	goto	l3024
   501                           	
   502  072E                     l3028:	
   503  072E  2F1C               	goto	l3024
   504                           	line	24
   505                           	
   506  072F                     l698:	
   507                           	line	25
   508                           	
   509  072F                     l3030:	
   510                           ;multi channel ADC .c: 24: {
   511                           ;multi channel ADC .c: 25: cmd(0xC0);
   512  072F  30C0               	movlw	(0C0h)
   513  0730  120A  118A  2592   	fcall	_cmd
              120A  118A         
   514                           	line	26
   515                           	
   516  0735                     l3032:	
   517                           ;multi channel ADC .c: 26: adc(i);
   518  0735  1283               	bcf	status, 5	;RP0=0, select bank0
   519  0736  1303               	bcf	status, 6	;RP1=0, select bank0
   520  0737  0827               	movf	(main@i+1),w
   521  0738  01A5               	clrf	(?_adc+1)
   522  0739  07A5               	addwf	(?_adc+1)
   523  073A  0826               	movf	(main@i),w
   524  073B  01A4               	clrf	(?_adc)
   525  073C  07A4               	addwf	(?_adc)
   526                           
   527  073D  120A  118A  2678   	fcall	_adc
              120A  118A         
   528                           	line	27
   529                           	
   530  0742                     l3034:	
   531                           ;multi channel ADC .c: 27: delay(50);
   532  0742  3032               	movlw	low(032h)
   533  0743  00F0               	movwf	(?_delay)
   534  0744  3000               	movlw	high(032h)
   535  0745  00F1               	movwf	((?_delay))+1
   536  0746  120A  118A  25F6   	fcall	_delay
              120A  118A         
   537                           	line	23
   538                           	
   539  074B                     l3036:	
   540  074B  3001               	movlw	low(01h)
   541  074C  1283               	bcf	status, 5	;RP0=0, select bank0
   542  074D  1303               	bcf	status, 6	;RP1=0, select bank0
   543  074E  07A6               	addwf	(main@i),f
   544  074F  1803               	skipnc
   545  0750  0AA7               	incf	(main@i+1),f
   546  0751  3000               	movlw	high(01h)
   547  0752  07A7               	addwf	(main@i+1),f
   548                           	
   549  0753                     l3038:	
   550  0753  0827               	movf	(main@i+1),w
   551  0754  3A80               	xorlw	80h
   552  0755  00FF               	movwf	btemp+1
   553  0756  3080               	movlw	(high(02h))^80h
   554  0757  027F               	subwf	btemp+1,w
   555  0758  1D03               	skipz
   556  0759  2F5C               	goto	u2485
   557  075A  3002               	movlw	low(02h)
   558  075B  0226               	subwf	(main@i),w
   559  075C                     u2485:
   560                           
   561  075C  1C03               	skipc
   562  075D  2F5F               	goto	u2481
   563  075E  2F60               	goto	u2480
   564  075F                     u2481:
   565  075F  2F2F               	goto	l3030
   566  0760                     u2480:
   567  0760  2F1C               	goto	l3024
   568                           	
   569  0761                     l699:	
   570  0761  2F1C               	goto	l3024
   571                           	line	29
   572                           	
   573  0762                     l700:	
   574                           	line	21
   575  0762  2F1C               	goto	l3024
   576                           	
   577  0763                     l701:	
   578                           	line	30
   579                           	
   580  0763                     l702:	
   581                           	global	start
   582  0763  120A  118A  2800   	ljmp	start
   583                           	opt stack 0
   584                           GLOBAL	__end_of_main
   585  0766                     	__end_of_main:
   586 ;; =============== function _main ends ============
   587                           
   588                           	signat	_main,88
   589                           	global	_adc
   590                           psect	text231,local,class=CODE,delta=2
   591                           global __ptext231
   592  0678                     __ptext231:
   593                           
   594 ;; *************** function _adc *****************
   595 ;; Defined at:
   596 ;;		line 68 in file "F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  i               2    4[BANK0 ] int 
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;		None               void
   603 ;; Registers used:
   604 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   610 ;;      Params:         0       2       0       0       0
   611 ;;      Locals:         0       0       0       0       0
   612 ;;      Temps:          0       0       0       0       0
   613 ;;      Totals:         0       2       0       0       0
   614 ;;Total ram usage:        2 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    3
   617 ;; This function calls:
   618 ;;		_cmd
   619 ;;		_adc_con
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           psect	text231
   625                           	file	"F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
   626                           	line	68
   627                           	global	__size_of_adc
   628  0045                     	__size_of_adc	equ	__end_of_adc-_adc
   629                           	
   630  0678                     _adc:	
   631                           	opt	stack 4
   632                           ; Regs used in _adc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   633                           	line	69
   634                           	
   635  0678                     l2988:	
   636                           ;multi channel ADC .c: 69: switch(i)
   637  0678  2EAA               	goto	l3010
   638                           	line	71
   639                           ;multi channel ADC .c: 70: {
   640                           ;multi channel ADC .c: 71: case 0:
   641                           	
   642  0679                     l721:	
   643                           	line	72
   644                           	
   645  0679                     l2990:	
   646                           ;multi channel ADC .c: 72: ADCON0=0X4D;
   647  0679  304D               	movlw	(04Dh)
   648  067A  1283               	bcf	status, 5	;RP0=0, select bank0
   649  067B  1303               	bcf	status, 6	;RP1=0, select bank0
   650  067C  009F               	movwf	(31)	;volatile
   651                           	line	73
   652                           	
   653  067D                     l2992:	
   654                           ;multi channel ADC .c: 73: cmd(0xc0);
   655  067D  30C0               	movlw	(0C0h)
   656  067E  120A  118A  2592   	fcall	_cmd
              120A  118A         
   657                           	line	74
   658                           	
   659  0683                     l2994:	
   660                           ;multi channel ADC .c: 74: adc_con();
   661  0683  120A  118A  2766   	fcall	_adc_con
              120A  118A         
   662                           	line	75
   663                           ;multi channel ADC .c: 75: break;
   664  0688  2EBC               	goto	l725
   665                           	line	76
   666                           ;multi channel ADC .c: 76: case 1:
   667                           	
   668  0689                     l723:	
   669                           	line	77
   670                           	
   671  0689                     l2996:	
   672                           ;multi channel ADC .c: 77: ADCON0=0X55;
   673  0689  3055               	movlw	(055h)
   674  068A  1283               	bcf	status, 5	;RP0=0, select bank0
   675  068B  1303               	bcf	status, 6	;RP1=0, select bank0
   676  068C  009F               	movwf	(31)	;volatile
   677                           	line	78
   678                           	
   679  068D                     l2998:	
   680                           ;multi channel ADC .c: 78: cmd(0xc6);
   681  068D  30C6               	movlw	(0C6h)
   682  068E  120A  118A  2592   	fcall	_cmd
              120A  118A         
   683                           	line	79
   684                           	
   685  0693                     l3000:	
   686                           ;multi channel ADC .c: 79: adc_con();
   687  0693  120A  118A  2766   	fcall	_adc_con
              120A  118A         
   688                           	line	80
   689                           ;multi channel ADC .c: 80: break;
   690  0698  2EBC               	goto	l725
   691                           	line	81
   692                           ;multi channel ADC .c: 81: case 2: ADCON0=0X55;
   693                           	
   694  0699                     l724:	
   695                           	
   696  0699                     l3002:	
   697  0699  3055               	movlw	(055h)
   698  069A  1283               	bcf	status, 5	;RP0=0, select bank0
   699  069B  1303               	bcf	status, 6	;RP1=0, select bank0
   700  069C  009F               	movwf	(31)	;volatile
   701                           	line	82
   702                           	
   703  069D                     l3004:	
   704                           ;multi channel ADC .c: 82: cmd(0xca);
   705  069D  30CA               	movlw	(0CAh)
   706  069E  120A  118A  2592   	fcall	_cmd
              120A  118A         
   707                           	line	83
   708                           	
   709  06A3                     l3006:	
   710                           ;multi channel ADC .c: 83: adc_con();
   711  06A3  120A  118A  2766   	fcall	_adc_con
              120A  118A         
   712                           	line	84
   713                           ;multi channel ADC .c: 84: break;
   714  06A8  2EBC               	goto	l725
   715                           	line	85
   716                           	
   717  06A9                     l3008:	
   718                           ;multi channel ADC .c: 85: }
   719  06A9  2EBC               	goto	l725
   720                           	line	69
   721                           	
   722  06AA                     l720:	
   723                           	
   724  06AA                     l3010:	
   725                           	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
   726                           ; Switch size 1, requested type "space"
   727                           ; Number of cases is 1, Range of values is 0 to 0
   728                           ; switch strategies available:
   729                           ; Name         Instructions Cycles
   730                           ; simple_byte            4     3 (average)
   731                           ; direct_byte           11     8 (fixed)
   732                           ; jumptable            260     6 (fixed)
   733                           ; rangetable             5     6 (fixed)
   734                           ; spacedrange            8     9 (fixed)
   735                           ; locatedrange           1     3 (fixed)
   736                           ;	Chosen strategy is simple_byte
   737                           
   738  06AA  1283               	bcf	status, 5	;RP0=0, select bank0
   739  06AB  1303               	bcf	status, 6	;RP1=0, select bank0
   740  06AC  0825               	movf (adc@i+1),w
   741                           	opt asmopt_off
   742  06AD  3A00               	xorlw	0^0	; case 0
   743  06AE  1903               	skipnz
   744  06AF  2EB1               	goto	l3060
   745  06B0  2EBC               	goto	l725
   746                           	opt asmopt_on
   747                           	
   748  06B1                     l3060:	
   749                           ; Switch size 1, requested type "space"
   750                           ; Number of cases is 3, Range of values is 0 to 2
   751                           ; switch strategies available:
   752                           ; Name         Instructions Cycles
   753                           ; simple_byte           10     6 (average)
   754                           ; direct_byte           17     8 (fixed)
   755                           ; jumptable            260     6 (fixed)
   756                           ; rangetable             7     6 (fixed)
   757                           ; spacedrange           12     9 (fixed)
   758                           ; locatedrange           3     3 (fixed)
   759                           ;	Chosen strategy is simple_byte
   760                           
   761  06B1  0824               	movf (adc@i),w
   762                           	opt asmopt_off
   763  06B2  3A00               	xorlw	0^0	; case 0
   764  06B3  1903               	skipnz
   765  06B4  2E79               	goto	l2990
   766  06B5  3A01               	xorlw	1^0	; case 1
   767  06B6  1903               	skipnz
   768  06B7  2E89               	goto	l2996
   769  06B8  3A03               	xorlw	2^1	; case 2
   770  06B9  1903               	skipnz
   771  06BA  2E99               	goto	l3002
   772  06BB  2EBC               	goto	l725
   773                           	opt asmopt_on
   774                           
   775                           	line	85
   776                           	
   777  06BC                     l722:	
   778                           	line	86
   779                           	
   780  06BC                     l725:	
   781  06BC  0008               	return
   782                           	opt stack 0
   783                           GLOBAL	__end_of_adc
   784  06BD                     	__end_of_adc:
   785 ;; =============== function _adc ends ============
   786                           
   787                           	signat	_adc,4216
   788                           	global	_adc_con
   789                           psect	text232,local,class=CODE,delta=2
   790                           global __ptext232
   791  0766                     __ptext232:
   792                           
   793 ;; *************** function _adc_con *****************
   794 ;; Defined at:
   795 ;;		line 88 in file "F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;		None
   798 ;; Auto vars:     Size  Location     Type
   799 ;;  adcval          2    2[BANK0 ] unsigned int 
   800 ;; Return value:  Size  Location     Type
   801 ;;		None               void
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   809 ;;      Params:         0       0       0       0       0
   810 ;;      Locals:         0       2       0       0       0
   811 ;;      Temps:          0       2       0       0       0
   812 ;;      Totals:         0       4       0       0       0
   813 ;;Total ram usage:        4 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    2
   816 ;; This function calls:
   817 ;;		___lwdiv
   818 ;;		_dat
   819 ;;		___lwmod
   820 ;; This function is called by:
   821 ;;		_adc
   822 ;; This function uses a non-reentrant model
   823 ;;
   824                           psect	text232
   825                           	file	"F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
   826                           	line	88
   827                           	global	__size_of_adc_con
   828  009A                     	__size_of_adc_con	equ	__end_of_adc_con-_adc_con
   829                           	
   830  0766                     _adc_con:	
   831                           	opt	stack 4
   832                           ; Regs used in _adc_con: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   833                           	line	90
   834                           	
   835  0766                     l2976:	
   836                           ;multi channel ADC .c: 89: unsigned int adcval;
   837                           ;multi channel ADC .c: 90: ADCON1=0x80;
   838  0766  3080               	movlw	(080h)
   839  0767  1683               	bsf	status, 5	;RP0=1, select bank1
   840  0768  1303               	bcf	status, 6	;RP1=0, select bank1
   841  0769  009F               	movwf	(159)^080h	;volatile
   842                           	line	92
   843                           ;multi channel ADC .c: 92: while(GO_nDONE==1);
   844  076A  2F6B               	goto	l728
   845                           	
   846  076B                     l729:	
   847                           	
   848  076B                     l728:	
   849  076B  1283               	bcf	status, 5	;RP0=0, select bank0
   850  076C  191F               	btfsc	(250/8),(250)&7
   851  076D  2F6F               	goto	u2461
   852  076E  2F70               	goto	u2460
   853  076F                     u2461:
   854  076F  2F6B               	goto	l728
   855  0770                     u2460:
   856  0770  2F71               	goto	l2978
   857                           	
   858  0771                     l730:	
   859                           	line	93
   860                           	
   861  0771                     l2978:	
   862                           ;multi channel ADC .c: 93: adcval=((ADRESH<<8)+(ADRESL));
   863  0771  081E               	movf	(30),w	;volatile
   864  0772  00A0               	movwf	(??_adc_con+0)+0
   865  0773  01A1               	clrf	(??_adc_con+0)+0+1
   866  0774  0820               	movf	(??_adc_con+0)+0,w
   867  0775  00A1               	movwf	(??_adc_con+0)+1
   868  0776  01A0               	clrf	(??_adc_con+0)+0
   869  0777  1683               	bsf	status, 5	;RP0=1, select bank1
   870  0778  1303               	bcf	status, 6	;RP1=0, select bank1
   871  0779  081E               	movf	(158)^080h,w	;volatile
   872  077A  1283               	bcf	status, 5	;RP0=0, select bank0
   873  077B  1303               	bcf	status, 6	;RP1=0, select bank0
   874  077C  0720               	addwf	0+(??_adc_con+0)+0,w
   875  077D  00A2               	movwf	(adc_con@adcval)
   876  077E  3000               	movlw	0
   877  077F  1803               	skipnc
   878  0780  3001               	movlw	1
   879  0781  0721               	addwf	1+(??_adc_con+0)+0,w
   880  0782  00A3               	movwf	1+(adc_con@adcval)
   881                           	line	94
   882                           	
   883  0783                     l2980:	
   884                           ;multi channel ADC .c: 94: dat((adcval/1000)+48);
   885  0783  30E8               	movlw	low(03E8h)
   886  0784  00F0               	movwf	(?___lwdiv)
   887  0785  3003               	movlw	high(03E8h)
   888  0786  00F1               	movwf	((?___lwdiv))+1
   889  0787  0823               	movf	(adc_con@adcval+1),w
   890  0788  01F3               	clrf	1+(?___lwdiv)+02h
   891  0789  07F3               	addwf	1+(?___lwdiv)+02h
   892  078A  0822               	movf	(adc_con@adcval),w
   893  078B  01F2               	clrf	0+(?___lwdiv)+02h
   894  078C  07F2               	addwf	0+(?___lwdiv)+02h
   895                           
   896  078D  120A  118A  26BD   	fcall	___lwdiv
              120A  118A         
   897  0792  0870               	movf	(0+(?___lwdiv)),w
   898  0793  3E30               	addlw	030h
   899  0794  120A  118A  25A7   	fcall	_dat
              120A  118A         
   900                           	line	95
   901                           	
   902  0799                     l2982:	
   903                           ;multi channel ADC .c: 95: dat(((adcval/100)%10)+48);
   904  0799  300A               	movlw	low(0Ah)
   905  079A  00F8               	movwf	(?___lwmod)
   906  079B  3000               	movlw	high(0Ah)
   907  079C  00F9               	movwf	((?___lwmod))+1
   908  079D  3064               	movlw	low(064h)
   909  079E  00F0               	movwf	(?___lwdiv)
   910  079F  3000               	movlw	high(064h)
   911  07A0  00F1               	movwf	((?___lwdiv))+1
   912  07A1  1283               	bcf	status, 5	;RP0=0, select bank0
   913  07A2  1303               	bcf	status, 6	;RP1=0, select bank0
   914  07A3  0823               	movf	(adc_con@adcval+1),w
   915  07A4  01F3               	clrf	1+(?___lwdiv)+02h
   916  07A5  07F3               	addwf	1+(?___lwdiv)+02h
   917  07A6  0822               	movf	(adc_con@adcval),w
   918  07A7  01F2               	clrf	0+(?___lwdiv)+02h
   919  07A8  07F2               	addwf	0+(?___lwdiv)+02h
   920                           
   921  07A9  120A  118A  26BD   	fcall	___lwdiv
              120A  118A         
   922  07AE  0871               	movf	(1+(?___lwdiv)),w
   923  07AF  01FB               	clrf	1+(?___lwmod)+02h
   924  07B0  07FB               	addwf	1+(?___lwmod)+02h
   925  07B1  0870               	movf	(0+(?___lwdiv)),w
   926  07B2  01FA               	clrf	0+(?___lwmod)+02h
   927  07B3  07FA               	addwf	0+(?___lwmod)+02h
   928                           
   929  07B4  120A  118A  2634   	fcall	___lwmod
              120A  118A         
   930  07B9  0878               	movf	(0+(?___lwmod)),w
   931  07BA  3E30               	addlw	030h
   932  07BB  120A  118A  25A7   	fcall	_dat
              120A  118A         
   933                           	line	96
   934                           	
   935  07C0                     l2984:	
   936                           ;multi channel ADC .c: 96: dat(((adcval/10)%10)+48);
   937  07C0  300A               	movlw	low(0Ah)
   938  07C1  00F8               	movwf	(?___lwmod)
   939  07C2  3000               	movlw	high(0Ah)
   940  07C3  00F9               	movwf	((?___lwmod))+1
   941  07C4  300A               	movlw	low(0Ah)
   942  07C5  00F0               	movwf	(?___lwdiv)
   943  07C6  3000               	movlw	high(0Ah)
   944  07C7  00F1               	movwf	((?___lwdiv))+1
   945  07C8  1283               	bcf	status, 5	;RP0=0, select bank0
   946  07C9  1303               	bcf	status, 6	;RP1=0, select bank0
   947  07CA  0823               	movf	(adc_con@adcval+1),w
   948  07CB  01F3               	clrf	1+(?___lwdiv)+02h
   949  07CC  07F3               	addwf	1+(?___lwdiv)+02h
   950  07CD  0822               	movf	(adc_con@adcval),w
   951  07CE  01F2               	clrf	0+(?___lwdiv)+02h
   952  07CF  07F2               	addwf	0+(?___lwdiv)+02h
   953                           
   954  07D0  120A  118A  26BD   	fcall	___lwdiv
              120A  118A         
   955  07D5  0871               	movf	(1+(?___lwdiv)),w
   956  07D6  01FB               	clrf	1+(?___lwmod)+02h
   957  07D7  07FB               	addwf	1+(?___lwmod)+02h
   958  07D8  0870               	movf	(0+(?___lwdiv)),w
   959  07D9  01FA               	clrf	0+(?___lwmod)+02h
   960  07DA  07FA               	addwf	0+(?___lwmod)+02h
   961                           
   962  07DB  120A  118A  2634   	fcall	___lwmod
              120A  118A         
   963  07E0  0878               	movf	(0+(?___lwmod)),w
   964  07E1  3E30               	addlw	030h
   965  07E2  120A  118A  25A7   	fcall	_dat
              120A  118A         
   966                           	line	97
   967                           	
   968  07E7                     l2986:	
   969                           ;multi channel ADC .c: 97: dat((adcval%10)+48);
   970  07E7  300A               	movlw	low(0Ah)
   971  07E8  00F8               	movwf	(?___lwmod)
   972  07E9  3000               	movlw	high(0Ah)
   973  07EA  00F9               	movwf	((?___lwmod))+1
   974  07EB  1283               	bcf	status, 5	;RP0=0, select bank0
   975  07EC  1303               	bcf	status, 6	;RP1=0, select bank0
   976  07ED  0823               	movf	(adc_con@adcval+1),w
   977  07EE  01FB               	clrf	1+(?___lwmod)+02h
   978  07EF  07FB               	addwf	1+(?___lwmod)+02h
   979  07F0  0822               	movf	(adc_con@adcval),w
   980  07F1  01FA               	clrf	0+(?___lwmod)+02h
   981  07F2  07FA               	addwf	0+(?___lwmod)+02h
   982                           
   983  07F3  120A  118A  2634   	fcall	___lwmod
              120A  118A         
   984  07F8  0878               	movf	(0+(?___lwmod)),w
   985  07F9  3E30               	addlw	030h
   986  07FA  120A  118A  25A7   	fcall	_dat
              120A  118A         
   987                           	line	98
   988                           	
   989  07FF                     l731:	
   990  07FF  0008               	return
   991                           	opt stack 0
   992                           GLOBAL	__end_of_adc_con
   993  0800                     	__end_of_adc_con:
   994 ;; =============== function _adc_con ends ============
   995                           
   996                           	signat	_adc_con,88
   997                           	global	_show
   998                           psect	text233,local,class=CODE,delta=2
   999                           global __ptext233
  1000  05D5                     __ptext233:
  1001                           
  1002 ;; *************** function _show *****************
  1003 ;; Defined at:
  1004 ;;		line 60 in file "F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  s               1    wreg     PTR unsigned char 
  1007 ;;		 -> STR_1(12), 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  s               1    9[COMMON] PTR unsigned char 
  1010 ;;		 -> STR_1(12), 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;		None               void
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1020 ;;      Params:         0       0       0       0       0
  1021 ;;      Locals:         1       0       0       0       0
  1022 ;;      Temps:          1       0       0       0       0
  1023 ;;      Totals:         2       0       0       0       0
  1024 ;;Total ram usage:        2 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; Hardware stack levels required when called:    2
  1027 ;; This function calls:
  1028 ;;		_dat
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           psect	text233
  1034                           	file	"F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
  1035                           	line	60
  1036                           	global	__size_of_show
  1037  0021                     	__size_of_show	equ	__end_of_show-_show
  1038                           	
  1039  05D5                     _show:	
  1040                           	opt	stack 5
  1041                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1042                           ;show@s stored from wreg
  1043  05D5  00F9               	movwf	(show@s)
  1044                           	line	61
  1045                           	
  1046  05D6                     l2968:	
  1047                           ;multi channel ADC .c: 61: while(*s)
  1048  05D6  2DE8               	goto	l2974
  1049                           	
  1050  05D7                     l715:	
  1051                           	line	63
  1052                           	
  1053  05D7                     l2970:	
  1054                           ;multi channel ADC .c: 62: {
  1055                           ;multi channel ADC .c: 63: dat(*s++);
  1056  05D7  0879               	movf	(show@s),w
  1057  05D8  0084               	movwf	fsr0
  1058  05D9  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1059  05DE  120A  118A  25A7   	fcall	_dat
              120A  118A         
  1060                           	
  1061  05E3                     l2972:	
  1062  05E3  3001               	movlw	(01h)
  1063  05E4  00F8               	movwf	(??_show+0)+0
  1064  05E5  0878               	movf	(??_show+0)+0,w
  1065  05E6  07F9               	addwf	(show@s),f
  1066  05E7  2DE8               	goto	l2974
  1067                           	line	64
  1068                           	
  1069  05E8                     l714:	
  1070                           	line	61
  1071                           	
  1072  05E8                     l2974:	
  1073  05E8  0879               	movf	(show@s),w
  1074  05E9  0084               	movwf	fsr0
  1075  05EA  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1076  05EF  3800               	iorlw	0
  1077  05F0  1D03               	skipz
  1078  05F1  2DF3               	goto	u2451
  1079  05F2  2DF4               	goto	u2450
  1080  05F3                     u2451:
  1081  05F3  2DD7               	goto	l2970
  1082  05F4                     u2450:
  1083  05F4  2DF5               	goto	l717
  1084                           	
  1085  05F5                     l716:	
  1086                           	line	65
  1087                           	
  1088  05F5                     l717:	
  1089  05F5  0008               	return
  1090                           	opt stack 0
  1091                           GLOBAL	__end_of_show
  1092  05F6                     	__end_of_show:
  1093 ;; =============== function _show ends ============
  1094                           
  1095                           	signat	_show,4216
  1096                           	global	_lcd_int
  1097                           psect	text234,local,class=CODE,delta=2
  1098                           global __ptext234
  1099  05BC                     __ptext234:
  1100                           
  1101 ;; *************** function _lcd_int *****************
  1102 ;; Defined at:
  1103 ;;		line 32 in file "F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;		None               void
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1117 ;;      Params:         0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0
  1119 ;;      Temps:          0       0       0       0       0
  1120 ;;      Totals:         0       0       0       0       0
  1121 ;;Total ram usage:        0 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    2
  1124 ;; This function calls:
  1125 ;;		_cmd
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           psect	text234
  1131                           	file	"F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
  1132                           	line	32
  1133                           	global	__size_of_lcd_int
  1134  0019                     	__size_of_lcd_int	equ	__end_of_lcd_int-_lcd_int
  1135                           	
  1136  05BC                     _lcd_int:	
  1137                           	opt	stack 5
  1138                           ; Regs used in _lcd_int: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1139                           	line	33
  1140                           	
  1141  05BC                     l2966:	
  1142                           ;multi channel ADC .c: 33: cmd(0x38);
  1143  05BC  3038               	movlw	(038h)
  1144  05BD  120A  118A  2592   	fcall	_cmd
              120A  118A         
  1145                           	line	34
  1146                           ;multi channel ADC .c: 34: cmd(0x0c);
  1147  05C2  300C               	movlw	(0Ch)
  1148  05C3  120A  118A  2592   	fcall	_cmd
              120A  118A         
  1149                           	line	35
  1150                           ;multi channel ADC .c: 35: cmd(0x06);
  1151  05C8  3006               	movlw	(06h)
  1152  05C9  120A  118A  2592   	fcall	_cmd
              120A  118A         
  1153                           	line	36
  1154                           ;multi channel ADC .c: 36: cmd(0x80);
  1155  05CE  3080               	movlw	(080h)
  1156  05CF  120A  118A  2592   	fcall	_cmd
              120A  118A         
  1157                           	line	37
  1158                           	
  1159  05D4                     l705:	
  1160  05D4  0008               	return
  1161                           	opt stack 0
  1162                           GLOBAL	__end_of_lcd_int
  1163  05D5                     	__end_of_lcd_int:
  1164 ;; =============== function _lcd_int ends ============
  1165                           
  1166                           	signat	_lcd_int,88
  1167                           	global	_dat
  1168                           psect	text235,local,class=CODE,delta=2
  1169                           global __ptext235
  1170  05A7                     __ptext235:
  1171                           
  1172 ;; *************** function _dat *****************
  1173 ;; Defined at:
  1174 ;;		line 50 in file "F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;  b               1    wreg     unsigned char 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  b               1    7[COMMON] unsigned char 
  1179 ;; Return value:  Size  Location     Type
  1180 ;;		None               void
  1181 ;; Registers used:
  1182 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         0       0       0       0       0
  1189 ;;      Locals:         1       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0
  1191 ;;      Totals:         1       0       0       0       0
  1192 ;;Total ram usage:        1 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    1
  1195 ;; This function calls:
  1196 ;;		_delay
  1197 ;; This function is called by:
  1198 ;;		_show
  1199 ;;		_adc_con
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           psect	text235
  1203                           	file	"F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
  1204                           	line	50
  1205                           	global	__size_of_dat
  1206  0015                     	__size_of_dat	equ	__end_of_dat-_dat
  1207                           	
  1208  05A7                     _dat:	
  1209                           	opt	stack 4
  1210                           ; Regs used in _dat: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1211                           ;dat@b stored from wreg
  1212  05A7  00F7               	movwf	(dat@b)
  1213                           	line	51
  1214                           	
  1215  05A8                     l2954:	
  1216                           ;multi channel ADC .c: 51: PORTD=b;
  1217  05A8  0877               	movf	(dat@b),w
  1218  05A9  1283               	bcf	status, 5	;RP0=0, select bank0
  1219  05AA  1303               	bcf	status, 6	;RP1=0, select bank0
  1220  05AB  0088               	movwf	(8)	;volatile
  1221                           	line	52
  1222                           	
  1223  05AC                     l2956:	
  1224                           ;multi channel ADC .c: 52: RC4=1;
  1225  05AC  1607               	bsf	(60/8),(60)&7
  1226                           	line	53
  1227                           	
  1228  05AD                     l2958:	
  1229                           ;multi channel ADC .c: 53: RC5=0;
  1230  05AD  1287               	bcf	(61/8),(61)&7
  1231                           	line	54
  1232                           	
  1233  05AE                     l2960:	
  1234                           ;multi channel ADC .c: 54: RC6=1;
  1235  05AE  1707               	bsf	(62/8),(62)&7
  1236                           	line	55
  1237                           	
  1238  05AF                     l2962:	
  1239                           ;multi channel ADC .c: 55: delay(10);
  1240  05AF  300A               	movlw	low(0Ah)
  1241  05B0  00F0               	movwf	(?_delay)
  1242  05B1  3000               	movlw	high(0Ah)
  1243  05B2  00F1               	movwf	((?_delay))+1
  1244  05B3  120A  118A  25F6   	fcall	_delay
              120A  118A         
  1245                           	line	56
  1246                           	
  1247  05B8                     l2964:	
  1248                           ;multi channel ADC .c: 56: RC6=0;
  1249  05B8  1283               	bcf	status, 5	;RP0=0, select bank0
  1250  05B9  1303               	bcf	status, 6	;RP1=0, select bank0
  1251  05BA  1307               	bcf	(62/8),(62)&7
  1252                           	line	57
  1253                           	
  1254  05BB                     l711:	
  1255  05BB  0008               	return
  1256                           	opt stack 0
  1257                           GLOBAL	__end_of_dat
  1258  05BC                     	__end_of_dat:
  1259 ;; =============== function _dat ends ============
  1260                           
  1261                           	signat	_dat,4216
  1262                           	global	_cmd
  1263                           psect	text236,local,class=CODE,delta=2
  1264                           global __ptext236
  1265  0592                     __ptext236:
  1266                           
  1267 ;; *************** function _cmd *****************
  1268 ;; Defined at:
  1269 ;;		line 40 in file "F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  a               1    wreg     unsigned char 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  a               1    7[COMMON] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;		None               void
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1283 ;;      Params:         0       0       0       0       0
  1284 ;;      Locals:         1       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0
  1286 ;;      Totals:         1       0       0       0       0
  1287 ;;Total ram usage:        1 bytes
  1288 ;; Hardware stack levels used:    1
  1289 ;; Hardware stack levels required when called:    1
  1290 ;; This function calls:
  1291 ;;		_delay
  1292 ;; This function is called by:
  1293 ;;		_main
  1294 ;;		_lcd_int
  1295 ;;		_adc
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           psect	text236
  1299                           	file	"F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
  1300                           	line	40
  1301                           	global	__size_of_cmd
  1302  0015                     	__size_of_cmd	equ	__end_of_cmd-_cmd
  1303                           	
  1304  0592                     _cmd:	
  1305                           	opt	stack 5
  1306                           ; Regs used in _cmd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1307                           ;cmd@a stored from wreg
  1308  0592  00F7               	movwf	(cmd@a)
  1309                           	line	41
  1310                           	
  1311  0593                     l2942:	
  1312                           ;multi channel ADC .c: 41: PORTD=a;
  1313  0593  0877               	movf	(cmd@a),w
  1314  0594  1283               	bcf	status, 5	;RP0=0, select bank0
  1315  0595  1303               	bcf	status, 6	;RP1=0, select bank0
  1316  0596  0088               	movwf	(8)	;volatile
  1317                           	line	42
  1318                           	
  1319  0597                     l2944:	
  1320                           ;multi channel ADC .c: 42: RC4=0;
  1321  0597  1207               	bcf	(60/8),(60)&7
  1322                           	line	43
  1323                           	
  1324  0598                     l2946:	
  1325                           ;multi channel ADC .c: 43: RC5=0;
  1326  0598  1287               	bcf	(61/8),(61)&7
  1327                           	line	44
  1328                           	
  1329  0599                     l2948:	
  1330                           ;multi channel ADC .c: 44: RC6=1;
  1331  0599  1707               	bsf	(62/8),(62)&7
  1332                           	line	45
  1333                           	
  1334  059A                     l2950:	
  1335                           ;multi channel ADC .c: 45: delay(10);
  1336  059A  300A               	movlw	low(0Ah)
  1337  059B  00F0               	movwf	(?_delay)
  1338  059C  3000               	movlw	high(0Ah)
  1339  059D  00F1               	movwf	((?_delay))+1
  1340  059E  120A  118A  25F6   	fcall	_delay
              120A  118A         
  1341                           	line	46
  1342                           	
  1343  05A3                     l2952:	
  1344                           ;multi channel ADC .c: 46: RC6=0;
  1345  05A3  1283               	bcf	status, 5	;RP0=0, select bank0
  1346  05A4  1303               	bcf	status, 6	;RP1=0, select bank0
  1347  05A5  1307               	bcf	(62/8),(62)&7
  1348                           	line	47
  1349                           	
  1350  05A6                     l708:	
  1351  05A6  0008               	return
  1352                           	opt stack 0
  1353                           GLOBAL	__end_of_cmd
  1354  05A7                     	__end_of_cmd:
  1355 ;; =============== function _cmd ends ============
  1356                           
  1357                           	signat	_cmd,4216
  1358                           	global	___lwmod
  1359                           psect	text237,local,class=CODE,delta=2
  1360                           global __ptext237
  1361  0634                     __ptext237:
  1362                           
  1363 ;; *************** function ___lwmod *****************
  1364 ;; Defined at:
  1365 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  divisor         2    8[COMMON] unsigned int 
  1368 ;;  dividend        2   10[COMMON] unsigned int 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  counter         1   13[COMMON] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  2    8[COMMON] unsigned int 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         4       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0
  1382 ;;      Temps:          1       0       0       0       0
  1383 ;;      Totals:         6       0       0       0       0
  1384 ;;Total ram usage:        6 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_adc_con
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           psect	text237
  1393                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwmod.c"
  1394                           	line	5
  1395                           	global	__size_of___lwmod
  1396  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1397                           	
  1398  0634                     ___lwmod:	
  1399                           	opt	stack 5
  1400                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1401                           	line	8
  1402                           	
  1403  0634                     l2920:	
  1404  0634  0879               	movf	(___lwmod@divisor+1),w
  1405  0635  0478               	iorwf	(___lwmod@divisor),w
  1406  0636  1903               	skipnz
  1407  0637  2E39               	goto	u2391
  1408  0638  2E3A               	goto	u2390
  1409  0639                     u2391:
  1410  0639  2E70               	goto	l2938
  1411  063A                     u2390:
  1412                           	line	9
  1413                           	
  1414  063A                     l2922:	
  1415  063A  01FD               	clrf	(___lwmod@counter)
  1416  063B  1403               	bsf	status,0
  1417  063C  0DFD               	rlf	(___lwmod@counter),f
  1418                           	line	10
  1419  063D  2E4A               	goto	l2928
  1420                           	
  1421  063E                     l1440:	
  1422                           	line	11
  1423                           	
  1424  063E                     l2924:	
  1425  063E  3001               	movlw	01h
  1426                           	
  1427  063F                     u2405:
  1428  063F  1003               	clrc
  1429  0640  0DF8               	rlf	(___lwmod@divisor),f
  1430  0641  0DF9               	rlf	(___lwmod@divisor+1),f
  1431  0642  3EFF               	addlw	-1
  1432  0643  1D03               	skipz
  1433  0644  2E3F               	goto	u2405
  1434                           	line	12
  1435                           	
  1436  0645                     l2926:	
  1437  0645  3001               	movlw	(01h)
  1438  0646  00FC               	movwf	(??___lwmod+0)+0
  1439  0647  087C               	movf	(??___lwmod+0)+0,w
  1440  0648  07FD               	addwf	(___lwmod@counter),f
  1441  0649  2E4A               	goto	l2928
  1442                           	line	13
  1443                           	
  1444  064A                     l1439:	
  1445                           	line	10
  1446                           	
  1447  064A                     l2928:	
  1448  064A  1FF9               	btfss	(___lwmod@divisor+1),(15)&7
  1449  064B  2E4D               	goto	u2411
  1450  064C  2E4E               	goto	u2410
  1451  064D                     u2411:
  1452  064D  2E3E               	goto	l2924
  1453  064E                     u2410:
  1454  064E  2E50               	goto	l2930
  1455                           	
  1456  064F                     l1441:	
  1457  064F  2E50               	goto	l2930
  1458                           	line	14
  1459                           	
  1460  0650                     l1442:	
  1461                           	line	15
  1462                           	
  1463  0650                     l2930:	
  1464  0650  0879               	movf	(___lwmod@divisor+1),w
  1465  0651  027B               	subwf	(___lwmod@dividend+1),w
  1466  0652  1D03               	skipz
  1467  0653  2E56               	goto	u2425
  1468  0654  0878               	movf	(___lwmod@divisor),w
  1469  0655  027A               	subwf	(___lwmod@dividend),w
  1470  0656                     u2425:
  1471  0656  1C03               	skipc
  1472  0657  2E59               	goto	u2421
  1473  0658  2E5A               	goto	u2420
  1474  0659                     u2421:
  1475  0659  2E61               	goto	l2934
  1476  065A                     u2420:
  1477                           	line	16
  1478                           	
  1479  065A                     l2932:	
  1480  065A  0878               	movf	(___lwmod@divisor),w
  1481  065B  02FA               	subwf	(___lwmod@dividend),f
  1482  065C  0879               	movf	(___lwmod@divisor+1),w
  1483  065D  1C03               	skipc
  1484  065E  03FB               	decf	(___lwmod@dividend+1),f
  1485  065F  02FB               	subwf	(___lwmod@dividend+1),f
  1486  0660  2E61               	goto	l2934
  1487                           	
  1488  0661                     l1443:	
  1489                           	line	17
  1490                           	
  1491  0661                     l2934:	
  1492  0661  3001               	movlw	01h
  1493                           	
  1494  0662                     u2435:
  1495  0662  1003               	clrc
  1496  0663  0CF9               	rrf	(___lwmod@divisor+1),f
  1497  0664  0CF8               	rrf	(___lwmod@divisor),f
  1498  0665  3EFF               	addlw	-1
  1499  0666  1D03               	skipz
  1500  0667  2E62               	goto	u2435
  1501                           	line	18
  1502                           	
  1503  0668                     l2936:	
  1504  0668  3001               	movlw	low(01h)
  1505  0669  02FD               	subwf	(___lwmod@counter),f
  1506  066A  1D03               	btfss	status,2
  1507  066B  2E6D               	goto	u2441
  1508  066C  2E6E               	goto	u2440
  1509  066D                     u2441:
  1510  066D  2E50               	goto	l2930
  1511  066E                     u2440:
  1512  066E  2E70               	goto	l2938
  1513                           	
  1514  066F                     l1444:	
  1515  066F  2E70               	goto	l2938
  1516                           	line	19
  1517                           	
  1518  0670                     l1438:	
  1519                           	line	20
  1520                           	
  1521  0670                     l2938:	
  1522  0670  087B               	movf	(___lwmod@dividend+1),w
  1523  0671  01F9               	clrf	(?___lwmod+1)
  1524  0672  07F9               	addwf	(?___lwmod+1)
  1525  0673  087A               	movf	(___lwmod@dividend),w
  1526  0674  01F8               	clrf	(?___lwmod)
  1527  0675  07F8               	addwf	(?___lwmod)
  1528                           
  1529  0676  2E77               	goto	l1445
  1530                           	
  1531  0677                     l2940:	
  1532                           	line	21
  1533                           	
  1534  0677                     l1445:	
  1535  0677  0008               	return
  1536                           	opt stack 0
  1537                           GLOBAL	__end_of___lwmod
  1538  0678                     	__end_of___lwmod:
  1539 ;; =============== function ___lwmod ends ============
  1540                           
  1541                           	signat	___lwmod,8314
  1542                           	global	___lwdiv
  1543                           psect	text238,local,class=CODE,delta=2
  1544                           global __ptext238
  1545  06BD                     __ptext238:
  1546                           
  1547 ;; *************** function ___lwdiv *****************
  1548 ;; Defined at:
  1549 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  divisor         2    0[COMMON] unsigned int 
  1552 ;;  dividend        2    2[COMMON] unsigned int 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  quotient        2    5[COMMON] unsigned int 
  1555 ;;  counter         1    7[COMMON] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  2    0[COMMON] unsigned int 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1565 ;;      Params:         4       0       0       0       0
  1566 ;;      Locals:         3       0       0       0       0
  1567 ;;      Temps:          1       0       0       0       0
  1568 ;;      Totals:         8       0       0       0       0
  1569 ;;Total ram usage:        8 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_adc_con
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           psect	text238
  1578                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lwdiv.c"
  1579                           	line	5
  1580                           	global	__size_of___lwdiv
  1581  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1582                           	
  1583  06BD                     ___lwdiv:	
  1584                           	opt	stack 5
  1585                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1586                           	line	9
  1587                           	
  1588  06BD                     l2894:	
  1589  06BD  01F5               	clrf	(___lwdiv@quotient)
  1590  06BE  01F6               	clrf	(___lwdiv@quotient+1)
  1591                           	line	10
  1592                           	
  1593  06BF                     l2896:	
  1594  06BF  0871               	movf	(___lwdiv@divisor+1),w
  1595  06C0  0470               	iorwf	(___lwdiv@divisor),w
  1596  06C1  1903               	skipnz
  1597  06C2  2EC4               	goto	u2321
  1598  06C3  2EC5               	goto	u2320
  1599  06C4                     u2321:
  1600  06C4  2F03               	goto	l2916
  1601  06C5                     u2320:
  1602                           	line	11
  1603                           	
  1604  06C5                     l2898:	
  1605  06C5  01F7               	clrf	(___lwdiv@counter)
  1606  06C6  1403               	bsf	status,0
  1607  06C7  0DF7               	rlf	(___lwdiv@counter),f
  1608                           	line	12
  1609  06C8  2ED5               	goto	l2904
  1610                           	
  1611  06C9                     l1430:	
  1612                           	line	13
  1613                           	
  1614  06C9                     l2900:	
  1615  06C9  3001               	movlw	01h
  1616                           	
  1617  06CA                     u2335:
  1618  06CA  1003               	clrc
  1619  06CB  0DF0               	rlf	(___lwdiv@divisor),f
  1620  06CC  0DF1               	rlf	(___lwdiv@divisor+1),f
  1621  06CD  3EFF               	addlw	-1
  1622  06CE  1D03               	skipz
  1623  06CF  2ECA               	goto	u2335
  1624                           	line	14
  1625                           	
  1626  06D0                     l2902:	
  1627  06D0  3001               	movlw	(01h)
  1628  06D1  00F4               	movwf	(??___lwdiv+0)+0
  1629  06D2  0874               	movf	(??___lwdiv+0)+0,w
  1630  06D3  07F7               	addwf	(___lwdiv@counter),f
  1631  06D4  2ED5               	goto	l2904
  1632                           	line	15
  1633                           	
  1634  06D5                     l1429:	
  1635                           	line	12
  1636                           	
  1637  06D5                     l2904:	
  1638  06D5  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  1639  06D6  2ED8               	goto	u2341
  1640  06D7  2ED9               	goto	u2340
  1641  06D8                     u2341:
  1642  06D8  2EC9               	goto	l2900
  1643  06D9                     u2340:
  1644  06D9  2EDB               	goto	l2906
  1645                           	
  1646  06DA                     l1431:	
  1647  06DA  2EDB               	goto	l2906
  1648                           	line	16
  1649                           	
  1650  06DB                     l1432:	
  1651                           	line	17
  1652                           	
  1653  06DB                     l2906:	
  1654  06DB  3001               	movlw	01h
  1655                           	
  1656  06DC                     u2355:
  1657  06DC  1003               	clrc
  1658  06DD  0DF5               	rlf	(___lwdiv@quotient),f
  1659  06DE  0DF6               	rlf	(___lwdiv@quotient+1),f
  1660  06DF  3EFF               	addlw	-1
  1661  06E0  1D03               	skipz
  1662  06E1  2EDC               	goto	u2355
  1663                           	line	18
  1664  06E2  0871               	movf	(___lwdiv@divisor+1),w
  1665  06E3  0273               	subwf	(___lwdiv@dividend+1),w
  1666  06E4  1D03               	skipz
  1667  06E5  2EE8               	goto	u2365
  1668  06E6  0870               	movf	(___lwdiv@divisor),w
  1669  06E7  0272               	subwf	(___lwdiv@dividend),w
  1670  06E8                     u2365:
  1671  06E8  1C03               	skipc
  1672  06E9  2EEB               	goto	u2361
  1673  06EA  2EEC               	goto	u2360
  1674  06EB                     u2361:
  1675  06EB  2EF4               	goto	l2912
  1676  06EC                     u2360:
  1677                           	line	19
  1678                           	
  1679  06EC                     l2908:	
  1680  06EC  0870               	movf	(___lwdiv@divisor),w
  1681  06ED  02F2               	subwf	(___lwdiv@dividend),f
  1682  06EE  0871               	movf	(___lwdiv@divisor+1),w
  1683  06EF  1C03               	skipc
  1684  06F0  03F3               	decf	(___lwdiv@dividend+1),f
  1685  06F1  02F3               	subwf	(___lwdiv@dividend+1),f
  1686                           	line	20
  1687                           	
  1688  06F2                     l2910:	
  1689  06F2  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  1690  06F3  2EF4               	goto	l2912
  1691                           	line	21
  1692                           	
  1693  06F4                     l1433:	
  1694                           	line	22
  1695                           	
  1696  06F4                     l2912:	
  1697  06F4  3001               	movlw	01h
  1698                           	
  1699  06F5                     u2375:
  1700  06F5  1003               	clrc
  1701  06F6  0CF1               	rrf	(___lwdiv@divisor+1),f
  1702  06F7  0CF0               	rrf	(___lwdiv@divisor),f
  1703  06F8  3EFF               	addlw	-1
  1704  06F9  1D03               	skipz
  1705  06FA  2EF5               	goto	u2375
  1706                           	line	23
  1707                           	
  1708  06FB                     l2914:	
  1709  06FB  3001               	movlw	low(01h)
  1710  06FC  02F7               	subwf	(___lwdiv@counter),f
  1711  06FD  1D03               	btfss	status,2
  1712  06FE  2F00               	goto	u2381
  1713  06FF  2F01               	goto	u2380
  1714  0700                     u2381:
  1715  0700  2EDB               	goto	l2906
  1716  0701                     u2380:
  1717  0701  2F03               	goto	l2916
  1718                           	
  1719  0702                     l1434:	
  1720  0702  2F03               	goto	l2916
  1721                           	line	24
  1722                           	
  1723  0703                     l1428:	
  1724                           	line	25
  1725                           	
  1726  0703                     l2916:	
  1727  0703  0876               	movf	(___lwdiv@quotient+1),w
  1728  0704  01F1               	clrf	(?___lwdiv+1)
  1729  0705  07F1               	addwf	(?___lwdiv+1)
  1730  0706  0875               	movf	(___lwdiv@quotient),w
  1731  0707  01F0               	clrf	(?___lwdiv)
  1732  0708  07F0               	addwf	(?___lwdiv)
  1733                           
  1734  0709  2F0A               	goto	l1435
  1735                           	
  1736  070A                     l2918:	
  1737                           	line	26
  1738                           	
  1739  070A                     l1435:	
  1740  070A  0008               	return
  1741                           	opt stack 0
  1742                           GLOBAL	__end_of___lwdiv
  1743  070B                     	__end_of___lwdiv:
  1744 ;; =============== function ___lwdiv ends ============
  1745                           
  1746                           	signat	___lwdiv,8314
  1747                           	global	_delay
  1748                           psect	text239,local,class=CODE,delta=2
  1749                           global __ptext239
  1750  05F6                     __ptext239:
  1751                           
  1752 ;; *************** function _delay *****************
  1753 ;; Defined at:
  1754 ;;		line 100 in file "F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;  L               2    0[COMMON] int 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  j               2    5[COMMON] int 
  1759 ;;  i               2    3[COMMON] int 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;		None               void
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, btemp+1
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1769 ;;      Params:         2       0       0       0       0
  1770 ;;      Locals:         4       0       0       0       0
  1771 ;;      Temps:          1       0       0       0       0
  1772 ;;      Totals:         7       0       0       0       0
  1773 ;;Total ram usage:        7 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_main
  1779 ;;		_cmd
  1780 ;;		_dat
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           psect	text239
  1784                           	file	"F:\Basic Microcontroller\PIC16F877A\ADC\Multichannel ADC\multi channel ADC .c"
  1785                           	line	100
  1786                           	global	__size_of_delay
  1787  003E                     	__size_of_delay	equ	__end_of_delay-_delay
  1788                           	
  1789  05F6                     _delay:	
  1790                           	opt	stack 7
  1791                           ; Regs used in _delay: [wreg+status,2+btemp+1]
  1792                           	line	102
  1793                           	
  1794  05F6                     l2880:	
  1795                           ;multi channel ADC .c: 101: int i,j;
  1796                           ;multi channel ADC .c: 102: for(i=0;i<L;i++)
  1797  05F6  01F3               	clrf	(delay@i)
  1798  05F7  01F4               	clrf	(delay@i+1)
  1799  05F8  2E24               	goto	l734
  1800                           	line	103
  1801                           	
  1802  05F9                     l735:	
  1803                           	line	104
  1804                           	
  1805  05F9                     l2882:	
  1806                           ;multi channel ADC .c: 103: {
  1807                           ;multi channel ADC .c: 104: for(j=0;j<250;j++)
  1808  05F9  01F5               	clrf	(delay@j)
  1809  05FA  01F6               	clrf	(delay@j+1)
  1810                           	
  1811  05FB                     l2884:	
  1812  05FB  0876               	movf	(delay@j+1),w
  1813  05FC  3A80               	xorlw	80h
  1814  05FD  00FF               	movwf	btemp+1
  1815  05FE  3080               	movlw	(high(0FAh))^80h
  1816  05FF  027F               	subwf	btemp+1,w
  1817  0600  1D03               	skipz
  1818  0601  2E04               	goto	u2295
  1819  0602  30FA               	movlw	low(0FAh)
  1820  0603  0275               	subwf	(delay@j),w
  1821  0604                     u2295:
  1822                           
  1823  0604  1C03               	skipc
  1824  0605  2E07               	goto	u2291
  1825  0606  2E08               	goto	u2290
  1826  0607                     u2291:
  1827  0607  2E0A               	goto	l2888
  1828  0608                     u2290:
  1829  0608  2E1E               	goto	l2892
  1830                           	
  1831  0609                     l2886:	
  1832  0609  2E1E               	goto	l2892
  1833                           	line	105
  1834                           	
  1835  060A                     l736:	
  1836                           	line	104
  1837                           	
  1838  060A                     l2888:	
  1839                           ;multi channel ADC .c: 105: {
  1840  060A  3001               	movlw	low(01h)
  1841  060B  07F5               	addwf	(delay@j),f
  1842  060C  1803               	skipnc
  1843  060D  0AF6               	incf	(delay@j+1),f
  1844  060E  3000               	movlw	high(01h)
  1845  060F  07F6               	addwf	(delay@j+1),f
  1846                           	
  1847  0610                     l2890:	
  1848  0610  0876               	movf	(delay@j+1),w
  1849  0611  3A80               	xorlw	80h
  1850  0612  00FF               	movwf	btemp+1
  1851  0613  3080               	movlw	(high(0FAh))^80h
  1852  0614  027F               	subwf	btemp+1,w
  1853  0615  1D03               	skipz
  1854  0616  2E19               	goto	u2305
  1855  0617  30FA               	movlw	low(0FAh)
  1856  0618  0275               	subwf	(delay@j),w
  1857  0619                     u2305:
  1858                           
  1859  0619  1C03               	skipc
  1860  061A  2E1C               	goto	u2301
  1861  061B  2E1D               	goto	u2300
  1862  061C                     u2301:
  1863  061C  2E0A               	goto	l2888
  1864  061D                     u2300:
  1865  061D  2E1E               	goto	l2892
  1866                           	
  1867  061E                     l737:	
  1868                           	line	102
  1869                           	
  1870  061E                     l2892:	
  1871  061E  3001               	movlw	low(01h)
  1872  061F  07F3               	addwf	(delay@i),f
  1873  0620  1803               	skipnc
  1874  0621  0AF4               	incf	(delay@i+1),f
  1875  0622  3000               	movlw	high(01h)
  1876  0623  07F4               	addwf	(delay@i+1),f
  1877                           	
  1878  0624                     l734:	
  1879  0624  0874               	movf	(delay@i+1),w
  1880  0625  3A80               	xorlw	80h
  1881  0626  00F2               	movwf	(??_delay+0)+0
  1882  0627  0871               	movf	(delay@L+1),w
  1883  0628  3A80               	xorlw	80h
  1884  0629  0272               	subwf	(??_delay+0)+0,w
  1885  062A  1D03               	skipz
  1886  062B  2E2E               	goto	u2315
  1887  062C  0870               	movf	(delay@L),w
  1888  062D  0273               	subwf	(delay@i),w
  1889  062E                     u2315:
  1890                           
  1891  062E  1C03               	skipc
  1892  062F  2E31               	goto	u2311
  1893  0630  2E32               	goto	u2310
  1894  0631                     u2311:
  1895  0631  2DF9               	goto	l2882
  1896  0632                     u2310:
  1897  0632  2E33               	goto	l739
  1898                           	
  1899  0633                     l738:	
  1900                           	line	108
  1901                           	
  1902  0633                     l739:	
  1903  0633  0008               	return
  1904                           	opt stack 0
  1905                           GLOBAL	__end_of_delay
  1906  0634                     	__end_of_delay:
  1907 ;; =============== function _delay ends ============
  1908                           
  1909                           	signat	_delay,4216
  1910                           psect	text240,local,class=CODE,delta=2
  1911                           global __ptext240
  1912  0000                     __ptext240:
  1913                           	global	btemp
  1914  007E                     	btemp set 07Eh
  1915                           
  1916                           	DABS	1,126,2	;btemp
  1917                           	global	wtemp0
  1918  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Thu Jan 30 15:47:01 2020

                   pc 0002                    _RD 0C60                    _WR 0C61                    fsr 0004  
                 l700 0762                   l701 0763                   l702 0763                   l711 05BB  
                 l720 06AA                   l705 05D4                   l721 0679                   l714 05E8  
                 l730 0771                   l722 06BC                   l715 05D7                   l731 07FF  
                 l723 0689                   l708 05A6                   l716 05F5                   l724 0699  
                 l717 05F5                   l725 06BC                   l734 0624                   l735 05F9  
                 l736 060A                   l728 076B                   l737 061E                   l729 076B  
                 l738 0633                   l739 0633                   l697 071C                   l698 072F  
                 l699 0761                   _GIE 005F                   _RC4 003C                   _RC5 003D  
                 _RC6 003E                   _adc 0678                   _dat 05A7                   _cmd 0592  
                 fsr0 0004                  ?_adc 0024                  l3000 0693                  l3002 0699  
                l3010 06AA                  l3004 069D                  l3020 0710                  l1430 06C9  
                l3006 06A3                  l3030 072F                  l3022 0715                  ?_dat 0070  
                l1431 06DA                  l1432 06DB                  l1440 063E                  l3008 06A9  
                l3032 0735                  l3024 071C                  l3016 070B                  l1433 06F4  
                l1441 064F                  l1434 0702                  l1442 0650                  l3034 0742  
                l3026 0720                  l3018 070F                  ?_cmd 0070                  l1435 070A  
                l1443 0661                  l1428 0703                  l1444 066F                  l3060 06B1  
                l3036 074B                  l3028 072E                  l1429 06D5                  l1445 0677  
                l1438 0670                  l3038 0753                  l1439 064A                  l2900 06C9  
                l2910 06F2                  l2902 06D0                  l2912 06F4                  l2904 06D5  
                l2920 0634                  l2914 06FB                  l2906 06DB                  l2930 0650  
                l2922 063A                  l2908 06EC                  l2916 0703                  l2940 0677  
                l2932 065A                  l2924 063E                  l2918 070A                  l2934 0661  
                l2926 0645                  l2950 059A                  l2942 0593                  l2880 05F6  
                l2936 0668                  l2928 064A                  l2952 05A3                  l2944 0597  
                l2960 05AE                  l2890 0610                  l2882 05F9                  l2938 0670  
                l2946 0598                  l2962 05AF                  l2954 05A8                  l2970 05D7  
                l2892 061E                  l2884 05FB                  l2948 0599                  l2964 05B8  
                l2956 05AC                  l2972 05E3                  l2980 0783                  l2886 0609  
                l2894 06BD                  l2958 05AD                  l2966 05BC                  l2974 05E8  
                l2982 0799                  l2990 0679                  l2888 060A                  l2896 06BF  
                l2968 05D6                  l2984 07C0                  l2976 0766                  l2992 067D  
                l2898 06C5                  l2986 07E7                  l2978 0771                  l2994 0683  
                l2996 0689                  l2988 0678                  l2998 068D                  STR_1 0009  
                u2300 061D                  u2301 061C                  u2310 0632                  u2311 0631  
                u2320 06C5                  u2305 0619                  u2321 06C4                  u2410 064E  
                u2315 062E                  u2411 064D                  u2340 06D9                  u2420 065A  
                u2341 06D8                  u2421 0659                  u2405 063F                  u2335 06CA  
                u2360 06EC                  u2440 066E                  u2361 06EB                  u2441 066D  
                u2425 0656                  u2290 0608                  u2450 05F4                  u2291 0607  
                u2355 06DC                  u2435 0662                  u2451 05F3                  u2380 0701  
                u2460 0770                  u2381 0700                  u2365 06E8                  u2461 076F  
                u2390 063A                  u2470 072D                  u2295 0604                  u2375 06F5  
                u2391 0639                  u2471 072C                  u2480 0760                  u2481 075F  
                u2475 0729                  u2485 075C                  _WREN 0C62                  adc@i 0024  
                dat@b 0077                  cmd@a 0077                  _main 070B                  _show 05D5  
                btemp 007E                  start 0000                 ??_adc 007E                 ??_dat 0077  
               ??_cmd 0077                 ?_main 0070                 _EEADR 010D                 ?_show 0070  
               _CARRY 0018       __end_of_adc_con 0800       __end_of___lwdiv 070B       __end_of___lwmod 0678  
               _PORTD 0008                 _TRISC 0087                 _TRISD 0088       __end_of_lcd_int 05D5  
               _delay 05F6                 main@i 0026                 pclath 000A                 show@s 0079  
               status 0003                 wtemp0 007E          __end_of_main 0766          __end_of_show 05F6  
              ??_main 007E                ??_show 0078                ?_delay 0070                _ADCON0 001F  
              _ADCON1 009F                _ADRESH 001E                _ADRESL 009E                _EEDATA 010C  
              _EECON1 018C                _EECON2 018D                _TRISA0 0428             ??_adc_con 0020  
           ??___lwdiv 0074             ??___lwmod 007C                delay@L 0070                delay@i 0073  
              delay@j 0075             ??_lcd_int 0078        __pcstackCOMMON 0070         __end_of_delay 0634  
             ??_delay 0072            __pmaintext 070B               _adc_con 0766               ___lwdiv 06BD  
             ___lwmod 0634               _lcd_int 05BC          __size_of_adc 0045          __size_of_dat 0015  
        __size_of_cmd 0015  end_of_initialization 058E   start_initialization 058E           __end_of_adc 06BD  
         __end_of_dat 05BC           __end_of_cmd 05A7         adc_con@adcval 0022         __pcstackBANK0 0020  
    ___lwdiv@dividend 0072             __ptext230 0000             __ptext231 0678             __ptext240 0000  
           __ptext232 0766             __ptext233 05D5             __ptext234 05BC             __ptext235 05A7  
           __ptext236 0592             __ptext237 0634             __ptext238 06BD             __ptext239 05F6  
            ?_adc_con 0070              ?___lwdiv 0070              ?___lwmod 0078             __pstrings 0003  
            ?_lcd_int 0070      ___lwdiv@quotient 0075        __size_of_delay 003E              _GO_nDONE 00FA  
         __stringbase 0008      __size_of_adc_con 009A      __size_of___lwdiv 004E      __size_of___lwmod 0044  
    __size_of_lcd_int 0019       ___lwdiv@divisor 0070       ___lwdiv@counter 0077         __size_of_main 005B  
       __size_of_show 0021      ___lwmod@dividend 007A             stringcode 0003       ___lwmod@divisor 0078  
     ___lwmod@counter 007D              stringdir 0003              stringtab 0003  
